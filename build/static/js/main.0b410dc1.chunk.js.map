{"version":3,"sources":["assets/movieCrud.png","components/Login.js","components/Home.js","components/Logout.js","components/Profile.js","components/Navbar.js","queries/queries.js","components/Movie.js","components/MovieTable.js","components/Movies.js","components/UserMovies.js","components/AddMovie.js","components/EditMovie.js","components/ShowMovie.js","components/Settings.js","components/Auth.js","index.js"],"names":["module","exports","__webpack_require__","p","Login","loginWithRedirect","useAuth0","react_default","a","createElement","className","onClick","Home","alt","src","Logo","components_Login","Logout","logout","id","event","localStorage","removeItem","logoutParams","returnTo","window","location","origin","Profile","_useAuth","user","isAuthenticated","isLoading","role","data-bs-toggle","aria-expanded","picture","name","Navbar","logo","type","data-bs-target","aria-controls","aria-label","Link","to","components_Profile","aria-labelledby","components_Logout","getUsersQuery","gql","_templateObject","getUserByAuthIdQuery","_templateObject2","_templateObject3","authenticateUserMutation","_templateObject4","addUserMutation","_templateObject5","getMoviesQuery","_templateObject6","_templateObject7","_templateObject8","_templateObject9","getMoviesByUserIdQuery","_templateObject10","getMovieByIdQuery","_templateObject11","addMovieMutation","_templateObject12","updateMovieMutation","_templateObject13","deleteMovieMutation","_templateObject14","Movie","_templateObject15","props","movieList","movies","refetchMovies","_useMutation","useMutation","deleteMovie","Object","slicedToArray","map","movie","editLink","showLink","key","poster_url","title","directors","year","rating","variables","refetchQueries","query","then","MovieTable","components_Movie","Movies","_useQuery","useQuery","moviesData","data","moviesRefetch","refetch","_useState","useState","_useState2","setMovies","useEffect","components_Navbar","components_MovieTable","UserMovies","userMovies","setUserMovies","userData","authId","sub","skip","_useQuery2","userByAuthId","userMoviesData","userMoviesRefetch","moviesByUserId","AddMovie","redirectToReferrer","setRedirectToReferrer","_useState3","_useState4","selectedRating","setSelectedRating","addMovie","Redirect","onSubmit","preventDefault","target","value","parseInt","posterURL","user_id","catch","error","console","required","pattern","placeholder","min","max","onChange","history","goBack","EditMovie","updateMovie","match","params","movieData","movieById","defaultValue","log","ShowMovie","Settings","Auth","_ref","updateToken","usersData","authenticateUser","_useMutation3","addUser","handleUserAuth","users","find","existingUser","email","username","nickname","response","token","setItem","App","getItem","setToken","client","ApolloClient","uri","cache","InMemoryCache","headers","Authorization","concat","auth0_react_esm","domain","process","clientId","authorizationParams","redirect_uri","ApolloProvider","BrowserRouter","Switch","Route","path","component","exact","components_Auth","localToken","ReactDOM","render","src_App","document","getElementById"],"mappings":"iGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,iPCYzBC,EATD,WAAM,IACRC,EAAsBC,cAAtBD,kBACR,OACIE,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yBAAyBC,QAAS,kBAAMN,MAAqB,WCSxEO,EAVF,WACT,OACIL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOG,IAAI,iBAAiBC,IAAKC,MAChDR,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAY,aAC1BH,EAAAC,EAAAC,cAACO,EAAD,gBCQGC,EAfA,WAAM,IACTC,EAAWZ,cAAXY,OAOR,OACIX,EAAAC,EAAAC,cAAA,UAAQC,UAAU,8BAA8BS,GAAG,SAASR,QAN3C,SAACS,GAClBC,aAAaC,WAAW,YACxBJ,EAAO,CAAEK,aAAc,CAAEC,SAAUC,OAAOC,SAASC,YAIgC,YC4B5EC,EArCC,WAAM,IAAAC,EAC2BvB,cAArCwB,EADUD,EACVC,KAAMC,EADIF,EACJE,gBAEd,OAHkBF,EACaG,UAIvBzB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAA4BuB,KAAK,UAC5C1B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAkB,eAEtCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAA4BuB,KAAK,UAC5C1B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAkB,eAEtCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAA4BuB,KAAK,UAC5C1B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAkB,eAEtCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAA4BuB,KAAK,UAC5C1B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAkB,eAEtCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAA4BuB,KAAK,UAC5C1B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAkB,gBAM9CqB,EAEIxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6CAA6CuB,KAAK,SAASC,iBAAe,WAAWC,gBAAc,SAC9G5B,EAAAC,EAAAC,cAAA,OAAKU,GAAG,cAAcL,IAAKgB,EAAKM,QAASvB,IAAKiB,EAAKO,OAClDP,EAAKO,MAKX,MC4BIC,EA1DA,WACX,OACI/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sDACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUG,IAAI,OAAOC,IAAKyB,OAE7ChC,EAAAC,EAAAC,cAAA,UACAC,UAAU,iBACV8B,KAAK,SACLN,iBAAe,WACfO,iBAAe,aACfC,gBAAc,YACdP,gBAAc,QACdQ,aAAW,qBACXpC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAEpBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BS,GAAG,aACzCZ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAMlC,UAAU,qBAAqBmC,GAAG,WAAU,WAItDtC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAMlC,UAAU,qBAAqBmC,GAAG,eAAc,iBAK9DtC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBACVH,EAAAC,EAAAC,cAACqC,EAAD,MACAvC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mCAAmCqC,kBAAgB,kBAC7DxC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAMlC,UAAU,8BAA8BmC,GAAG,sBAAqB,cAI1EtC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAMlC,UAAU,8BAA8BmC,GAAG,aAAY,aAIjEtC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACuC,EAAD,CAAQtC,UAAU,09JCnDtD,IAAMuC,EAAgBC,YAAHC,KAwBbC,GAZmBF,YAAHG,KAYOH,YAAHI,MAYpBC,EAA2BL,YAAHM,KAkBxBC,EAAkBP,YAAHQ,KAkEfC,GAhDqBT,YAAHU,KAwBGV,YAAHW,KAYOX,YAAHY,KAYLZ,YAAHa,MAadC,EAAyBd,YAAHe,KAatBC,EAAoBhB,YAAHiB,KAajBC,EAAmBlB,YAAHmB,KA4BhBC,EAAsBpB,YAAHqB,KA2BnBC,EAAsBtB,YAAHuB,KCnKVC,GDgLiBxB,YAAHyB,KC/Nf,SAACC,GAAU,IACbC,EAAqCD,EAArCC,UAAWC,EAA0BF,EAA1BE,OAAQC,EAAkBH,EAAlBG,cADNC,EAEEC,YAAYT,GAA5BU,EAFcC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,MAgBrB,OAAIF,EACOA,EAAOO,IAAI,SAACC,GACf,IAAMC,EAAW,gBAAkBD,EAAMnE,GACnCqE,EAAW,gBAAkBF,EAAMnE,GACzC,OACIZ,EAAAC,EAAAC,cAAA,MAAIgF,IAAKH,EAAMnE,GAAIT,UAAU,0EACzBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeG,IAAI,SAASC,IAAKwE,EAAMI,cAE1DnF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAMlC,UAAU,cAAcmC,GAAI2C,GAAWF,EAAMK,QAEvDpF,EAAAC,EAAAC,cAAA,WAAK,cAAY6E,EAAMM,WACvBrF,EAAAC,EAAAC,cAAA,WAAK,SAAO6E,EAAMO,MAClBtF,EAAAC,EAAAC,cAAA,WAAK,WAAS6E,EAAMQ,SAExBvF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAMC,GAAI0C,EAAU7E,UAAU,gCAA+B,QAC7DH,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAMC,GAAIgC,EAAWnE,UAAU,qCAAqCC,QAAS,kBAhC/EQ,EAgCkGmE,EAAMnE,QA/B1H+D,EAAY,CACRa,UAAW,CACP5E,GAAIA,GAER6E,eAAgB,CACZ,CAAEC,MAAOtC,GACT,CAAEsC,MAAOjC,MAEdkC,KAAK,kBAAMnB,MATG,IAAC5D,IAgC6G,eAOxH,OCnCAgF,EAVI,SAACvB,GAChB,OACIrE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBACVH,EAAAC,EAAAC,cAAC2F,EAAD,CAAO1F,UAAU,QAAQmE,UAAWD,EAAMC,UAAWC,OAAQF,EAAME,OAAQC,cAAeH,EAAMG,4BC2CjGsB,GA5CA,WAAM,IAAAC,EACoCC,YAAS5C,GAAhD6C,EADGF,EACTG,KAA2BC,EADlBJ,EACSK,QADTC,EAEWC,mBAAS,MAFpBC,EAAA3B,OAAAC,EAAA,EAAAD,CAAAyB,EAAA,GAEV9B,EAFUgC,EAAA,GAEFC,EAFED,EAAA,GAUjB,GANAE,oBAAU,WACFR,GACAO,EAAUP,EAAW1B,SAE1B,CAAC0B,IAEc,MAAdA,EAEA,OACIjG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAACwG,EAAD,MACA1G,EAAAC,EAAAC,cAACyG,EAAD,CAAYrC,UAJF,UAIwBC,OAAQA,EAAQC,cAAe2B,KAK7E,OACInG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAACwG,EAAD,MACA1G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAA4BuB,KAAK,UAC5C1B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAkB,eAEtCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAA4BuB,KAAK,UAC5C1B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAkB,eAEtCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAA4BuB,KAAK,UAC5C1B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAkB,eAEtCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAA4BuB,KAAK,UAC5C1B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAkB,eAEtCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAA4BuB,KAAK,UAC5C1B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAkB,kBCoBvCyG,GAxDI,WAAM,IAAAtF,EACavB,cAA1BwB,EADaD,EACbC,KAAMC,EADOF,EACPE,gBADO6E,EAEeC,mBAAS,MAFxBC,EAAA3B,OAAAC,EAAA,EAAAD,CAAAyB,EAAA,GAEdQ,EAFcN,EAAA,GAEFO,EAFEP,EAAA,GAGPQ,EAAaf,YAASnD,EAAsB,CACtD2C,UAAW,CACPwB,OAAQxF,EAAkBD,EAAK0F,IAAM,MAEzCC,MAAO3F,IAJH2E,KAHaiB,EASwCnB,YAASvC,EAAwB,CAC1F+B,UAAW,CACP5E,GAAImG,EAAWA,EAASK,aAAaxG,GAAK,MAE9CsG,MAAOH,IAJGM,EATOF,EASbjB,KAA+BoB,EATlBH,EASSf,QAa9B,GANAK,oBAAU,WACFY,GACAP,EAAcO,EAAeE,iBAElC,CAACF,IAEkB,MAAlBA,EAEA,OACIrH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAACwG,EAAD,MACA1G,EAAAC,EAAAC,cAACyG,EAAD,CAAYrC,UAJF,qBAIwBC,OAAQsC,EAAYrC,cAAe8C,KAKjF,OACItH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAACwG,EAAD,MACA1G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAA4BuB,KAAK,UAC5C1B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAkB,eAEtCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAA4BuB,KAAK,UAC5C1B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAkB,eAEtCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAA4BuB,KAAK,UAC5C1B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAkB,eAEtCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAA4BuB,KAAK,UAC5C1B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAkB,eAEtCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAA4BuB,KAAK,UAC5C1B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAkB,2BC4EvCqH,GA5HE,SAACnD,GACd,IADwB/C,EAIUvB,cAA1BwB,EAJgBD,EAIhBC,KAAMC,EAJUF,EAIVE,gBAJU6E,EAK4BC,oBAAS,GALrCC,EAAA3B,OAAAC,EAAA,EAAAD,CAAAyB,EAAA,GAKjBoB,EALiBlB,EAAA,GAKGmB,EALHnB,EAAA,GAAAoB,EAMoBrB,mBAAS,GAN7BsB,EAAAhD,OAAAC,EAAA,EAAAD,CAAA+C,EAAA,GAMjBE,EANiBD,EAAA,GAMDE,EANCF,EAAA,GAAAnD,EAOHC,YAAYb,GAAzBkE,EAPgBnD,OAAAC,EAAA,EAAAD,CAAAH,EAAA,MAQVsC,EAAaf,YAASnD,EAAsB,CACtD2C,UAAW,CACPwB,OAAQxF,EAAkBD,EAAK0F,IAAM,MAEzCC,MAAO3F,IAJH2E,KAmCR,OAAIuB,EACOzH,EAAAC,EAAAC,cAAC8H,GAAA,EAAD,CAAU1F,GAAG,YAGrBd,EAEKxB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACwG,EAAD,MACA1G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOG,IAAI,iBAAiBC,IAAKC,MAChDR,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAU,cACxBH,EAAAC,EAAAC,cAAA,QAAM+H,SAnCD,SAACpH,GAClBA,EAAMqH,iBACN,IAAM9C,EAAQvE,EAAMsH,OAAO/C,MAAMgD,MAC3B/C,EAAYxE,EAAMsH,OAAO9C,UAAU+C,MACnC9C,EAAO+C,SAASxH,EAAMsH,OAAO7C,KAAK8C,OAClC7C,EAAS8C,SAASxH,EAAMsH,OAAO5C,OAAO6C,OACtCjD,EAAatE,EAAMsH,OAAOG,UAAUF,MACpCG,EAAUxB,EAASK,aAAaxG,GAEtCmH,EAAS,CACLvC,UAAW,CACPJ,MAAOA,EACPC,UAAWA,EACXC,KAAMA,EACNC,OAAQA,EACRJ,WAAYA,EACZoD,QAASA,GAEb9C,eAAgB,CAAC,CAAEC,MAAOtC,MAC3BuC,KAAK,cAAU6C,MAAM,SAACC,GACrBC,QAAQD,MAAM,uBAAwBA,KACvC9C,KAAK,kBAAM+B,GAAsB,OAepB1H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SACAyI,UAAQ,EACR7G,KAAK,QACLG,KAAK,OACL2G,QAAQ,KACRxD,MAAM,oCACNjF,UAAU,eACVS,GAAG,aACHiI,YAAY,WAEhB7I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SACAyI,UAAQ,EACR7G,KAAK,YACLG,KAAK,OACL2G,QAAQ,gBACRxD,MAAM,oDACNjF,UAAU,eACVS,GAAG,iBACHiI,YAAY,eAEhB7I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SACAyI,UAAQ,EACR7G,KAAK,OACLG,KAAK,OACL2G,QAAQ,kBACRxD,MAAM,yCACNjF,UAAU,eACVS,GAAG,YACHiI,YAAY,UAEhB7I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SACAyI,UAAQ,EACR7G,KAAK,YACLG,KAAK,OACL2G,QAAQ,cACRxD,MAAM,6DACNjF,UAAU,eACVS,GAAG,iBACHiI,YAAY,gBAEhB7I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,aAAO,WAAS2H,GAChB7H,EAAAC,EAAAC,cAAA,SAAOyI,UAAQ,EAAC7G,KAAK,SAASG,KAAK,QAAQ9B,UAAU,eAAe2I,IAAI,IAAIC,IAAI,IAAIC,SAtFlF,SAACnI,GACvBiH,EAAkBjH,EAAMsH,OAAOC,WAuFfpI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,+BAA+B8B,KAAK,UAAS,UAG/DjC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAMC,GAAG,IAAInC,UAAU,8BAA8BC,QA1G9D,WACXiE,EAAM4E,QAAQC,WAyG4E,cAUtFlJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACwG,EAAD,QCoBDyC,GA5IG,SAAC9E,GACf,IADyBgC,EAI2BC,oBAAS,GAJpCC,EAAA3B,OAAAC,EAAA,EAAAD,CAAAyB,EAAA,GAIlBoB,EAJkBlB,EAAA,GAIEmB,EAJFnB,EAAA,GAAAoB,EAKmBrB,mBAAS,GAL5BsB,EAAAhD,OAAAC,EAAA,EAAAD,CAAA+C,EAAA,GAKlBE,EALkBD,EAAA,GAKFE,EALEF,EAAA,GAAAnD,EAMDC,YAAYX,GAA5BqF,EANiBxE,OAAAC,EAAA,EAAAD,CAAAH,EAAA,MAOjB7D,EAAOyD,EAAMgF,MAAMC,OAAnB1I,GACM2I,EAAcvD,YAASrC,EAAmB,CACpD6B,UAAW,CACP5E,GAAIA,GAAU,MAElBsG,MAAOtG,IAJHsF,KAORO,oBAAU,WACF8C,GAAaA,EAAUC,WAAaD,EAAUC,UAAUjE,QACxDuC,EAAkByB,EAAUC,UAAUjE,SAE3C,CAACgE,IA8BJ,GAAI9B,EACA,OAAOzH,EAAAC,EAAAC,cAAC8H,GAAA,EAAD,CAAU1F,GAAG,YAGxB,GAAGiH,EAAW,CACV,IAAMxE,EAAQwE,EAAUC,UACxB,OACIxJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACwG,EAAD,MACA1G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAU,eAAa4E,EAAMK,OAC3CpF,EAAAC,EAAAC,cAAA,OAAKI,IAAI,SAASC,IAAKwE,EAAMI,WAAYhF,UAAU,WACnDH,EAAAC,EAAAC,cAAA,QAAM+H,SAnCD,SAACpH,GAClBA,EAAMqH,iBACN,IAAM9C,EAAQvE,EAAMsH,OAAO/C,MAAMgD,MAC3B/C,EAAYxE,EAAMsH,OAAO9C,UAAU+C,MACnC9C,EAAO+C,SAASxH,EAAMsH,OAAO7C,KAAK8C,OAClC7C,EAAS8C,SAASxH,EAAMsH,OAAO5C,OAAO6C,OACtCjD,EAAatE,EAAMsH,OAAOG,UAAUF,MAE1CgB,EAAY,CACR5D,UAAW,CACP5E,GAAIA,EACJwE,MAAOA,EACPC,UAAWA,EACXC,KAAMA,EACNC,OAAQA,EACRJ,WAAYA,GAEhBM,eAAgB,CAAC,CAAEC,MAAOtC,MAC3BuC,KAAK,cAAU6C,MAAM,SAACC,GACrBC,QAAQD,MAAM,yBAA0BA,KACzC9C,KAAK,kBAAM+B,GAAsB,OAgBpB1H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SACAyI,UAAQ,EACR7G,KAAK,QACLG,KAAK,OACL2G,QAAQ,KACRxD,MAAM,oCACNjF,UAAU,eACVS,GAAG,aACH6I,aAAc1E,EAAMK,SAExBpF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SACAyI,UAAQ,EACR7G,KAAK,YACLG,KAAK,OACL2G,QAAQ,gBACRxD,MAAM,oDACNjF,UAAU,eACVS,GAAG,iBACH6I,aAAc1E,EAAMM,aAExBrF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SACAyI,UAAQ,EACR7G,KAAK,OACLG,KAAK,OACL2G,QAAQ,kBACRxD,MAAM,yCACNjF,UAAU,eACVS,GAAG,YACH6I,aAAc1E,EAAMO,QAExBtF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SACAyI,UAAQ,EACR7G,KAAK,YACLG,KAAK,OACL2G,QAAQ,cACRxD,MAAM,6DACNjF,UAAU,eACVS,GAAG,iBACH6I,aAAc1E,EAAMI,cAExBnF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,aAAO,WAAS2H,GAChB7H,EAAAC,EAAAC,cAAA,SACAyI,UAAQ,EACR7G,KAAK,SACLG,KAAK,QACL9B,UAAU,eACV2I,IAAI,IACJC,IAAI,IACJX,MAAOP,EACPmB,SA/FE,SAACnI,GACvBiH,EAAkBjH,EAAMsH,OAAOC,OAC/BM,QAAQgB,IAAI7I,EAAMsH,OAAOC,WA+FTpI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,+BAA+B8B,KAAK,UAAS,UAG/DjC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAMC,GAAG,IAAInC,UAAU,8BAA8BC,QAzH9D,WACXiE,EAAM4E,QAAQC,WAwH4E,cAS1F,OACIlJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACwG,EAAD,QCtGDiD,GAhCG,SAACtF,GAAU,IACjBzD,EAAOyD,EAAMgF,MAAMC,OAAnB1I,GACM2I,EAAcvD,YAASrC,EAAmB,CACpD6B,UAAW,CACP5E,GAAIA,GAAU,QAFdsF,KAMR,GAAiB,MAAbqD,EAAmB,CACnB,IAAMxE,EAAQwE,EAAUC,UACxB,OACIxJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACwG,EAAD,MACA1G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAW4E,EAAMK,OAC/BpF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASG,IAAI,SAASC,IAAKwE,EAAMI,aAChDnF,EAAAC,EAAAC,cAAA,UAAI,UAAQ6E,EAAMK,OAClBpF,EAAAC,EAAAC,cAAA,UAAI,cAAY6E,EAAMM,WACtBrF,EAAAC,EAAAC,cAAA,UAAI,SAAO6E,EAAMO,MACjBtF,EAAAC,EAAAC,cAAA,UAAI,WAAS6E,EAAMQ,UAK/B,OACIvF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACwG,EAAD,QCpBDkD,GARE,WACb,OACI5J,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACwG,EAAD,QC2DGmD,GA7DF,SAAAC,GAAqB,IAAlBC,EAAkBD,EAAlBC,YAAkBzI,EACIvB,cAA1BwB,EADsBD,EACtBC,KAAMC,EADgBF,EAChBE,gBACAwI,EAAchE,YAAStD,GAA7BwD,KAFsBzB,EAGDC,YAAY1B,GAAjCiH,EAHsBrF,OAAAC,EAAA,EAAAD,CAAAH,EAAA,MAAAyF,EAIVxF,YAAYxB,GAAxBiH,EAJsBvF,OAAAC,EAAA,EAAAD,CAAAsF,EAAA,MAM9BzD,oBAAU,WACFjF,GACA4I,EAAe7I,IAEpB,CAACC,EAAiBD,IAErB,IAAM6I,EAAiB,SAAC7I,GAChByI,IACqBA,EAAUK,MAAMC,KACjC,SAACC,GAAD,OAAkBA,EAAaC,QAAUjJ,EAAKiJ,QAI9CP,EAAiB,CACbzE,UAAW,CACPwB,OAAQzF,EAAK0F,IACbwD,SAAUlJ,EAAKmJ,SACfF,MAAOjJ,EAAKiJ,MACZ3I,QAASN,EAAKM,SAElB4D,eAAgB,CAAC,CAAEC,MAAOhD,MAC3BiD,KAAK,SAAAgF,GACJ,IAAMC,EAAQD,EAASzE,KAAK+D,iBAAiBW,MAC7C9J,aAAa+J,QAAQ,WAAYD,GAC9Bb,GACCA,MAELvB,MAAM,SAACC,GACNC,QAAQD,MAAM,8BAA+BA,KAGjD0B,EAAQ,CACJ3E,UAAW,CACPwB,OAAQzF,EAAK0F,IACbwD,SAAUlJ,EAAKmJ,SACfF,MAAOjJ,EAAKiJ,MACZ3I,QAASN,EAAKM,SAElB4D,eAAgB,CAAC,CAAEC,MAAOhD,MAC3BiD,KAAK,SAAAgF,GACJ,IAAMC,EAAQD,EAASzE,KAAKiE,QAAQS,MACpC9J,aAAa+J,QAAQ,WAAYD,GAC9Bb,GACCA,MAELvB,MAAM,SAACC,GACNC,QAAQD,MAAM,sBAAuBA,OAMrD,OAAO,MC/CLqC,GAAM,WAAM,IAAAzE,EACYC,mBAASxF,aAAaiK,QAAQ,aAD1CxE,EAAA3B,OAAAC,EAAA,EAAAD,CAAAyB,EAAA,GACPuE,EADOrE,EAAA,GACAyE,EADAzE,EAAA,GAQR0E,EAAS,IAAIC,IAAa,CAC5BC,IAAK,gCACLC,MAAO,IAAIC,IACXC,QAAS,CACLC,cAAeX,EAAK,GAAAY,OAAMZ,GAAU,MAO5C,OACI5K,EAAAC,EAAAC,cAACuL,EAAA,EAAD,CAAeC,OAJJC,8BAIoBC,SAHlBD,mCAGsCE,oBAAqB,CAAEC,aAAc5K,OAAOC,SAASC,OAAS,YAC7GpB,EAAAC,EAAAC,cAAC6L,EAAA,EAAD,CAAgBd,OAAQA,GACpBjL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC8L,EAAA,EAAD,KACIhM,EAAAC,EAAAC,cAAC+L,EAAA,EAAD,KACIjM,EAAAC,EAAAC,cAACgM,EAAA,EAAD,CAAOC,KAAK,YAAYC,UAAWxC,KACnC5J,EAAAC,EAAAC,cAACgM,EAAA,EAAD,CAAOC,KAAK,mBAAmBC,UAAWzC,KAC1C3J,EAAAC,EAAAC,cAACgM,EAAA,EAAD,CAAOC,KAAK,mBAAmBC,UAAWjD,KAC1CnJ,EAAAC,EAAAC,cAACgM,EAAA,EAAD,CAAOC,KAAK,cAAcC,UAAW5E,KACrCxH,EAAAC,EAAAC,cAACgM,EAAA,EAAD,CAAOC,KAAK,qBAAqBC,UAAWxF,KAC5C5G,EAAAC,EAAAC,cAACgM,EAAA,EAAD,CAAOC,KAAK,UAAUC,UAAWtG,KACjC9F,EAAAC,EAAAC,cAACgM,EAAA,EAAD,CAAOG,OAAK,EAACF,KAAK,IAAIC,UAAW/L,MAGzCL,EAAAC,EAAAC,cAACoM,GAAD,CAAMvC,YA/BF,WAChB,IAAMwC,EAAazL,aAAaiK,QAAQ,YACxCC,EAASuB,UAoCjBC,IAASC,OAAOzM,EAAAC,EAAAC,cAACwM,GAAD,MAASC,SAASC,eAAe","file":"static/js/main.0b410dc1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/movieCrud.a3a7187a.png\";","import React from \"react\"\nimport { useAuth0 } from \"@auth0/auth0-react\"\n\nconst Login = () => {\n    const { loginWithRedirect } = useAuth0()\n    return (\n        <button className=\"btn btn-primary button\" onClick={() => loginWithRedirect()}>\n            Log In\n        </button>\n    )\n}\n\nexport default Login\n","import React from \"react\"\nimport Logo from \"../assets/movieCrud.png\"\nimport Login from \"./Login\"\nimport \"../style/style.css\"\n\nconst Home = () => {\n    return (\n        <div className=\"Home\">\n            <img className=\"logo\" alt=\"MovieCrud Logo\" src={Logo} />\n            <h1 className=\"app-title\">MovieCrud</h1>\n            <Login />\n        </div>\n    )\n}\n\nexport default Home\n","import React from \"react\"\nimport { useAuth0 } from \"@auth0/auth0-react\"\n\nconst Logout = () => {\n    const { logout } = useAuth0()\n\n    const handleLogout = (event) => {\n        localStorage.removeItem(\"jwtToken\")\n        logout({ logoutParams: { returnTo: window.location.origin } })\n    }\n\n    return (\n        <button className=\"dropdown-item profile-links\" id=\"logout\" onClick={handleLogout}>\n            Log Out\n        </button>\n    )\n}\n\nexport default Logout\n","import React from \"react\"\nimport { useAuth0 } from \"@auth0/auth0-react\"\n\nconst Profile = () => {\n    const { user, isAuthenticated, isLoading } = useAuth0()\n\n    if (isLoading) {\n        return (\n            <div>\n                <div className=\"spinner-grow text-primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n                <div className=\"spinner-grow text-primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n                <div className=\"spinner-grow text-primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n                <div className=\"spinner-grow text-primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n                <div className=\"spinner-grow text-primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n            </div>\n        )\n    }\n\n    if (isAuthenticated) {\n        return (\n            <div className=\"nav-link nav-links Profile dropdown-toggle\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                <img id=\"userPicture\" src={user.picture} alt={user.name} />\n                {user.name}\n            </div>\n        )\n    }\n\n    return null\n}\n\nexport default Profile\n","import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport Logout from \"./Logout\"\nimport Profile from \"./Profile\"\nimport logo from \"../assets/movieCrud.png\"\nimport \"../style/style.css\"\n\nconst Navbar = () => {\n    return (\n        <div className=\"Navbar\">\n            <nav className=\"navbar navbar-expand-lg navBar navbar-dark bg-dark\">\n                <div className=\"container-fluid\">\n                    <div className=\"navbar-brand navBarBrand\">\n                        <img className=\"navLogo\" alt=\"Logo\" src={logo} />\n                    </div>\n                    <button\n                    className=\"navbar-toggler\"\n                    type=\"button\"\n                    data-bs-toggle=\"collapse\"\n                    data-bs-target=\"#navbarNav\"\n                    aria-controls=\"navbarNav\"\n                    aria-expanded=\"false\"\n                    aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link nav-links\" to=\"/movies\">\n                                Movies\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link nav-links\" to=\"/movies/add\">\n                                Add To List\n                            </Link>\n                        </li>\n                    </ul>\n                    <ul className=\"navbar-nav\">\n                        <li className=\"nav-item dropdown\">\n                            <Profile />\n                            <ul className=\"dropdown-menu dropdown-menu-dark\" aria-labelledby=\"navbarDropdown\">\n                                <li>\n                                    <Link className=\"dropdown-item profile-links\" to=\"/movies/userMovies\">\n                                        My Movies\n                                    </Link>\n                                </li>\n                                <li>\n                                    <Link className=\"dropdown-item profile-links\" to=\"/settings\">\n                                        Settings\n                                    </Link>\n                                </li>\n                                <li>\n                                    <Logout className=\"profile-links\" />\n                                </li>\n                            </ul>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </nav>\n    </div>\n    )\n}\n\nexport default Navbar\n","import { gql } from \"@apollo/client\"\n\nconst getUsersQuery = gql`\n    {\n        users {\n            id\n            authId\n            username\n            email\n            picture\n        }\n    }\n`\n\nconst getUserByIdQuery = gql`\n    query GetUserById($id: ID!) {\n        userById(id: $id) {\n            id\n            authId\n            username\n            email\n            picture\n        }\n    }\n`\n\nconst getUserByAuthIdQuery = gql`\n    query GetUserByAuthId($authId: String!) {\n        userByAuthId(authId: $authId) {\n            id\n            authId\n            username\n            email\n            picture\n        }\n    }\n`\n\nconst authenticateUserMutation = gql`\n    mutation (\n        $authId: String!\n        $username: String!\n        $email: String!\n        $picture: String!\n    ) {\n        authenticateUser(\n            authId: $authId\n            username: $username\n            email: $email\n            picture: $picture\n        ) {\n            token\n        }\n    }\n`\n\nconst addUserMutation = gql`\n    mutation (\n        $authId: String!\n        $username: String!\n        $email: String!\n        $picture: String!\n    ) {\n        addUser(\n            authId: $authId\n            username: $username\n            email: $email\n            picture: $picture\n        ) {\n            token\n        }\n    }\n`\n\nconst updateUserMutation = gql`\n    mutation (\n        $id: ID!\n        $authId: String!\n        $username: String!\n        $email: String!\n        $picture: String!\n    ) {\n        updateUser(\n            id: $id\n            authId: $authId\n            username: $username\n            email: $email\n            picture: $picture\n        ) {\n            id\n            authId\n            username\n            email\n            picture\n        }\n    }\n`\n\nconst deleteUserMutation = gql`\n    mutation ($id: ID!) {\n        deleteUser(id: $id) {\n            id\n            authId\n            username\n            email\n            picture\n        }\n    }\n`\n\nconst deleteAllUsersMutation = gql`\n    mutation {\n        deleteAllUsers {\n            id\n            authId\n            username\n            email\n            picture\n        }\n    }\n`\n\nconst getMoviesQuery = gql`\n    {\n        movies {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n        }\n    }\n`\n\nconst getMoviesByUserIdQuery = gql`\n    query GetMoviesByUserId($id: ID!) {\n        moviesByUserId(id: $id) {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n        }\n    }\n`\n\nconst getMovieByIdQuery = gql`\n    query GetMovieById($id: ID!) {\n        movieById(id: $id) {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n        }\n    }\n`\n\nconst addMovieMutation = gql`\n    mutation (\n        $title: String!\n        $directors: String!\n        $year: Int!\n        $rating: Int!\n        $poster_url: String!\n        $user_id: Int!\n    ) {\n        addMovie(\n            title: $title\n            directors: $directors\n            year: $year\n            rating: $rating\n            poster_url: $poster_url\n            user_id: $user_id\n        ) {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n            user_id\n        }\n    }\n`\n\nconst updateMovieMutation = gql`\n    mutation (\n        $id: ID!\n        $title: String!\n        $directors: String!\n        $year: Int!\n        $rating: Int!\n        $poster_url: String!\n    ) {\n        updateMovie(\n            id: $id\n            title: $title\n            directors: $directors\n            year: $year\n            rating: $rating\n            poster_url: $poster_url\n        ) {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n        }\n    }\n`\n\nconst deleteMovieMutation = gql`\n    mutation ($id: ID!) {\n        deleteMovie(id: $id) {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n        }\n    }\n`\n\nconst deleteAllMoviesMutation = gql`\n    mutation {\n        deleteAll {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n        }\n    }\n`\n\nexport {\n    getUsersQuery,\n    getUserByIdQuery,\n    getUserByAuthIdQuery,\n    authenticateUserMutation,\n    addUserMutation,\n    updateUserMutation,\n    deleteUserMutation,\n    deleteAllUsersMutation,\n    getMoviesQuery,\n    getMoviesByUserIdQuery,\n    getMovieByIdQuery,\n    addMovieMutation,\n    updateMovieMutation,\n    deleteMovieMutation,\n    deleteAllMoviesMutation,\n}\n","import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { useMutation } from \"@apollo/client\"\nimport { getMoviesQuery, getMoviesByUserIdQuery, deleteMovieMutation } from \"../queries/queries\"\nimport \"../style/style.css\"\n\nconst Movie = (props) => {\n    const { movieList, movies, refetchMovies } = props\n    const [deleteMovie ] = useMutation(deleteMovieMutation)\n\n    const handleDelete = (id) => {\n        deleteMovie({\n            variables: {\n                id: id\n            },\n            refetchQueries: [\n                { query: getMoviesQuery },\n                { query: getMoviesByUserIdQuery }\n            ],\n        }).then(() => refetchMovies())\n    }\n\n    if (movies) {\n        return movies.map((movie) => {\n            const editLink = \"/movies/edit/\" + movie.id\n            const showLink = \"/movies/show/\" + movie.id\n            return (\n                <li key={movie.id} className=\"list-group-item d-flex justify-content-between align-items-start Movie\">\n                    <div className=\"image-container\">\n                        <img className=\"movie-poster\" alt=\"poster\" src={movie.poster_url} />\n                    </div>\n                    <div className=\"ms-2 me-auto\">\n                        <div className=\"movie-info\">\n                            <div className=\"fw-bold\">\n                                <Link className=\"movie-title\" to={showLink}>{movie.title}</Link>\n                            </div>\n                            <div>Directors: {movie.directors}</div>\n                            <div>Year: {movie.year}</div>\n                            <div>Rating: {movie.rating}</div>\n                        </div>\n                        <div className=\"movie-buttons\">\n                            <Link to={editLink} className=\"btn btn-primary movie-button\">Edit</Link>\n                            <Link to={movieList} className=\"ml-5px btn btn-danger movie-button\" onClick={() => handleDelete(movie.id)}>Delete</Link>\n                        </div>\n                    </div>\n                </li>\n            )\n        })\n    } else {\n        return null\n    }\n}\n\nexport default Movie\n","import React from \"react\"\nimport Movie from \"./Movie\"\nimport \"../style/style.css\"\n\nconst MovieTable = (props) => {\n    return (\n        <div className=\"MovieTable\">\n            <ul className=\"list-group movie-list\">\n                <Movie className=\"Movie\" movieList={props.movieList} movies={props.movies} refetchMovies={props.refetchMovies}/>\n            </ul>\n        </div>\n    )\n}\n\nexport default MovieTable\n","import React, { useState, useEffect } from \"react\"\nimport Navbar from \"./Navbar\"\nimport MovieTable from \"./MovieTable\"\nimport { useQuery } from \"@apollo/client\"\nimport { getMoviesQuery } from \"../queries/queries\"\nimport \"../style/style.css\"\n\nconst Movies = () => {\n    const { data: moviesData, refetch: moviesRefetch } = useQuery(getMoviesQuery)\n    const [movies, setMovies] = useState(null)\n\n    useEffect(() => {\n        if (moviesData) {\n            setMovies(moviesData.movies)\n        }\n    }, [moviesData])\n\n    if (moviesData != null) {\n        const movieList = \"/movies\"\n        return (\n            <div className=\"Movies\">\n                <Navbar />\n                <MovieTable movieList={movieList} movies={movies} refetchMovies={moviesRefetch}/>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"Movies\">\n            <Navbar />\n            <div className=\"loader\">\n                <div className=\"spinner-grow text-primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n                <div className=\"spinner-grow text-primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n                <div className=\"spinner-grow text-primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n                <div className=\"spinner-grow text-primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n                <div className=\"spinner-grow text-primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Movies\n","import React, { useState, useEffect } from \"react\"\nimport Navbar from \"./Navbar\"\nimport MovieTable from \"./MovieTable\"\nimport { useAuth0 } from \"@auth0/auth0-react\"\nimport { useQuery } from \"@apollo/client\"\nimport { getMoviesByUserIdQuery, getUserByAuthIdQuery } from \"../queries/queries\"\nimport \"../style/style.css\"\n\nconst UserMovies = () => {\n    const { user, isAuthenticated } = useAuth0()\n    const [userMovies, setUserMovies] = useState(null)\n    const { data: userData } = useQuery(getUserByAuthIdQuery, {\n        variables: {\n            authId: isAuthenticated ? user.sub : null\n        },\n        skip: !user\n    })\n    const { data: userMoviesData, refetch: userMoviesRefetch } = useQuery(getMoviesByUserIdQuery, {\n        variables: {\n            id: userData ? userData.userByAuthId.id : null\n        },\n        skip: !userData\n    })\n\n    useEffect(() => {\n        if (userMoviesData) {\n            setUserMovies(userMoviesData.moviesByUserId)\n        }\n    }, [userMoviesData])\n\n    if (userMoviesData != null) {\n        const movieList = \"/movies/userMovies\"\n        return (\n            <div className=\"UserMovies\">\n                <Navbar />\n                <MovieTable movieList={movieList} movies={userMovies} refetchMovies={userMoviesRefetch}/>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"UserMovies\">\n            <Navbar />\n            <div className=\"loader\">\n                <div className=\"spinner-grow text-primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n                <div className=\"spinner-grow text-primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n                <div className=\"spinner-grow text-primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n                <div className=\"spinner-grow text-primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n                <div className=\"spinner-grow text-primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default UserMovies\n","import React, { useState } from \"react\"\nimport { Link, Redirect } from \"react-router-dom\"\nimport Logo from \"../assets/movieCrud.png\"\nimport Navbar from \"./Navbar\"\nimport { useAuth0 } from \"@auth0/auth0-react\"\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { getMoviesQuery, getUserByAuthIdQuery, addMovieMutation } from \"../queries/queries\"\nimport \"../style/style.css\"\n\nconst AddMovie = (props) => {\n    const goBack = () => {\n        props.history.goBack()\n    }\n    const { user, isAuthenticated } = useAuth0()\n    const [redirectToReferrer, setRedirectToReferrer] = useState(false)\n    const [selectedRating, setSelectedRating] = useState(5)\n    const [ addMovie ] = useMutation(addMovieMutation)\n    const { data: userData } = useQuery(getUserByAuthIdQuery, {\n        variables: {\n            authId: isAuthenticated ? user.sub : null\n        },\n        skip: !user\n    })\n\n    const handleRangeChange = (event) => {\n        setSelectedRating(event.target.value)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const title = event.target.title.value\n        const directors = event.target.directors.value\n        const year = parseInt(event.target.year.value)\n        const rating = parseInt(event.target.rating.value)\n        const poster_url = event.target.posterURL.value\n        const user_id = userData.userByAuthId.id\n\n        addMovie({\n            variables: {\n                title: title,\n                directors: directors,\n                year: year,\n                rating: rating,\n                poster_url: poster_url,\n                user_id: user_id\n            },\n            refetchQueries: [{ query: getMoviesQuery }]\n        }).then(() => {}).catch((error) => {\n            console.error(\"Error Adding Movie: \", error)\n        }).then(() => setRedirectToReferrer(true))\n    }\n\n    if (redirectToReferrer) {\n        return <Redirect to=\"/movies\" />\n    }\n\n    if(isAuthenticated) {\n        return (\n            <div>\n                <Navbar />\n                <div className=\"AddMovie\">\n                    <img className=\"logo\" alt=\"MovieCrud Logo\" src={Logo} />\n                    <h3 className=\"heading\">Add Movie:</h3>\n                    <form onSubmit={handleSubmit}>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"title\"\n                            type=\"text\"\n                            pattern=\".*\"\n                            title=\"Please enter a valid movie title.\"\n                            className=\"form-control\"\n                            id=\"inputTitle\"\n                            placeholder=\"Title\"/>\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"directors\"\n                            type=\"text\"\n                            pattern=\"[A-Za-z,\\s]+\"\n                            title=\"Please enter a valid name for the movie director.\"\n                            className=\"form-control\"\n                            id=\"inputDirectors\"\n                            placeholder=\"Directors\"/>\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"year\"\n                            type=\"text\"\n                            pattern=\"^(19|20)\\d{2}$\"\n                            title=\"Please enter a valid year (1900-2099).\"\n                            className=\"form-control\"\n                            id=\"inputYear\"\n                            placeholder=\"Year\"/>\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"posterURL\"\n                            type=\"text\"\n                            pattern=\"https?://.+\"\n                            title=\"Please enter a valid URL starting with http:// or https://\"\n                            className=\"form-control\"\n                            id=\"inputPosterURL\"\n                            placeholder=\"Poster URL\"/>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Rating: {selectedRating}</label>\n                            <input required name=\"rating\" type=\"range\" className=\"custom-range\" min=\"0\" max=\"5\" onChange={handleRangeChange} />\n                        </div>\n                        <div className=\"movie-buttons\">\n                            <button className=\"btn btn-primary movie-button\" type=\"submit\">\n                                Submit\n                            </button>\n                            <Link to=\"#\" className=\"btn btn-danger movie-button\" onClick={goBack}>\n                                Cancel\n                            </Link>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    } else {\n        return(\n            <div>\n                <Navbar />\n            </div>\n        )\n    }\n}\n\nexport default AddMovie\n","import React, { useEffect, useState } from \"react\"\nimport { Link, Redirect } from \"react-router-dom\"\nimport Navbar from \"./Navbar\"\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { getMoviesQuery, getMovieByIdQuery, updateMovieMutation } from \"../queries/queries\"\nimport \"../style/style.css\"\n\nconst EditMovie = (props) => {\n    const goBack = () => {\n        props.history.goBack()\n    }\n    const [redirectToReferrer, setRedirectToReferrer] = useState(false)\n    const [selectedRating, setSelectedRating] = useState(5)\n    const [ updateMovie ] = useMutation(updateMovieMutation)\n    const { id } = props.match.params\n    const { data: movieData } = useQuery(getMovieByIdQuery, {\n        variables: {\n            id: id ? id : null\n        },\n        skip: !id\n    })\n\n    useEffect(() => {\n        if (movieData && movieData.movieById && movieData.movieById.rating) {\n            setSelectedRating(movieData.movieById.rating)\n        }\n    }, [movieData])\n\n    const handleRangeChange = (event) => {\n        setSelectedRating(event.target.value)\n        console.log(event.target.value)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const title = event.target.title.value\n        const directors = event.target.directors.value\n        const year = parseInt(event.target.year.value)\n        const rating = parseInt(event.target.rating.value)\n        const poster_url = event.target.posterURL.value\n\n        updateMovie({\n            variables: {\n                id: id,\n                title: title,\n                directors: directors,\n                year: year,\n                rating: rating,\n                poster_url: poster_url\n            },\n            refetchQueries: [{ query: getMoviesQuery }]\n        }).then(() => {}).catch((error) => {\n            console.error(\"Error Updating Movie: \", error)\n        }).then(() => setRedirectToReferrer(true))\n    }\n\n    if (redirectToReferrer) {\n        return <Redirect to=\"/movies\" />\n    }\n\n    if(movieData) {\n        const movie = movieData.movieById\n        return (\n            <div>\n                <Navbar />\n                <div className=\"EditMovie\">\n                    <h3 className=\"heading\">Edit Movie: {movie.title}</h3>\n                    <img alt=\"Poster\" src={movie.poster_url} className=\"poster\" />\n                    <form onSubmit={handleSubmit}>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"title\"\n                            type=\"text\"\n                            pattern=\".*\"\n                            title=\"Please enter a valid movie title.\"\n                            className=\"form-control\"\n                            id=\"inputTitle\"\n                            defaultValue={movie.title} />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"directors\"\n                            type=\"text\"\n                            pattern=\"[A-Za-z,\\s]+\"\n                            title=\"Please enter a valid name for the movie director.\"\n                            className=\"form-control\"\n                            id=\"inputDirectors\"\n                            defaultValue={movie.directors} />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"year\"\n                            type=\"text\"\n                            pattern=\"^(19|20)\\d{2}$\"\n                            title=\"Please enter a valid year (1900-2099).\"\n                            className=\"form-control\"\n                            id=\"inputYear\"\n                            defaultValue={movie.year} />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"posterURL\"\n                            type=\"text\"\n                            pattern=\"https?://.+\"\n                            title=\"Please enter a valid URL starting with http:// or https://\"\n                            className=\"form-control\"\n                            id=\"inputPosterURL\"\n                            defaultValue={movie.poster_url} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Rating: {selectedRating}</label>\n                            <input\n                            required\n                            name=\"rating\"\n                            type=\"range\"\n                            className=\"custom-range\"\n                            min=\"0\"\n                            max=\"5\"\n                            value={selectedRating}\n                            onChange={handleRangeChange} />\n                        </div>\n                        <div className=\"movie-buttons\">\n                            <button className=\"btn btn-primary movie-button\" type=\"submit\">\n                                Submit\n                            </button>\n                            <Link to=\"#\" className=\"btn btn-danger movie-button\" onClick={goBack}>\n                                Cancel\n                            </Link>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                <Navbar />\n            </div>\n        )\n    }\n\n}\n\nexport default EditMovie\n","import React from \"react\"\nimport Navbar from \"./Navbar\"\nimport { useQuery } from \"@apollo/client\"\nimport { getMovieByIdQuery } from \"../queries/queries\"\nimport \"../style/style.css\"\n\nconst ShowMovie = (props) => {\n    const { id } = props.match.params\n    const { data: movieData } = useQuery(getMovieByIdQuery, {\n        variables: {\n            id: id ? id : null\n        }\n    })\n\n    if (movieData != null) {\n        const movie = movieData.movieById\n        return (\n            <div>\n                <Navbar />\n                <div className=\"ShowMovie\">\n                    <h3 className=\"heading\">{movie.title}</h3>\n                    <img className=\"poster\" alt=\"Poster\" src={movie.poster_url} />\n                    <h6>Title: {movie.title}</h6>\n                    <h6>Directors: {movie.directors}</h6>\n                    <h6>Year: {movie.year}</h6>\n                    <h6>Rating: {movie.rating}</h6>\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                <Navbar />\n            </div>\n        )\n    }\n}\n\nexport default ShowMovie\n","import React from \"react\"\nimport Navbar from \"./Navbar\"\nimport \"../style/style.css\"\n\nconst Settings = () => {\n    return (\n        <div>\n            <Navbar />\n        </div>\n    )\n}\n\nexport default Settings\n","import { useEffect } from \"react\"\nimport { useAuth0 } from \"@auth0/auth0-react\"\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { getUsersQuery, authenticateUserMutation, addUserMutation } from \"../queries/queries\"\n\nconst Auth = ({ updateToken }) => {\n    const { user, isAuthenticated } = useAuth0()\n    const { data: usersData } = useQuery(getUsersQuery)\n    const [ authenticateUser ] = useMutation(authenticateUserMutation)\n    const [ addUser ] = useMutation(addUserMutation)\n\n    useEffect(() => {\n        if (isAuthenticated) {\n            handleUserAuth(user)\n        }\n    }, [isAuthenticated, user])\n\n    const handleUserAuth = (user) => {\n        if (usersData) {\n            const existingUser = usersData.users.find(\n                (existingUser) => existingUser.email === user.email\n            )\n\n            if (existingUser) {\n                authenticateUser({\n                    variables: {\n                        authId: user.sub,\n                        username: user.nickname,\n                        email: user.email,\n                        picture: user.picture\n                    },\n                    refetchQueries: [{ query: getUsersQuery }]\n                }).then(response => {\n                    const token = response.data.authenticateUser.token\n                    localStorage.setItem(\"jwtToken\", token)\n                    if(updateToken){\n                        updateToken()\n                    }\n                }).catch((error) => {\n                    console.error(\"Error Authenticating User: \", error)\n                })\n            } else {\n                addUser({\n                    variables: {\n                        authId: user.sub,\n                        username: user.nickname,\n                        email: user.email,\n                        picture: user.picture\n                    },\n                    refetchQueries: [{ query: getUsersQuery }]\n                }).then(response => {\n                    const token = response.data.addUser.token\n                    localStorage.setItem(\"jwtToken\", token)\n                    if(updateToken){\n                        updateToken()\n                    }\n                }).catch((error) => {\n                    console.error(\"Error Adding User: \", error)\n                })\n            }\n        }\n    }\n\n    return null\n}\n\nexport default Auth\n","import React, { useState } from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\"\nimport { ApolloClient, InMemoryCache, ApolloProvider } from \"@apollo/client\"\nimport { Auth0Provider } from \"@auth0/auth0-react\"\nimport \"./style/style.css\"\n\nimport Home from \"./components/Home\"\nimport Movies from \"./components/Movies\"\nimport UserMovies from \"./components/UserMovies\"\nimport AddMovie from \"./components/AddMovie\"\nimport EditMovie from \"./components/EditMovie\"\nimport ShowMovie from \"./components/ShowMovie\"\nimport Settings from \"./components/Settings\"\nimport Auth from \"./components/Auth\"\n\nconst App = () => {\n    const [token, setToken] = useState(localStorage.getItem(\"jwtToken\"))\n\n    const updateToken = () => {\n        const localToken = localStorage.getItem(\"jwtToken\")\n        setToken(localToken)\n    }\n\n    const client = new ApolloClient({\n        uri: \"http://localhost:3001/graphql\",\n        cache: new InMemoryCache(),\n        headers: {\n            Authorization: token ? `${token}` : \"\",\n        }\n    })\n\n    const domain = process.env.REACT_APP_AUTH0_DOMAIN\n    const clientId = process.env.REACT_APP_AUTH0_CLIENT_ID\n\n    return (\n        <Auth0Provider domain={domain} clientId={clientId} authorizationParams={{ redirect_uri: window.location.origin + \"/movies\" }}>\n            <ApolloProvider client={client}>\n                <div>\n                    <BrowserRouter>\n                        <Switch>\n                            <Route path=\"/settings\" component={Settings} />\n                            <Route path=\"/movies/show/:id\" component={ShowMovie} />\n                            <Route path=\"/movies/edit/:id\" component={EditMovie} />\n                            <Route path=\"/movies/add\" component={AddMovie} />\n                            <Route path=\"/movies/userMovies\" component={UserMovies} />\n                            <Route path=\"/movies\" component={Movies} />\n                            <Route exact path=\"/\" component={Home} />\n                        </Switch>\n                    </BrowserRouter>\n                    <Auth updateToken={updateToken} />\n                </div>\n            </ApolloProvider>\n        </Auth0Provider>\n    )\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}