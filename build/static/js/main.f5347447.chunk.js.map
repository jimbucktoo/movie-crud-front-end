{"version":3,"sources":["assets/movieCrud.png","serviceWorker.js","components/LogoutButton.js","components/Profile.js","components/UINavbar.js","queries/queries.js","components/UIMovie.js","components/UITable.js","components/UIMain.js","components/UIAddForm.js","components/UIEditForm.js","components/UIShow.js","components/LoginButton.js","components/UIHomepage.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","LogoutButton","logout","useAuth0","react_default","a","createElement","class","id","href","onClick","logoutParams","returnTo","origin","Profile","_useAuth","user","isAuthenticated","isLoading","role","data-bs-toggle","aria-expanded","src","picture","alt","name","UINavbar","className","logo","type","data-bs-target","aria-controls","aria-label","Link","to","components_Profile","aria-labelledby","components_LogoutButton","Component","getMoviesQuery","gql","_templateObject","getMovieQuery","_templateObject2","addMovieMutation","_templateObject3","updateMovieMutation","_templateObject4","deleteMovieMutation","_templateObject5","_templateObject6","UIMovie","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleDelete","bind","assertThisInitialized","event","variables","refetchQueries","query","_this2","movieList","movies","undefined","map","editLink","showLink","key","poster_url","title","directors","year","rating","compose","graphql","UITable","components_UIMovie","data","filterDelete","UIMain","components_UINavbar","components_UITable","UIAddForm","state","redirectToReferrer","handleSubmit","preventDefault","target","value","parseInt","posterURL","then","setState","Redirect","onSubmit","required","placeholder","pattern","UIEditForm","params","movie","options","UIShow","LoginButton","loginWithRedirect","UIHomepage","components_LoginButton","client","ApolloClient","uri","ReactDOM","render","auth0_react_esm","domain","process","clientId","authorizationParams","redirect_uri","react_common_esm","BrowserRouter","Switch","Route","path","component","exact","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f5347447.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/movieCrud.a3a7187a.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst LogoutButton = () => {\n    const { logout } = useAuth0();\n    return (\n        <a class=\"dropdown-item\" id=\"logout\" href=\"#\" onClick={() => logout({ logoutParams: { returnTo: window.location.origin } })}>\n            Log Out\n        </a>\n    )\n}\n\nexport default LogoutButton;\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst Profile = () => {\n    const { user, isAuthenticated, isLoading } = useAuth0();\n\n    if (isLoading) {\n        return(\n            <div>\n                <div class=\"spinner-grow text-primary\" role=\"status\">\n                    <span class=\"visually-hidden\">Loading...</span>\n                </div>\n                <div class=\"spinner-grow text-primary\" role=\"status\">\n                    <span class=\"visually-hidden\">Loading...</span>\n                </div>\n                <div class=\"spinner-grow text-primary\" role=\"status\">\n                    <span class=\"visually-hidden\">Loading...</span>\n                </div>\n                <div class=\"spinner-grow text-primary\" role=\"status\">\n                    <span class=\"visually-hidden\">Loading...</span>\n                </div>\n                <div class=\"spinner-grow text-primary\" role=\"status\">\n                    <span class=\"visually-hidden\">Loading...</span>\n                </div>\n            </div>\n        ); \n    }\n\n    if (isAuthenticated) {\n        return (\n            <a class=\"nav-link nav-links profile dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                <img id=\"userPicture\" src={user.picture} alt={user.name} />\n                {user.name}\n            </a>\n        );\n    }\n}\n\nexport default Profile;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport LogoutButton from \"./LogoutButton\";\nimport Profile from \"./Profile\";\nimport logo from \"../assets/movieCrud.png\";\nimport \"../style/App.css\";\n\nclass UINavbar extends Component {\n    render() {\n        return (\n            <div className=\"Navbar\">\n                <nav class=\"navbar navbar-expand-lg navBar navbar-dark bg-dark\">\n                    <div class=\"container-fluid\">\n                        <div class=\"navbar-brand navBarBrand\">\n                            <img className=\"navLogo\" alt=\"Logo\" src={logo} />\n                        </div>\n                        <button\n                        class=\"navbar-toggler\"\n                        type=\"button\"\n                        data-bs-toggle=\"collapse\"\n                        data-bs-target=\"#navbarNav\"\n                        aria-controls=\"navbarNav\"\n                        aria-expanded=\"false\"\n                        aria-label=\"Toggle navigation\">\n                        <span class=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n                        <ul class=\"navbar-nav mr-auto\">\n                            <li class=\"nav-item\">\n                                <Link class=\"nav-link nav-links\" to=\"/main\">Movies</Link>\n                            </li>\n                            <li class=\"nav-item\">\n                                <Link class=\"nav-link nav-links\" to=\"/movies/new\">Add To List</Link>\n                            </li>\n                        </ul>\n                        <ul className=\"navbar-nav\">\n                            <li className=\"nav-item dropdown\">\n                                <Profile />\n                                <ul className=\"dropdown-menu dropdown-menu-dark\" aria-labelledby=\"navbarDropdown\">\n                                    <li><a className=\"dropdown-item\" href=\"#\">My Movies</a></li>\n                                    <li><a className=\"dropdown-item\" href=\"#\">Settings</a></li>\n                                    <li><LogoutButton /></li>\n                                </ul>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n        </div>\n        );\n    }\n}\n\nexport default UINavbar;\n","import { gql } from \"apollo-boost\";\n\nconst getMoviesQuery = gql`\n    {\n        movies {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n        }\n    }\n`;\n\nconst getMovieQuery = gql`\n    query GetMovie($id: ID!) {\n        movie(id: $id) {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n        }\n    }\n`;\n\nconst addMovieMutation = gql`\n    mutation (\n        $title: String!\n        $directors: String!\n        $year: Int!\n        $rating: Int!\n        $poster_url: String!\n    ) {\n        addMovie(\n            title: $title\n            directors: $directors\n            year: $year\n            rating: $rating\n            poster_url: $poster_url\n        ) {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n        }\n    }\n`;\n\nconst updateMovieMutation = gql`\n    mutation (\n        $id: ID!\n        $title: String!\n        $directors: String!\n        $year: Int!\n        $rating: Int!\n        $poster_url: String!\n    ) {\n        updateMovie(\n            id: $id\n            title: $title\n            directors: $directors\n            year: $year\n            rating: $rating\n            poster_url: $poster_url\n        ) {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n        }\n    }\n`;\n\nconst deleteMovieMutation = gql`\n    mutation ($id: ID!) {\n        deleteMovie(id: $id) {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n        }\n    }\n`;\n\nconst deleteAllMutation = gql`\n    mutation {\n        deleteAll {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n        }\n    }\n`;\n\nexport {\n    getMoviesQuery,\n    getMovieQuery,\n    addMovieMutation,\n    updateMovieMutation,\n    deleteMovieMutation,\n    deleteAllMutation,\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { graphql } from \"react-apollo\";\nimport { getMoviesQuery, deleteMovieMutation } from \"../queries/queries\";\nimport { flowRight as compose } from \"lodash\";\nimport \"../style/App.css\";\n\nclass UIMovie extends Component {\n    constructor(props) {\n        super(props);\n        this.handleDelete = this.handleDelete.bind(this);\n    }\n\n    handleDelete(id, event) {\n        this.props.deleteMovieMutation({\n            variables: {\n                id: id,\n            },\n            refetchQueries: [{ query: getMoviesQuery }],\n        });\n    }\n\n    render() {\n        const movieList = this.props.getMoviesQuery.movies;\n\n        if (movieList !== undefined) {\n            return movieList.map((movies) => {\n                var editLink = \"/movies/edit/\" + movies.id;\n                var showLink = \"/movies/show/\" + movies.id;\n                return (\n                    <li key={movies.id} class=\"list-group-item d-flex justify-content-between align-items-start movie-item\">\n                        <div class=\"image-box\">\n                            <img class=\"poster-image\" alt=\"poster\" src={movies.poster_url}></img>\n                        </div>\n                        <div class=\"ms-2 me-auto\">\n                            <div class=\"movie-info\">\n                                <div class=\"fw-bold\">\n                                    <Link class=\"title\" to={showLink}>{movies.title}</Link>\n                                </div>\n                                <div>Directors: {movies.directors}</div>\n                                <div>Year: {movies.year}</div>\n                                <div>Rating: {movies.rating}</div>\n                            </div>\n                            <div class=\"movie-buttons\">\n                                <Link to={editLink} className=\"btn btn-primary button\">Edit</Link>\n                                <Link to=\"/main\" className=\"ml-5px btn btn-danger button\" onClick={this.handleDelete.bind(this, movies.id)}>Delete</Link>\n                            </div>\n                        </div>\n                    </li>\n                );\n            });\n        } else {\n            return <tr></tr>;\n        }\n    }\n}\n\nexport default compose(\n    graphql(getMoviesQuery, { name: \"getMoviesQuery\" }),\n    graphql(deleteMovieMutation, { name: \"deleteMovieMutation\" })\n)(UIMovie);\n","import React, { Component } from \"react\";\nimport UIMovie from \"./UIMovie\";\nimport \"../style/App.css\";\n\nclass UITable extends Component {\n    render() {\n        return (\n            <div className=\"table\">\n                <ul class=\"list-group movie-list\">\n                    <UIMovie data={this.props.data} filterDelete={this.props.filterDelete}/>\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default UITable;\n","import React, { Component } from \"react\";\nimport UINavbar from \"./UINavbar\";\nimport UITable from \"./UITable\";\nimport { graphql } from \"react-apollo\";\nimport { getMoviesQuery } from \"../queries/queries\";\nimport { flowRight as compose } from \"lodash\";\nimport \"../style/App.css\";\n\nclass UIMain extends Component {\n    render() {\n        const movies = this.props.getMoviesQuery.movies;\n        if (movies !== undefined) {\n            return (\n                <div className=\"App\">\n                    <UINavbar />\n                    <UITable />\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"App loader\">\n                <div class=\"spinner-grow text-primary\" role=\"status\">\n                    <span class=\"visually-hidden\">Loading...</span>\n                </div>\n                <div class=\"spinner-grow text-primary\" role=\"status\">\n                    <span class=\"visually-hidden\">Loading...</span>\n                </div>\n                <div class=\"spinner-grow text-primary\" role=\"status\">\n                    <span class=\"visually-hidden\">Loading...</span>\n                </div>\n                <div class=\"spinner-grow text-primary\" role=\"status\">\n                    <span class=\"visually-hidden\">Loading...</span>\n                </div>\n                <div class=\"spinner-grow text-primary\" role=\"status\">\n                    <span class=\"visually-hidden\">Loading...</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default compose(graphql(getMoviesQuery, { name: \"getMoviesQuery\" }))(\n    UIMain\n);\n","import React, { Component } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport UINavbar from \"./UINavbar\";\nimport { graphql } from \"react-apollo\";\nimport { getMoviesQuery, addMovieMutation } from \"../queries/queries\";\nimport { flowRight as compose } from \"lodash\";\nimport \"../style/App.css\";\n\nclass UIAddForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            redirectToReferrer: false,\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        var title = event.target.title.value;\n        var directors = event.target.directors.value;\n        var year = parseInt(event.target.year.value);\n        var rating = parseInt(event.target.rating.value);\n        var poster_url = event.target.posterURL.value;\n\n        this.props\n            .addMovieMutation({\n                variables: {\n                    title: title,\n                    directors: directors,\n                    year: year,\n                    rating: rating,\n                    poster_url: poster_url,\n                },\n                refetchQueries: [{ query: getMoviesQuery }],\n            })\n            .then(this.setState({ redirectToReferrer: true }));\n    }\n\n    render() {\n        const redirectToReferrer = this.state.redirectToReferrer;\n\n        if (redirectToReferrer === true) {\n            return <Redirect to=\"/main\" />;\n        }\n\n        return (\n            <div>\n                <UINavbar />\n                <div className=\"AddForm movie-add\">\n                    <form onSubmit={this.handleSubmit}>\n                        <br />\n                        <label>Add A Movie</label>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"title\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"inputTitle\"\n                            placeholder=\"Title\"/>\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"directors\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"inputDirectors\"\n                            placeholder=\"Directors\"/>\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"year\"\n                            type=\"text\"\n                            pattern=\"[0-9]*\"\n                            title=\"A number value is required.\"\n                            className=\"form-control\"\n                            id=\"inputYear\"\n                            placeholder=\"Year\"/>\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"rating\"\n                            type=\"text\"\n                            pattern=\"[0-9]*\"\n                            title=\"A number value is required.\"\n                            className=\"form-control\"\n                            id=\"inputRating\"\n                            placeholder=\"Rating\"/>\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"posterURL\"\n                            type=\"text\"\n                            pattern=\"https?://.+\"\n                            title=\"A valid url value is required.\"\n                            className=\"form-control\"\n                            id=\"inputPosterURL\"\n                            placeholder=\"Poster URL\"/>\n                        </div>\n                        <div class=\"movie-buttons\">\n                            <button className=\"btn btn-primary button\" type=\"submit\">Submit</button>\n                            <Link to=\"/main\" className=\"btn btn-danger button\">Cancel</Link>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default compose(\n    graphql(getMoviesQuery, { name: \"getMoviesQuery\" }),\n    graphql(addMovieMutation, { name: \"addMovieMutation\" })\n)(UIAddForm);\n","import React, { Component } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport UINavbar from \"./UINavbar\";\nimport { graphql } from \"react-apollo\";\nimport {\n    getMoviesQuery,\n    getMovieQuery,\n    updateMovieMutation,\n} from \"../queries/queries\";\nimport { flowRight as compose } from \"lodash\";\nimport \"../style/App.css\";\n\nclass UIEditForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            redirectToReferrer: false,\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        const { id } = this.props.match.params;\n        var title = event.target.title.value;\n        var directors = event.target.directors.value;\n        var year = parseInt(event.target.year.value);\n        var rating = parseInt(event.target.rating.value);\n        var poster_url = event.target.posterURL.value;\n\n        this.props\n            .updateMovieMutation({\n                variables: {\n                    id: id,\n                    title: title,\n                    directors: directors,\n                    year: year,\n                    rating: rating,\n                    poster_url: poster_url,\n                },\n                refetchQueries: [{ query: getMoviesQuery }],\n            })\n            .then(this.setState({ redirectToReferrer: true }));\n    }\n\n    render() {\n        const movie = this.props.data.movie;\n        const redirectToReferrer = this.state.redirectToReferrer;\n\n        if (redirectToReferrer === true) {\n            return <Redirect to=\"/main\" />;\n        }\n\n        if (movie !== undefined) {\n            return (\n                <div>\n                    <UINavbar />\n                    <br />\n                    <div className=\"EditForm movie-edit\">\n                        <form onSubmit={this.handleSubmit}>\n                            <h6>Edit Movie: {movie.title}</h6>\n                            <br />\n                            <img alt=\"Poster URL\" src={movie.poster_url} className=\"poster-url\"></img>\n                            <br />\n                            <br />\n                            <div className=\"form-group\">\n                                <input\n                                required\n                                name=\"title\"\n                                type=\"text\"\n                                className=\"form-control\"\n                                id=\"inputTitle\"\n                                placeholder={\"Title: \" + movie.title}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <input\n                                required\n                                name=\"directors\"\n                                type=\"text\"\n                                className=\"form-control\"\n                                id=\"inputDirectors\"\n                                placeholder={\"Director(s): \" + movie.directors}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <input\n                                required\n                                name=\"year\"\n                                type=\"text\"\n                                pattern=\"[0-9]*\"\n                                title=\"A number value is required.\"\n                                className=\"form-control\"\n                                id=\"inputYear\"\n                                placeholder={\"Year: \" + movie.year}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <input\n                                required\n                                name=\"rating\"\n                                type=\"text\"\n                                pattern=\"[0-9]*\"\n                                title=\"A number value is required.\"\n                                className=\"form-control\"\n                                id=\"inputRating\"\n                                placeholder={\"Rating: \" + movie.rating}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <input\n                                required\n                                name=\"posterURL\"\n                                type=\"text\"\n                                pattern=\"https://.+\"\n                                title=\"A valid url value is required.\"\n                                className=\"form-control\"\n                                id=\"inputPosterURL\"\n                                placeholder={\"Poster URL: \" + movie.poster_url}/>\n                            </div>\n                            <div class=\"movie-buttons\">\n                                <button className=\"btn btn-primary button\" type=\"submit\">Edit</button>\n                                <Link to=\"/main\" className=\"btn btn-danger button\">Cancel</Link>\n                            </div>\n                        </form>\n                    </div>\n                    <br />\n                    <br />\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <UINavbar />\n                </div>\n            );\n        }\n    }\n}\n\nexport default compose(\n    graphql(getMoviesQuery, { name: \"getMoviesQuery\" }),\n    graphql(getMovieQuery, {\n        options: (props) => {\n            return {\n                variables: {\n                    id: props.match.params.id,\n                },\n            };\n        },\n    }),\n    graphql(updateMovieMutation, { name: \"updateMovieMutation\" })\n)(UIEditForm);\n","import React, { Component } from \"react\";\nimport UINavbar from \"./UINavbar\";\nimport { graphql } from \"react-apollo\";\nimport { getMovieQuery } from \"../queries/queries\";\nimport { flowRight as compose } from \"lodash\";\nimport \"../style/App.css\";\n\nclass UIShow extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        const movie = this.props.data.movie;\n\n        if (movie !== undefined) {\n            return (\n                <div>\n                    <UINavbar />\n                    <div class=\"movie-show\">\n                        <br />\n                        <img className=\"poster-url\" alt=\"Poster URL\" src={movie.poster_url}></img>\n                        <br />\n                        <br />\n                        <br />\n                        Title: {movie.title}\n                        <br />\n                        Directors: {movie.directors}\n                        <br />\n                        Year: {movie.year}\n                        <br />\n                        Rating: {movie.rating}\n                        <br />\n                        <br />\n                        <br />\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <UINavbar />\n                </div>\n            );\n        }\n    }\n}\n\nexport default compose(\n    graphql(getMovieQuery, {\n        options: (props) => {\n            return {\n                variables: {\n                    id: props.match.params.id,\n                },\n            };\n        },\n    })\n)(UIShow);\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst LoginButton = () => {\n    const { loginWithRedirect } = useAuth0();\n    return (\n        <button className=\"btn btn-primary button\" onClick={() => loginWithRedirect()}>\n            Log In\n        </button>\n    )\n}\n\nexport default LoginButton;\n","import React, { Component } from \"react\";\nimport logo from \"../assets/movieCrud.png\";\nimport \"../style/App.css\";\nimport LoginButton from \"./LoginButton\";\n\nclass UIHomepage extends Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <img className=\"logo\" alt=\"Logo\" src={logo} />\n                <h1 className=\"app-title\">MovieCrud</h1>\n                <br />\n                <LoginButton />\n            </div>\n        );\n    }\n}\n\nexport default UIHomepage;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport \"./style/index.css\";\n\nimport UIMain from \"./components/UIMain\";\nimport UIAddForm from \"./components/UIAddForm\";\nimport UIEditForm from \"./components/UIEditForm\";\nimport UIShow from \"./components/UIShow\";\nimport UIHomepage from \"./components/UIHomepage\";\n\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\n\nimport { Auth0Provider } from \"@auth0/auth0-react\";\n\nconst client = new ApolloClient({\n    uri: \"https://moviecrud.onrender.com/graphql\",\n});\n\nconst domain = process.env.REACT_APP_AUTH0_DOMAIN;\nconst clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\n\nReactDOM.render(\n    <Auth0Provider\n    domain={domain}\n    clientId={clientId}\n    authorizationParams={{\n        redirect_uri: window.location.origin + \"/main\"\n    }}>\n    <ApolloProvider client={client}>\n        <div>\n            <BrowserRouter>\n                <Switch>\n                    <Route path=\"/movies/show/:id\" component={UIShow} />\n                    <Route path=\"/movies/edit/:id\" component={UIEditForm} />\n                    <Route path=\"/movies/new\" component={UIAddForm} />\n                    <Route path=\"/main\" component={UIMain} />\n                    <Route exact path=\"/\" component={UIHomepage} />\n                </Switch>\n            </BrowserRouter>\n        </div>\n    </ApolloProvider>\n    </Auth0Provider>,\n    document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}