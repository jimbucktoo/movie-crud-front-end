{"version":3,"sources":["assets/movieCrud.png","serviceWorker.js","components/LoginButton.js","components/Home.js","components/LogoutButton.js","queries/queries.js","components/Profile.js","components/Navbar.js","components/Movie.js","components/Table.js","components/Movies.js","components/UserMovies.js","components/AddForm.js","components/EditForm.js","components/Show.js","components/Settings.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","LoginButton","loginWithRedirect","useAuth0","react_default","a","createElement","className","onClick","Home","alt","src","Logo","components_LoginButton","LogoutButton","logout","id","logoutParams","returnTo","origin","getUsersQuery","gql","_templateObject","getUserByAuthIdQuery","_templateObject2","_templateObject3","addUserMutation","_templateObject4","getMoviesQuery","_templateObject5","_templateObject6","_templateObject7","_templateObject8","getMoviesByUserIdQuery","_templateObject9","getMovieByIdQuery","_templateObject10","addMovieMutation","_templateObject11","updateMovieMutation","_templateObject12","deleteMovieMutation","_templateObject13","graphql","_templateObject14","name","props","_useAuth","user","isAuthenticated","isLoading","useEffect","handleCreateUser","users","find","existingUser","email","variables","authId","sub","username","nickname","picture","refetchQueries","query","then","catch","error","console","role","data-bs-toggle","aria-expanded","Navbar","logo","type","data-bs-target","aria-controls","aria-label","Link","to","components_Profile","aria-labelledby","components_LogoutButton","compose","options","movies","userMovies","moviesByUserId","userAuth","userByAuthId","refetch","movieList","map","movie","editLink","showLink","key","poster_url","title","directors","year","rating","Table","components_Movie","components_Navbar","components_Table","UserMovies","_useState","useState","_useState2","Object","slicedToArray","redirectToReferrer","setRedirectToReferrer","Redirect","onSubmit","event","preventDefault","target","value","parseInt","posterURL","user_id","required","placeholder","pattern","params","movieById","Settings","client","ApolloClient","uri","ReactDOM","render","auth0_react_esm","domain","process","clientId","authorizationParams","redirect_uri","react_common_esm","BrowserRouter","Switch","Route","path","component","Show","EditForm","AddForm","Movies","exact","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,4KCYpBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,wHCNSC,EATK,WAAM,IACdC,EAAsBC,cAAtBD,kBACR,OACIE,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yBAAyBC,QAAS,kBAAMN,MAAqB,WCSxEO,SAVF,WACT,OACIL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOG,IAAI,iBAAiBC,IAAKC,MAChDR,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAY,aAC1BH,EAAAC,EAAAC,cAACO,EAAD,iBCEGC,EATM,WAAM,IACfC,EAAWZ,cAAXY,OACR,OACIX,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBAAgBS,GAAG,SAASR,QAAS,kBAAMO,EAAO,CAAEE,aAAc,CAAEC,SAAUrB,OAAOC,SAASqB,YAAa,2oJCFrI,IAAMC,EAAgBC,YAAHC,KAwBbC,GAZmBF,YAAHG,KAYOH,YAAHI,MAYpBC,EAAkBL,YAAHM,KAwEfC,GAlDqBP,YAAHQ,KAwBGR,YAAHS,KAYOT,YAAHU,KAcLV,YAAHW,MAadC,EAAyBZ,YAAHa,KAatBC,EAAoBd,YAAHe,KAajBC,EAAmBhB,YAAHiB,KA4BhBC,EAAsBlB,YAAHmB,KA2BnBC,EAAsBpB,YAAHqB,KCpIVC,GDiJiBtB,YAAHuB,KCjJdD,YAAQvB,EAAe,CAAEyB,KAAM,iBAA/BF,CAAkDA,YAAQjB,EAAiB,CAAEmB,KAAM,mBAAjCF,CArEjD,SAACG,GAAU,IAAAC,EACsB5C,cAArC6C,EADeD,EACfC,KAAMC,EADSF,EACTE,gBAAiBC,EADRH,EACQG,UAE/BC,oBAAU,WACFF,GACAG,EAAiBJ,IAEtB,CAACC,EAAiBD,IAErB,IAAMI,EAAmB,SAACJ,GACDF,EAAM1B,cAAciC,MAAMC,KAC3C,SAACC,GAAD,OAAkBA,EAAaC,QAAUR,EAAKQ,SAM9CV,EAAMpB,gBAAgB,CAClB+B,UAAW,CACPC,OAAQV,EAAKW,IACbC,SAAUZ,EAAKa,SACfL,MAAOR,EAAKQ,MACZM,QAASd,EAAKc,SAElBC,eAAgB,CAAC,CAAEC,MAAO5C,MAC3B6C,KAAK,cAAUC,MAAM,SAACC,GACrBC,QAAQD,MAAM,sBAAuBA,MAKjD,OAAIjB,EAEI9C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAA4B8D,KAAK,UAC5CjE,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAkB,eAEtCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAA4B8D,KAAK,UAC5CjE,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAkB,eAEtCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAA4B8D,KAAK,UAC5CjE,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAkB,eAEtCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAA4B8D,KAAK,UAC5CjE,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAkB,eAEtCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAA4B8D,KAAK,UAC5CjE,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAkB,gBAM9C0C,EAEI7C,EAAAC,EAAAC,cAAA,OACAC,UAAU,6CACV8D,KAAK,SACLC,iBAAe,WACfC,gBAAc,SACdnE,EAAAC,EAAAC,cAAA,OAAKU,GAAG,cAAcL,IAAKqC,EAAKc,QAASpD,IAAKsC,EAAKH,OAClDG,EAAKH,MAKP,SCNI2B,EA1DA,WACX,OACIpE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sDACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUG,IAAI,OAAOC,IAAK8D,OAE7CrE,EAAAC,EAAAC,cAAA,UACAC,UAAU,iBACVmE,KAAK,SACLJ,iBAAe,WACfK,iBAAe,aACfC,gBAAc,YACdL,gBAAc,QACdM,aAAW,qBACXzE,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAEpBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BS,GAAG,aACzCZ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAMvE,UAAU,qBAAqBwE,GAAG,WAAU,WAItD3E,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAMvE,UAAU,qBAAqBwE,GAAG,eAAc,iBAK9D3E,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBACVH,EAAAC,EAAAC,cAAC0E,EAAD,MACA5E,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mCAAmC0E,kBAAgB,kBAC7D7E,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAMvE,UAAU,gBAAgBwE,GAAG,sBAAqB,cAI5D3E,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAMvE,UAAU,gBAAgBwE,GAAG,aAAY,aAInD3E,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC4E,EAAD,uBCmBrBC,sBACXxC,YAAQf,EAAgB,CAAEiB,KAAM,mBAChCF,YAAQpB,EAAsB,CAC1B6D,QAAS,SAACtC,GACN,MAAO,CACHW,UAAW,CACPC,OAAQ,QAIpBb,KAAM,yBAEVF,YAAQV,EAAwB,CAC5BmD,QAAS,SAACtC,GACN,MAAO,CACHW,UAAW,CACPzC,GAAI,QAIhB6B,KAAM,2BAEVF,YAAQF,EAAqB,CAAEI,KAAM,wBAtB1BsC,CAhED,SAACrC,GAAU,IAAAC,EACa5C,cAA1B6C,EADaD,EACbC,KAAMC,EADOF,EACPE,gBAEVoC,EAASvC,EAAMlB,eAAeyD,OAC9BC,EAAaxC,EAAMb,uBAAuBsD,eAC1CC,EAAW1C,EAAMvB,qBAAqBkE,aAEpC/B,EAAST,EAAkBD,EAAKW,IAAM,KACtC3C,EAAKwE,EAAWA,EAASxE,GAAK,KAsBpC,OAZAmC,oBAAU,WACFO,GACAZ,EAAMvB,qBAAqBmE,QAAQ,CAAEhC,YAE1C,CAACA,EAAQZ,EAAMvB,uBAElB4B,oBAAU,WACFnC,GACA8B,EAAMb,uBAAuByD,QAAQ,CAAE1E,QAE5C,CAACA,EAAI8B,EAAMb,yBAEVoD,GAAUC,GACa,IAApBxC,EAAM6C,YACLN,EAASC,GAEND,EAAOO,IAAI,SAACC,GACf,IAAMC,EAAW,gBAAkBD,EAAM7E,GACnC+E,EAAW,gBAAkBF,EAAM7E,GACzC,OACIZ,EAAAC,EAAAC,cAAA,MAAI0F,IAAKH,EAAM7E,GAAIT,UAAU,+EACzBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeG,IAAI,SAASC,IAAKkF,EAAMI,cAE1D7F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAMvE,UAAU,QAAQwE,GAAIgB,GAAWF,EAAMK,QAEjD9F,EAAAC,EAAAC,cAAA,WAAK,cAAYuF,EAAMM,WACvB/F,EAAAC,EAAAC,cAAA,WAAK,SAAOuF,EAAMO,MAClBhG,EAAAC,EAAAC,cAAA,WAAK,WAASuF,EAAMQ,SAExBjG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAMC,GAAIe,EAAUvF,UAAU,0BAAyB,QACvDH,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAMC,GAAG,UAAUxE,UAAU,+BAA+BC,QAAS,kBA3CvEQ,EA2C0F6E,EAAM7E,QA1ClH8B,EAAML,oBAAoB,CACtBgB,UAAW,CACPzC,GAAIA,GACN+C,eAAgB,CAAC,CAAEC,MAAOpC,MAJf,IAACZ,IA2CqG,gBAOhH,OCtDAsF,EAVD,SAACxD,GACX,OACI1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBACVH,EAAAC,EAAAC,cAACiG,EAAD,CAAOZ,UAAW7C,EAAM6C,eCkCzBR,sBAAQxC,YAAQf,EAAgB,CAAEiB,KAAM,mBAAxCsC,CAlCA,SAACrC,GAIZ,OAAc,MAHCA,EAAMlB,eAAeyD,OAK5BjF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACkG,EAAD,MACApG,EAAAC,EAAAC,cAACmG,EAAD,CAAOd,UAND,KAYdvF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAA4B8D,KAAK,UAC5CjE,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAkB,eAEtCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAA4B8D,KAAK,UAC5CjE,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAkB,eAEtCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAA4B8D,KAAK,UAC5CjE,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAkB,eAEtCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAA4B8D,KAAK,UAC5CjE,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAkB,eAEtCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAA4B8D,KAAK,UAC5CjE,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAkB,kBCrBnCmG,EAXI,SAAC5D,GAGhB,OACI1C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACkG,EAAD,MACApG,EAAAC,EAAAC,cAACmG,EAAD,CAAOd,UALG,sBC6HPR,sBACXxC,YAAQf,EAAgB,CAAEiB,KAAM,mBAChCF,YAAQpB,EAAsB,CAC1B6D,QAAS,SAACtC,GACN,MAAO,CACHW,UAAW,CACPC,OAAQ,QAIpBb,KAAM,yBAEVF,YAAQN,EAAkB,CAAEQ,KAAM,qBAZvBsC,CAzHC,SAACrC,GAAU,IAAAC,EACW5C,cAA1B6C,EADeD,EACfC,KAAMC,EADSF,EACTE,gBADS0D,EAE6BC,oBAAS,GAFtCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEhBK,EAFgBH,EAAA,GAEII,EAFJJ,EAAA,GAGjBnD,EAAST,EAAkBD,EAAKW,IAAM,KAE5CR,oBAAU,WACFO,GACAZ,EAAMvB,qBAAqBmE,QAAQ,CAAEhC,YAE1C,CAACA,EAAQZ,EAAMvB,uBAElB,IAAMiE,EAAW1C,EAAMvB,qBAAqBkE,aA0B5C,OAAIuB,EACO5G,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,CAAUnC,GAAG,YAGrB9B,EAEK7C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACkG,EAAD,MACApG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,QAAM6G,SAjCD,SAACC,GAClBA,EAAMC,iBACN,IAAMnB,EAAQkB,EAAME,OAAOpB,MAAMqB,MAC3BpB,EAAYiB,EAAME,OAAOnB,UAAUoB,MACnCnB,EAAOoB,SAASJ,EAAME,OAAOlB,KAAKmB,OAClClB,EAASmB,SAASJ,EAAME,OAAOjB,OAAOkB,OACtCtB,EAAamB,EAAME,OAAOG,UAAUF,MAE1C,GAAI/B,EAAU,CACV,IAAMkC,EAAUF,SAAShC,EAASxE,IAClC8B,EAAMT,iBAAiB,CACnBoB,UAAW,CACPyC,MAAOA,EACPC,UAAWA,EACXC,KAAMA,EACNC,OAAQA,EACRJ,WAAYA,EACZyB,QAASA,GAEb3D,eAAgB,CAAC,CAAEC,MAAOpC,MAC3BqC,KAAK,kBAAMgD,GAAsB,QAcxB7G,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,aAAO,eACPF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SACAqH,UAAQ,EACR9E,KAAK,QACL6B,KAAK,OACLnE,UAAU,eACVS,GAAG,aACH4G,YAAY,WAEhBxH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SACAqH,UAAQ,EACR9E,KAAK,YACL6B,KAAK,OACLnE,UAAU,eACVS,GAAG,iBACH4G,YAAY,eAEhBxH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SACAqH,UAAQ,EACR9E,KAAK,OACL6B,KAAK,OACLmD,QAAQ,SACR3B,MAAM,8BACN3F,UAAU,eACVS,GAAG,YACH4G,YAAY,UAEhBxH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SACAqH,UAAQ,EACR9E,KAAK,SACL6B,KAAK,OACLmD,QAAQ,SACR3B,MAAM,8BACN3F,UAAU,eACVS,GAAG,cACH4G,YAAY,YAEhBxH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SACAqH,UAAQ,EACR9E,KAAK,YACL6B,KAAK,OACLmD,QAAQ,cACR3B,MAAM,iCACN3F,UAAU,eACVS,GAAG,iBACH4G,YAAY,gBAEhBxH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yBAAyBmE,KAAK,UAAS,UAGzDtE,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAMC,GAAG,UAAUxE,UAAU,yBAAwB,cAUrEH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACkG,EAAD,SCGDrB,sBACXxC,YAAQf,EAAgB,CAAEiB,KAAM,mBAChCF,YAAQR,EAAmB,CACvBiD,QAAS,SAACtC,GACN,MAAO,CACHW,UAAW,CACPzC,GAAI8B,EAAM9C,MAAM8H,OAAO9G,MAInC6B,KAAM,sBAEVF,YAAQJ,EAAqB,CAAEM,KAAM,wBAZ1BsC,CAvHE,SAACrC,GAAU,IAAA6D,EAC4BC,oBAAS,GADrCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACjBK,EADiBH,EAAA,GACGI,EADHJ,EAAA,GAGlBhB,EAAQ/C,EAAMX,kBAAkB4F,UAyBtC,OAAIf,EACO5G,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,CAAUnC,GAAG,YAGZ,MAATc,EAEKzF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACkG,EAAD,MACApG,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,QAAM6G,SAjCD,SAACC,GAClBA,EAAMC,iBADsB,IAGpBrG,EAAO8B,EAAM9C,MAAM8H,OAAnB9G,GACFkF,EAAQkB,EAAME,OAAOpB,MAAMqB,MAC3BpB,EAAYiB,EAAME,OAAOnB,UAAUoB,MACnCnB,EAAOoB,SAASJ,EAAME,OAAOlB,KAAKmB,OAClClB,EAASmB,SAASJ,EAAME,OAAOjB,OAAOkB,OACtCtB,EAAamB,EAAME,OAAOG,UAAUF,MAE1CzE,EAAMP,oBAAoB,CACtBkB,UAAW,CACPzC,GAAIA,EACJkF,MAAOA,EACPC,UAAWA,EACXC,KAAMA,EACNC,OAAQA,EACRJ,WAAYA,GAEhBlC,eAAgB,CAAC,CAAEC,MAAOpC,MAC3BqC,KAAK,kBAAMgD,GAAsB,OAcpB7G,EAAAC,EAAAC,cAAA,UAAI,eAAauF,EAAMK,OACvB9F,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKI,IAAI,aAAaC,IAAKkF,EAAMI,WAAY1F,UAAU,eACvDH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SACAqH,UAAQ,EACR9E,KAAK,QACL6B,KAAK,OACLnE,UAAU,eACVS,GAAG,aACH4G,YAAa,UAAY/B,EAAMK,SAEnC9F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SACAqH,UAAQ,EACR9E,KAAK,YACL6B,KAAK,OACLnE,UAAU,eACVS,GAAG,iBACH4G,YAAa,gBAAkB/B,EAAMM,aAEzC/F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SACAqH,UAAQ,EACR9E,KAAK,OACL6B,KAAK,OACLmD,QAAQ,SACR3B,MAAM,8BACN3F,UAAU,eACVS,GAAG,YACH4G,YAAa,SAAW/B,EAAMO,QAElChG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SACAqH,UAAQ,EACR9E,KAAK,SACL6B,KAAK,OACLmD,QAAQ,SACR3B,MAAM,8BACN3F,UAAU,eACVS,GAAG,cACH4G,YAAa,WAAa/B,EAAMQ,UAEpCjG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SACAqH,UAAQ,EACR9E,KAAK,YACL6B,KAAK,OACLmD,QAAQ,aACR3B,MAAM,iCACN3F,UAAU,eACVS,GAAG,iBACH4G,YAAa,eAAiB/B,EAAMI,cAExC7F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yBAAyBmE,KAAK,UAAS,QAGzDtE,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAMC,GAAG,UAAUxE,UAAU,yBAAwB,aAMjEH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,YAKJF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACkG,EAAD,SC9EDrB,uBACXxC,YAAQR,EAAmB,CACvBiD,QAAS,SAACtC,GACN,MAAO,CACHW,UAAW,CACPzC,GAAI8B,EAAM9C,MAAM8H,OAAO9G,MAInC6B,KAAM,sBATCsC,CAnCF,SAACrC,GACV,IAAM+C,EAAQ/C,EAAMX,kBAAkB4F,UAEtC,OAAa,MAATlC,EAEIzF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACkG,EAAD,MACApG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaG,IAAI,aAAaC,IAAKkF,EAAMI,aACxD7F,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAAM,UACEuF,EAAMK,MACd9F,EAAAC,EAAAC,cAAA,WAAM,cACMuF,EAAMM,UAClB/F,EAAAC,EAAAC,cAAA,WAAM,SACCuF,EAAMO,KACbhG,EAAAC,EAAAC,cAAA,WAAM,WACGuF,EAAMQ,OACfjG,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,aAMRF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACkG,EAAD,SCvBDwB,GATE,WAEb,OACI5H,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACkG,EAAD,yBCWNyB,GAAS,IAAIC,KAAa,CAC5BC,IAAK,kCAMTC,IAASC,OACLjI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CACAC,OALWC,8BAMXC,SALaD,mCAMbE,oBAAqB,CACjBC,aAAc9I,OAAOC,SAASqB,OAAS,YAE3Cf,EAAAC,EAAAC,cAACsI,GAAA,EAAD,CAAgBX,OAAQA,IACpB7H,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACuI,EAAA,EAAD,KACIzI,EAAAC,EAAAC,cAACwI,EAAA,EAAD,KACI1I,EAAAC,EAAAC,cAACyI,EAAA,EAAD,CAAOC,KAAK,YAAYC,UAAWjB,KACnC5H,EAAAC,EAAAC,cAACyI,EAAA,EAAD,CAAOC,KAAK,mBAAmBC,UAAWC,KAC1C9I,EAAAC,EAAAC,cAACyI,EAAA,EAAD,CAAOC,KAAK,mBAAmBC,UAAWE,IAC1C/I,EAAAC,EAAAC,cAACyI,EAAA,EAAD,CAAOC,KAAK,cAAcC,UAAWG,IACrChJ,EAAAC,EAAAC,cAACyI,EAAA,EAAD,CAAOC,KAAK,qBAAqBC,UAAWvC,IAC5CtG,EAAAC,EAAAC,cAACyI,EAAA,EAAD,CAAOC,KAAK,UAAUC,UAAWI,IACjCjJ,EAAAC,EAAAC,cAACyI,EAAA,EAAD,CAAOO,OAAK,EAACN,KAAK,IAAIC,UAAWxI,SAMjD8I,SAASC,eAAe,SfgFtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1F,KAAK,SAAA2F,GACjCA,EAAaC","file":"static/js/main.639dce41.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/movieCrud.a3a7187a.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst LoginButton = () => {\n    const { loginWithRedirect } = useAuth0();\n    return (\n        <button className=\"btn btn-primary button\" onClick={() => loginWithRedirect()}>\n            Log In\n        </button>\n    )\n}\n\nexport default LoginButton;\n","import React from \"react\";\nimport Logo from \"../assets/movieCrud.png\";\nimport LoginButton from \"./LoginButton\";\nimport \"../style/App.css\";\n\nconst Home = () => {\n    return (\n        <div className=\"container\">\n            <img className=\"logo\" alt=\"MovieCrud Logo\" src={Logo} />\n            <h1 className=\"app-title\">MovieCrud</h1>\n            <LoginButton />\n        </div>\n    );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst LogoutButton = () => {\n    const { logout } = useAuth0();\n    return (\n        <button className=\"dropdown-item\" id=\"logout\" onClick={() => logout({ logoutParams: { returnTo: window.location.origin } })}>\n            Log Out\n        </button>\n    )\n}\n\nexport default LogoutButton;\n","import { gql } from \"apollo-boost\";\n\n//User Queries & Mutations\n\nconst getUsersQuery = gql`\n    {\n        users {\n            id\n            authId\n            username\n            email\n            picture\n        }\n    }\n`;\n\nconst getUserByIdQuery = gql`\n    query GetUserById($id: ID!) {\n        userById(id: $id) {\n            id\n            authId\n            username\n            email\n            picture\n        }\n    }\n`;\n\nconst getUserByAuthIdQuery = gql`\n    query GetUserByAuthId($authId: String!) {\n        userByAuthId(authId: $authId) {\n            id\n            authId\n            username\n            email\n            picture\n        }\n    }\n`;\n\nconst addUserMutation = gql`\n    mutation (\n        $authId: String!\n        $username: String!\n        $email: String!\n        $picture: String!\n    ) {\n        addUser(\n            authId: $authId\n            username: $username\n            email: $email\n            picture: $picture\n        ) {\n            id\n            authId\n            username\n            email\n            picture\n        }\n    }\n`;\n\nconst updateUserMutation = gql`\n    mutation (\n        $id: ID!\n        $authId: String!\n        $username: String!\n        $email: String!\n        $picture: String!\n    ) {\n        updateUser(\n            id: $id\n            authId: $authId\n            username: $username\n            email: $email\n            picture: $picture\n        ) {\n            id\n            authId\n            username\n            email\n            picture\n        }\n    }\n`;\n\nconst deleteUserMutation = gql`\n    mutation ($id: ID!) {\n        deleteUser(id: $id) {\n            id\n            authId\n            username\n            email\n            picture\n        }\n    }\n`;\n\nconst deleteAllUsersMutation = gql`\n    mutation {\n        deleteAllUsers {\n            id\n            authId\n            username\n            email\n            picture\n        }\n    }\n`;\n\n//Movie Queries & Mutations\n\nconst getMoviesQuery = gql`\n    {\n        movies {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n        }\n    }\n`;\n\nconst getMoviesByUserIdQuery = gql`\n    query GetMoviesByUserId($id: ID!) {\n        moviesByUserId(id: $id) {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n        }\n    }\n`;\n\nconst getMovieByIdQuery = gql`\n    query GetMovieById($id: ID!) {\n        movieById(id: $id) {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n        }\n    }\n`;\n\nconst addMovieMutation = gql`\n    mutation (\n        $title: String!\n        $directors: String!\n        $year: Int!\n        $rating: Int!\n        $poster_url: String!\n        $user_id: Int!\n    ) {\n        addMovie(\n            title: $title\n            directors: $directors\n            year: $year\n            rating: $rating\n            poster_url: $poster_url\n            user_id: $user_id\n        ) {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n            user_id\n        }\n    }\n`;\n\nconst updateMovieMutation = gql`\n    mutation (\n        $id: ID!\n        $title: String!\n        $directors: String!\n        $year: Int!\n        $rating: Int!\n        $poster_url: String!\n    ) {\n        updateMovie(\n            id: $id\n            title: $title\n            directors: $directors\n            year: $year\n            rating: $rating\n            poster_url: $poster_url\n        ) {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n        }\n    }\n`;\n\nconst deleteMovieMutation = gql`\n    mutation ($id: ID!) {\n        deleteMovie(id: $id) {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n        }\n    }\n`;\n\nconst deleteAllMoviesMutation = gql`\n    mutation {\n        deleteAll {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n        }\n    }\n`;\n\nexport {\n    getUsersQuery,\n    getUserByIdQuery,\n    getUserByAuthIdQuery,\n    addUserMutation,\n    updateUserMutation,\n    deleteUserMutation,\n    deleteAllUsersMutation,\n    getMoviesQuery,\n    getMoviesByUserIdQuery,\n    getMovieByIdQuery,\n    addMovieMutation,\n    updateMovieMutation,\n    deleteMovieMutation,\n    deleteAllMoviesMutation,\n};\n","import React, { useEffect } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { graphql } from \"react-apollo\";\nimport { getUsersQuery, addUserMutation } from \"../queries/queries\";\n\nconst Profile = (props) => {\n    const { user, isAuthenticated, isLoading } = useAuth0();\n\n    useEffect(() => {\n        if (isAuthenticated) {\n            handleCreateUser(user);\n        }\n    }, [isAuthenticated, user]);\n\n    const handleCreateUser = (user) => {\n        const existingUser = props.getUsersQuery.users.find(\n            (existingUser) => existingUser.email === user.email\n        );\n\n        if (existingUser) {\n            return;\n        } else {\n            props.addUserMutation({\n                variables: {\n                    authId: user.sub,\n                    username: user.nickname,\n                    email: user.email,\n                    picture: user.picture,\n                },\n                refetchQueries: [{ query: getUsersQuery }],\n            }).then(() => {}).catch((error) => {\n                console.error(\"Error Adding User: \", error);\n            });\n        }\n    };\n\n    if (isLoading) {\n        return (\n            <div>\n                <div className=\"spinner-grow text-primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n                <div className=\"spinner-grow text-primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n                <div className=\"spinner-grow text-primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n                <div className=\"spinner-grow text-primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n                <div className=\"spinner-grow text-primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n            </div>\n        );\n    }\n\n    if (isAuthenticated) {\n        return (\n            <div\n            className=\"nav-link nav-links profile dropdown-toggle\"\n            role=\"button\"\n            data-bs-toggle=\"dropdown\"\n            aria-expanded=\"false\">\n            <img id=\"userPicture\" src={user.picture} alt={user.name} />\n            {user.name}\n        </div>\n        );\n    }\n\n    return null;\n};\n\nexport default graphql(getUsersQuery, { name: \"getUsersQuery\" })(graphql(addUserMutation, { name: \"addUserMutation\" })(Profile));\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport LogoutButton from \"./LogoutButton\";\nimport Profile from \"./Profile\";\nimport logo from \"../assets/movieCrud.png\";\nimport \"../style/App.css\";\n\nconst Navbar = () => {\n    return (\n        <div className=\"Navbar\">\n            <nav className=\"navbar navbar-expand-lg navBar navbar-dark bg-dark\">\n                <div className=\"container-fluid\">\n                    <div className=\"navbar-brand navBarBrand\">\n                        <img className=\"navLogo\" alt=\"Logo\" src={logo} />\n                    </div>\n                    <button\n                    className=\"navbar-toggler\"\n                    type=\"button\"\n                    data-bs-toggle=\"collapse\"\n                    data-bs-target=\"#navbarNav\"\n                    aria-controls=\"navbarNav\"\n                    aria-expanded=\"false\"\n                    aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link nav-links\" to=\"/movies\">\n                                Movies\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link nav-links\" to=\"/movies/new\">\n                                Add To List\n                            </Link>\n                        </li>\n                    </ul>\n                    <ul className=\"navbar-nav\">\n                        <li className=\"nav-item dropdown\">\n                            <Profile />\n                            <ul className=\"dropdown-menu dropdown-menu-dark\" aria-labelledby=\"navbarDropdown\">\n                                <li>\n                                    <Link className=\"dropdown-item\" to=\"/movies/userMovies\">\n                                        My Movies\n                                    </Link>\n                                </li>\n                                <li>\n                                    <Link className=\"dropdown-item\" to=\"/settings\">\n                                        Settings\n                                    </Link>\n                                </li>\n                                <li>\n                                    <LogoutButton />\n                                </li>\n                            </ul>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </nav>\n    </div>\n    );\n};\n\nexport default Navbar;\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { graphql } from \"react-apollo\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { getMoviesQuery, getMoviesByUserIdQuery, getUserByAuthIdQuery, deleteMovieMutation } from \"../queries/queries\";\nimport { flowRight as compose } from \"lodash\";\nimport \"../style/App.css\";\n\nconst Movie = (props) => {\n    const { user, isAuthenticated } = useAuth0();\n\n    let movies = props.getMoviesQuery.movies;\n    let userMovies = props.getMoviesByUserIdQuery.moviesByUserId;\n    let userAuth = props.getUserByAuthIdQuery.userByAuthId;\n\n    const authId = isAuthenticated ? user.sub : null;\n    const id = userAuth ? userAuth.id : null;\n\n    const handleDelete = (id) => {\n        props.deleteMovieMutation({\n            variables: {\n                id: id,\n            },refetchQueries: [{ query: getMoviesQuery }],\n        });\n    };\n\n    useEffect(() => {\n        if (authId) {\n            props.getUserByAuthIdQuery.refetch({ authId });\n        }\n    }, [authId, props.getUserByAuthIdQuery]);\n\n    useEffect(() => {\n        if (id) {\n            props.getMoviesByUserIdQuery.refetch({ id });\n        }\n    }, [id, props.getMoviesByUserIdQuery]);\n\n    if (movies && userMovies) {\n        if(props.movieList === 1){\n            movies = userMovies;\n        }\n        return movies.map((movie) => {\n            const editLink = \"/movies/edit/\" + movie.id;\n            const showLink = \"/movies/show/\" + movie.id;\n            return (\n                <li key={movie.id} className=\"list-group-item d-flex justify-content-between align-items-start movie-item\">\n                    <div className=\"image-box\">\n                        <img className=\"poster-image\" alt=\"poster\" src={movie.poster_url} />\n                    </div>\n                    <div className=\"ms-2 me-auto\">\n                        <div className=\"movie-info\">\n                            <div className=\"fw-bold\">\n                                <Link className=\"title\" to={showLink}>{movie.title}</Link>\n                            </div>\n                            <div>Directors: {movie.directors}</div>\n                            <div>Year: {movie.year}</div>\n                            <div>Rating: {movie.rating}</div>\n                        </div>\n                        <div className=\"movie-buttons\">\n                            <Link to={editLink} className=\"btn btn-primary button\">Edit</Link>\n                            <Link to=\"/movies\" className=\"ml-5px btn btn-danger button\" onClick={() => handleDelete(movie.id)}>Delete</Link>\n                        </div>\n                    </div>\n                </li>\n            );\n        });\n    } else {\n        return null;\n    }\n};\n\nexport default compose(\n    graphql(getMoviesQuery, { name: \"getMoviesQuery\" }),\n    graphql(getUserByAuthIdQuery, {\n        options: (props) => {\n            return {\n                variables: {\n                    authId: null\n                }\n            };\n        },\n        name: 'getUserByAuthIdQuery'\n    }),\n    graphql(getMoviesByUserIdQuery, {\n        options: (props) => {\n            return {\n                variables: {\n                    id: null\n                }\n            };\n        },\n        name: 'getMoviesByUserIdQuery'\n    }),\n    graphql(deleteMovieMutation, { name: \"deleteMovieMutation\" })\n)(Movie);\n","import React from \"react\";\nimport Movie from \"./Movie\";\nimport \"../style/App.css\";\n\nconst Table = (props) => {\n    return (\n        <div className=\"table\">\n            <ul className=\"list-group movie-list\">\n                <Movie movieList={props.movieList}/>\n            </ul>\n        </div>\n    );\n};\n\nexport default Table;\n","import React from \"react\";\nimport Navbar from \"./Navbar\";\nimport Table from \"./Table\";\nimport { graphql } from \"react-apollo\";\nimport { getMoviesQuery } from \"../queries/queries\";\nimport { flowRight as compose } from \"lodash\";\nimport \"../style/App.css\";\n\nconst Movies = (props) => {\n    const movies = props.getMoviesQuery.movies;\n    const movieList = 0;\n\n    if (movies != null) {\n        return (\n            <div>\n                <Navbar />\n                <Table movieList={movieList}/>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"App loader\">\n            <div className=\"spinner-grow text-primary\" role=\"status\">\n                <span className=\"visually-hidden\">Loading...</span>\n            </div>\n            <div className=\"spinner-grow text-primary\" role=\"status\">\n                <span className=\"visually-hidden\">Loading...</span>\n            </div>\n            <div className=\"spinner-grow text-primary\" role=\"status\">\n                <span className=\"visually-hidden\">Loading...</span>\n            </div>\n            <div className=\"spinner-grow text-primary\" role=\"status\">\n                <span className=\"visually-hidden\">Loading...</span>\n            </div>\n            <div className=\"spinner-grow text-primary\" role=\"status\">\n                <span className=\"visually-hidden\">Loading...</span>\n            </div>\n        </div>\n    );\n};\n\nexport default compose(graphql(getMoviesQuery, { name: \"getMoviesQuery\" }))(Movies);\n","import React from \"react\";\nimport Navbar from \"./Navbar\";\nimport Table from \"./Table\";\n\nconst UserMovies = (props) => {\n    const movieList = 1;\n\n    return (\n        <div>\n            <Navbar />\n            <Table movieList={movieList}/>\n        </div>\n    );\n};\n\nexport default UserMovies;\n","import React, { useEffect, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport Navbar from \"./Navbar\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { graphql } from \"react-apollo\";\nimport { getMoviesQuery, getUserByAuthIdQuery, addMovieMutation } from \"../queries/queries\";\nimport { flowRight as compose } from \"lodash\";\nimport \"../style/App.css\";\n\nconst AddForm = (props) => {\n    const { user, isAuthenticated } = useAuth0();\n    const [redirectToReferrer, setRedirectToReferrer] = useState(false);\n    const authId = isAuthenticated ? user.sub : null;\n\n    useEffect(() => {\n        if (authId) {\n            props.getUserByAuthIdQuery.refetch({ authId });\n        }\n    }, [authId, props.getUserByAuthIdQuery]);\n\n    const userAuth = props.getUserByAuthIdQuery.userByAuthId;\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const title = event.target.title.value;\n        const directors = event.target.directors.value;\n        const year = parseInt(event.target.year.value);\n        const rating = parseInt(event.target.rating.value);\n        const poster_url = event.target.posterURL.value;\n\n        if (userAuth) {\n            const user_id = parseInt(userAuth.id);\n            props.addMovieMutation({\n                variables: {\n                    title: title,\n                    directors: directors,\n                    year: year,\n                    rating: rating,\n                    poster_url: poster_url,\n                    user_id: user_id\n                },\n                refetchQueries: [{ query: getMoviesQuery }],\n            }).then(() => setRedirectToReferrer(true));\n        }\n    };\n\n    if (redirectToReferrer) {\n        return <Redirect to=\"/movies\" />;\n    }\n\n    if(isAuthenticated) {\n        return (\n            <div>\n                <Navbar />\n                <div className=\"AddForm movie-add\">\n                    <form onSubmit={handleSubmit}>\n                        <br />\n                        <label>Add A Movie</label>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"title\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"inputTitle\"\n                            placeholder=\"Title\"/>\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"directors\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"inputDirectors\"\n                            placeholder=\"Directors\"/>\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"year\"\n                            type=\"text\"\n                            pattern=\"[0-9]*\"\n                            title=\"A number value is required.\"\n                            className=\"form-control\"\n                            id=\"inputYear\"\n                            placeholder=\"Year\"/>\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"rating\"\n                            type=\"text\"\n                            pattern=\"[0-9]*\"\n                            title=\"A number value is required.\"\n                            className=\"form-control\"\n                            id=\"inputRating\"\n                            placeholder=\"Rating\"/>\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"posterURL\"\n                            type=\"text\"\n                            pattern=\"https?://.+\"\n                            title=\"A valid URL value is required.\"\n                            className=\"form-control\"\n                            id=\"inputPosterURL\"\n                            placeholder=\"Poster URL\"/>\n                        </div>\n                        <div className=\"movie-buttons\">\n                            <button className=\"btn btn-primary button\" type=\"submit\">\n                                Submit\n                            </button>\n                            <Link to=\"/movies\" className=\"btn btn-danger button\">\n                                Cancel\n                            </Link>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    } else {\n        return(\n            <div>\n                <Navbar />\n            </div>\n        );\n    }\n};\n\nexport default compose(\n    graphql(getMoviesQuery, { name: \"getMoviesQuery\" }),\n    graphql(getUserByAuthIdQuery, {\n        options: (props) => {\n            return {\n                variables: {\n                    authId: null\n                }\n            };\n        },\n        name: 'getUserByAuthIdQuery'\n    }),\n    graphql(addMovieMutation, { name: \"addMovieMutation\" })\n)(AddForm);\n","import React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport Navbar from \"./Navbar\";\nimport { graphql } from \"react-apollo\";\nimport { getMoviesQuery, getMovieByIdQuery, updateMovieMutation } from \"../queries/queries\";\nimport { flowRight as compose } from \"lodash\";\nimport \"../style/App.css\";\n\nconst EditForm = (props) => {\n    const [redirectToReferrer, setRedirectToReferrer] = useState(false);\n\n    const movie = props.getMovieByIdQuery.movieById\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        const { id } = props.match.params;\n        const title = event.target.title.value;\n        const directors = event.target.directors.value;\n        const year = parseInt(event.target.year.value);\n        const rating = parseInt(event.target.rating.value);\n        const poster_url = event.target.posterURL.value;\n\n        props.updateMovieMutation({\n            variables: {\n                id: id,\n                title: title,\n                directors: directors,\n                year: year,\n                rating: rating,\n                poster_url: poster_url,\n            },\n            refetchQueries: [{ query: getMoviesQuery }],\n        }).then(() => setRedirectToReferrer(true));\n    };\n\n    if (redirectToReferrer) {\n        return <Redirect to=\"/movies\" />;\n    }\n\n    if(movie != null) {\n        return (\n            <div>\n                <Navbar />\n                <br />\n                <div className=\"EditForm movie-edit\">\n                    <form onSubmit={handleSubmit}>\n                        <h6>Edit Movie: {movie.title}</h6>\n                        <br />\n                        <img alt=\"Poster URL\" src={movie.poster_url} className=\"poster-url\" />\n                        <br />\n                        <br />\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"title\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"inputTitle\"\n                            placeholder={\"Title: \" + movie.title}/>\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"directors\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"inputDirectors\"\n                            placeholder={\"Director(s): \" + movie.directors}/>\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"year\"\n                            type=\"text\"\n                            pattern=\"[0-9]*\"\n                            title=\"A number value is required.\"\n                            className=\"form-control\"\n                            id=\"inputYear\"\n                            placeholder={\"Year: \" + movie.year}/>\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"rating\"\n                            type=\"text\"\n                            pattern=\"[0-9]*\"\n                            title=\"A number value is required.\"\n                            className=\"form-control\"\n                            id=\"inputRating\"\n                            placeholder={\"Rating: \" + movie.rating}/>\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"posterURL\"\n                            type=\"text\"\n                            pattern=\"https://.+\"\n                            title=\"A valid URL value is required.\"\n                            className=\"form-control\"\n                            id=\"inputPosterURL\"\n                            placeholder={\"Poster URL: \" + movie.poster_url}/>\n                        </div>\n                        <div className=\"movie-buttons\">\n                            <button className=\"btn btn-primary button\" type=\"submit\">\n                                Edit\n                            </button>\n                            <Link to=\"/movies\" className=\"btn btn-danger button\">\n                                Cancel\n                            </Link>\n                        </div>\n                    </form>\n                </div>\n                <br />\n                <br />\n            </div>\n        );\n    } else {\n        return (\n            <div>\n                <Navbar />\n            </div>\n        );\n    }\n\n};\n\nexport default compose(\n    graphql(getMoviesQuery, { name: \"getMoviesQuery\" }),\n    graphql(getMovieByIdQuery, {\n        options: (props) => {\n            return {\n                variables: {\n                    id: props.match.params.id,\n                },\n            };\n        },\n        name: 'getMovieByIdQuery'\n    }),\n    graphql(updateMovieMutation, { name: \"updateMovieMutation\" })\n)(EditForm);\n","import React from \"react\";\nimport Navbar from \"./Navbar\";\nimport { graphql } from \"react-apollo\";\nimport { getMovieByIdQuery } from \"../queries/queries\";\nimport { flowRight as compose } from \"lodash\";\nimport \"../style/App.css\";\n\nconst Show = (props) => {\n    const movie = props.getMovieByIdQuery.movieById;\n\n    if (movie != null) {\n        return (\n            <div>\n                <Navbar />\n                <div className=\"movie-show\">\n                    <br />\n                    <img className=\"poster-url\" alt=\"Poster URL\" src={movie.poster_url} />\n                    <br />\n                    <br />\n                    <br />\n                    Title: {movie.title}\n                    <br />\n                    Directors: {movie.directors}\n                    <br />\n                    Year: {movie.year}\n                    <br />\n                    Rating: {movie.rating}\n                    <br />\n                    <br />\n                    <br />\n                </div>\n            </div>\n        );\n    } else {\n        return (\n            <div>\n                <Navbar />\n            </div>\n        );\n    }\n};\n\nexport default compose(\n    graphql(getMovieByIdQuery, {\n        options: (props) => {\n            return {\n                variables: {\n                    id: props.match.params.id\n                }\n            };\n        },\n        name: 'getMovieByIdQuery'\n    })\n)(Show);\n","import React from \"react\";\nimport Navbar from \"./Navbar\";\nimport \"../style/App.css\";\n\nconst Settings = () => {\n\n    return (\n        <div>\n            <Navbar />\n        </div>\n    );\n};\n\nexport default Settings;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport \"./style/index.css\";\n\nimport Home from \"./components/Home\";\nimport Movies from \"./components/Movies\";\nimport UserMovies from \"./components/UserMovies\";\nimport AddForm from \"./components/AddForm\";\nimport EditForm from \"./components/EditForm\";\nimport Show from \"./components/Show\";\nimport Settings from \"./components/Settings\";\n\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\n\nimport { Auth0Provider } from \"@auth0/auth0-react\";\n\nconst client = new ApolloClient({\n    uri: \"http://localhost:3001/graphql\",\n});\n\nconst domain = process.env.REACT_APP_AUTH0_DOMAIN;\nconst clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\n\nReactDOM.render(\n    <Auth0Provider\n    domain={domain}\n    clientId={clientId}\n    authorizationParams={{\n        redirect_uri: window.location.origin + \"/movies\"\n    }}>\n    <ApolloProvider client={client}>\n        <div>\n            <BrowserRouter>\n                <Switch>\n                    <Route path=\"/settings\" component={Settings} />\n                    <Route path=\"/movies/show/:id\" component={Show} />\n                    <Route path=\"/movies/edit/:id\" component={EditForm} />\n                    <Route path=\"/movies/new\" component={AddForm} />\n                    <Route path=\"/movies/userMovies\" component={UserMovies} />\n                    <Route path=\"/movies\" component={Movies} />\n                    <Route exact path=\"/\" component={Home} />\n                </Switch>\n            </BrowserRouter>\n        </div>\n    </ApolloProvider>\n    </Auth0Provider>,\n    document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}