{"version":3,"sources":["assets/movieCrud.png","serviceWorker.js","components/UINavbar.js","queries/queries.js","components/UIMovie.js","components/UITable.js","components/UIMain.js","components/UIAddForm.js","components/UIEditForm.js","components/UIShow.js","components/UIHomepage.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","UINavbar","react_default","a","createElement","className","class","alt","src","logo","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","Link","to","Component","getMoviesQuery","gql","_templateObject","getMovieQuery","_templateObject2","addMovieMutation","_templateObject3","updateMovieMutation","_templateObject4","deleteMovieMutation","_templateObject5","_templateObject6","UIMovie","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleDelete","bind","assertThisInitialized","event","variables","refetchQueries","query","_this2","movieList","movies","undefined","map","editLink","showLink","poster_url","title","directors","year","rating","onClick","compose","graphql","name","UITable","components_UIMovie","data","filterDelete","UIMain","components_UINavbar","components_UITable","role","UIAddForm","state","redirectToReferrer","handleSubmit","preventDefault","target","value","parseInt","posterURL","then","setState","Redirect","onSubmit","required","placeholder","pattern","UIEditForm","params","movie","options","UIShow","UIHomepage","client","ApolloClient","uri","ReactDOM","render","react_common_esm","BrowserRouter","Switch","Route","path","component","exact","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.83f52082.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/movieCrud.a3a7187a.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport logo from \"../assets/movieCrud.png\";\nimport \"../style/App.css\";\n\nclass UINavbar extends Component {\n    render() {\n        return (\n            <div className=\"Navbar\">\n                <nav class=\"navbar navbar-expand-lg navBar navbar-dark bg-dark\">\n                    <div class=\"container-fluid\">\n                        <div class=\"navbar-brand navBarBrand\">\n                            <img className=\"navLogo\" alt=\"Logo\" src={logo} />\n                        </div>\n                        <button\n                            class=\"navbar-toggler\"\n                            type=\"button\"\n                            data-bs-toggle=\"collapse\"\n                            data-bs-target=\"#navbarNav\"\n                            aria-controls=\"navbarNav\"\n                            aria-expanded=\"false\"\n                            aria-label=\"Toggle navigation\"\n                        >\n                            <span class=\"navbar-toggler-icon\"></span>\n                        </button>\n                        <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n                            <ul class=\"navbar-nav\">\n                                <li class=\"nav-item\">\n                                    <Link class=\"nav-link nav-links\" to=\"/main\">\n                                        Movies\n                                    </Link>\n                                </li>\n                                <li class=\"nav-item\">\n                                    <Link\n                                        class=\"nav-link nav-links\"\n                                        to=\"/movies/new\"\n                                    >\n                                        Add To List\n                                    </Link>\n                                </li>\n                                <li class=\"nav-item\">\n                                    <Link class=\"nav-link nav-links\" to=\"/\">\n                                        Logout\n                                    </Link>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </nav>\n            </div>\n        );\n    }\n}\n\nexport default UINavbar;\n","import { gql } from \"apollo-boost\";\n\nconst getMoviesQuery = gql`\n    {\n        movies {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n        }\n    }\n`;\n\nconst getMovieQuery = gql`\n    query GetMovie($id: ID!) {\n        movie(id: $id) {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n        }\n    }\n`;\n\nconst addMovieMutation = gql`\n    mutation (\n        $title: String!\n        $directors: String!\n        $year: Int!\n        $rating: Int!\n        $poster_url: String!\n    ) {\n        addMovie(\n            title: $title\n            directors: $directors\n            year: $year\n            rating: $rating\n            poster_url: $poster_url\n        ) {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n        }\n    }\n`;\n\nconst updateMovieMutation = gql`\n    mutation (\n        $id: ID!\n        $title: String!\n        $directors: String!\n        $year: Int!\n        $rating: Int!\n        $poster_url: String!\n    ) {\n        updateMovie(\n            id: $id\n            title: $title\n            directors: $directors\n            year: $year\n            rating: $rating\n            poster_url: $poster_url\n        ) {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n        }\n    }\n`;\n\nconst deleteMovieMutation = gql`\n    mutation ($id: ID!) {\n        deleteMovie(id: $id) {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n        }\n    }\n`;\n\nconst deleteAllMutation = gql`\n    mutation {\n        deleteAll {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n        }\n    }\n`;\n\nexport {\n    getMoviesQuery,\n    getMovieQuery,\n    addMovieMutation,\n    updateMovieMutation,\n    deleteMovieMutation,\n    deleteAllMutation,\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { graphql } from \"react-apollo\";\nimport { getMoviesQuery, deleteMovieMutation } from \"../queries/queries\";\nimport { flowRight as compose } from \"lodash\";\nimport \"../style/App.css\";\n\nclass UIMovie extends Component {\n    constructor(props) {\n        super(props);\n        this.handleDelete = this.handleDelete.bind(this);\n    }\n\n    handleDelete(id, event) {\n        this.props.deleteMovieMutation({\n            variables: {\n                id: id,\n            },\n            refetchQueries: [{ query: getMoviesQuery }],\n        });\n    }\n\n    render() {\n        const movieList = this.props.getMoviesQuery.movies;\n\n        if (movieList !== undefined) {\n            return movieList.map((movies) => {\n                var editLink = \"/movies/edit/\" + movies.id;\n                var showLink = \"/movies/show/\" + movies.id;\n                return (\n                    <li class=\"list-group-item d-flex justify-content-between align-items-start movie-item\">\n                        <div class=\"image-box\">\n                            <img\n                                class=\"poster-image\"\n                                alt=\"poster\"\n                                src={movies.poster_url}\n                            ></img>\n                        </div>\n                        <div class=\"ms-2 me-auto\">\n                            <div class=\"movie-info\">\n                                <div class=\"fw-bold\">\n                                    <Link class=\"movie-title\" to={showLink}>\n                                        {movies.title}\n                                    </Link>\n                                </div>\n                                <div>Directors: {movies.directors}</div>\n                                <div>Year: {movies.year}</div>\n                                <div>Rating: {movies.rating}</div>\n                            </div>\n                            <div class=\"movie-buttons\">\n                                <Link\n                                    to={editLink}\n                                    className=\"btn btn-primary option-button\"\n                                >\n                                    Edit\n                                </Link>\n                                <Link\n                                    to=\"/main\"\n                                    className=\"ml-5px btn btn-danger option-button\"\n                                    onClick={this.handleDelete.bind(\n                                        this,\n                                        movies.id\n                                    )}\n                                >\n                                    Delete\n                                </Link>\n                            </div>\n                        </div>\n                    </li>\n                );\n            });\n        } else {\n            return <tr></tr>;\n        }\n    }\n}\n\nexport default compose(\n    graphql(getMoviesQuery, { name: \"getMoviesQuery\" }),\n    graphql(deleteMovieMutation, { name: \"deleteMovieMutation\" })\n)(UIMovie);\n","import React, { Component } from \"react\";\nimport UIMovie from \"./UIMovie\";\nimport \"../style/App.css\";\n\nclass UITable extends Component {\n    render() {\n        return (\n            <div className=\"Table\">\n                <ul class=\"list-group movie-list\">\n                    <UIMovie\n                        data={this.props.data}\n                        filterDelete={this.props.filterDelete}\n                    />\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default UITable;\n","import React, { Component } from \"react\";\nimport UINavbar from \"./UINavbar\";\nimport UITable from \"./UITable\";\nimport { graphql } from \"react-apollo\";\nimport { getMoviesQuery } from \"../queries/queries\";\nimport { flowRight as compose } from \"lodash\";\nimport \"../style/App.css\";\n\nclass UIMain extends Component {\n    render() {\n        const movies = this.props.getMoviesQuery.movies;\n        if (movies !== undefined) {\n            return (\n                <div className=\"App\">\n                    <UINavbar />\n                    <UITable />\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"App loader\">\n                <div class=\"spinner-grow text-primary\" role=\"status\">\n                    <span class=\"visually-hidden\">Loading...</span>\n                </div>\n                <div class=\"spinner-grow text-primary\" role=\"status\">\n                    <span class=\"visually-hidden\">Loading...</span>\n                </div>\n                <div class=\"spinner-grow text-primary\" role=\"status\">\n                    <span class=\"visually-hidden\">Loading...</span>\n                </div>\n                <div class=\"spinner-grow text-primary\" role=\"status\">\n                    <span class=\"visually-hidden\">Loading...</span>\n                </div>\n                <div class=\"spinner-grow text-primary\" role=\"status\">\n                    <span class=\"visually-hidden\">Loading...</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default compose(graphql(getMoviesQuery, { name: \"getMoviesQuery\" }))(\n    UIMain\n);\n","import React, { Component } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport UINavbar from \"./UINavbar\";\nimport { graphql } from \"react-apollo\";\nimport { getMoviesQuery, addMovieMutation } from \"../queries/queries\";\nimport { flowRight as compose } from \"lodash\";\nimport \"../style/App.css\";\n\nclass UIAddForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            redirectToReferrer: false,\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        var title = event.target.title.value;\n        var directors = event.target.directors.value;\n        var year = parseInt(event.target.year.value);\n        var rating = parseInt(event.target.rating.value);\n        var poster_url = event.target.posterURL.value;\n\n        this.props\n            .addMovieMutation({\n                variables: {\n                    title: title,\n                    directors: directors,\n                    year: year,\n                    rating: rating,\n                    poster_url: poster_url,\n                },\n                refetchQueries: [{ query: getMoviesQuery }],\n            })\n            .then(this.setState({ redirectToReferrer: true }));\n    }\n\n    render() {\n        const redirectToReferrer = this.state.redirectToReferrer;\n\n        if (redirectToReferrer === true) {\n            return <Redirect to=\"/main\" />;\n        }\n\n        return (\n            <div>\n                <UINavbar />\n                <div className=\"AddForm movie-add\">\n                    <form onSubmit={this.handleSubmit}>\n                        <br />\n                        <label>Add A Movie</label>\n                        <div className=\"form-group\">\n                            <input\n                                required\n                                name=\"title\"\n                                type=\"text\"\n                                className=\"form-control\"\n                                id=\"inputTitle\"\n                                placeholder=\"Title\"\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                required\n                                name=\"directors\"\n                                type=\"text\"\n                                className=\"form-control\"\n                                id=\"inputDirectors\"\n                                placeholder=\"Directors\"\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                required\n                                name=\"year\"\n                                type=\"text\"\n                                pattern=\"[0-9]*\"\n                                title=\"A number value is required.\"\n                                className=\"form-control\"\n                                id=\"inputYear\"\n                                placeholder=\"Year\"\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                required\n                                name=\"rating\"\n                                type=\"text\"\n                                pattern=\"[0-9]*\"\n                                title=\"A number value is required.\"\n                                className=\"form-control\"\n                                id=\"inputRating\"\n                                placeholder=\"Rating\"\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                required\n                                name=\"posterURL\"\n                                type=\"text\"\n                                pattern=\"https?://.+\"\n                                title=\"A valid url value is required.\"\n                                className=\"form-control\"\n                                id=\"inputPosterURL\"\n                                placeholder=\"Poster URL\"\n                            />\n                        </div>\n                        <div class=\"movie-buttons\">\n                            <button\n                                className=\"btn btn-primary option-button\"\n                                type=\"submit\"\n                            >\n                                Submit\n                            </button>\n                            <Link\n                                to=\"/main\"\n                                className=\"btn btn-danger option-button\"\n                            >\n                                Cancel\n                            </Link>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default compose(\n    graphql(getMoviesQuery, { name: \"getMoviesQuery\" }),\n    graphql(addMovieMutation, { name: \"addMovieMutation\" })\n)(UIAddForm);\n","import React, { Component } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport UINavbar from \"./UINavbar\";\nimport { graphql } from \"react-apollo\";\nimport {\n    getMoviesQuery,\n    getMovieQuery,\n    updateMovieMutation,\n} from \"../queries/queries\";\nimport { flowRight as compose } from \"lodash\";\nimport \"../style/App.css\";\n\nclass UIEditForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            redirectToReferrer: false,\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        const { id } = this.props.match.params;\n        var title = event.target.title.value;\n        var directors = event.target.directors.value;\n        var year = parseInt(event.target.year.value);\n        var rating = parseInt(event.target.rating.value);\n        var poster_url = event.target.posterURL.value;\n\n        this.props\n            .updateMovieMutation({\n                variables: {\n                    id: id,\n                    title: title,\n                    directors: directors,\n                    year: year,\n                    rating: rating,\n                    poster_url: poster_url,\n                },\n                refetchQueries: [{ query: getMoviesQuery }],\n            })\n            .then(this.setState({ redirectToReferrer: true }));\n    }\n\n    render() {\n        const movie = this.props.data.movie;\n        const redirectToReferrer = this.state.redirectToReferrer;\n\n        if (redirectToReferrer === true) {\n            return <Redirect to=\"/main\" />;\n        }\n\n        if (movie !== undefined) {\n            return (\n                <div>\n                    <UINavbar />\n                    <br />\n                    <div className=\"EditForm movie-edit\">\n                        <form onSubmit={this.handleSubmit}>\n                            <h6>Edit Movie: {movie.title}</h6>\n                            <br />\n                            <img\n                                alt=\"Poster URL\"\n                                src={movie.poster_url}\n                                className=\"poster-url\"\n                            ></img>\n                            <br />\n                            <br />\n                            <div className=\"form-group\">\n                                <input\n                                    required\n                                    name=\"title\"\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"inputTitle\"\n                                    placeholder={\"Title: \" + movie.title}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <input\n                                    required\n                                    name=\"directors\"\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"inputDirectors\"\n                                    placeholder={\n                                        \"Director(s): \" + movie.directors\n                                    }\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <input\n                                    required\n                                    name=\"year\"\n                                    type=\"text\"\n                                    pattern=\"[0-9]*\"\n                                    title=\"A number value is required.\"\n                                    className=\"form-control\"\n                                    id=\"inputYear\"\n                                    placeholder={\"Year: \" + movie.year}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <input\n                                    required\n                                    name=\"rating\"\n                                    type=\"text\"\n                                    pattern=\"[0-9]*\"\n                                    title=\"A number value is required.\"\n                                    className=\"form-control\"\n                                    id=\"inputRating\"\n                                    placeholder={\"Rating: \" + movie.rating}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <input\n                                    required\n                                    name=\"posterURL\"\n                                    type=\"text\"\n                                    pattern=\"https://.+\"\n                                    title=\"A valid url value is required.\"\n                                    className=\"form-control\"\n                                    id=\"inputPosterURL\"\n                                    placeholder={\n                                        \"Poster URL: \" + movie.poster_url\n                                    }\n                                />\n                            </div>\n                            <div class=\"movie-buttons\">\n                                <button\n                                    className=\"btn btn-primary option-button\"\n                                    type=\"submit\"\n                                >\n                                    Edit\n                                </button>\n                                <Link\n                                    to=\"/main\"\n                                    className=\"btn btn-danger option-button\"\n                                >\n                                    Cancel\n                                </Link>\n                            </div>\n                        </form>\n                    </div>\n                    <br />\n                    <br />\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <UINavbar />\n                </div>\n            );\n        }\n    }\n}\n\nexport default compose(\n    graphql(getMoviesQuery, { name: \"getMoviesQuery\" }),\n    graphql(getMovieQuery, {\n        options: (props) => {\n            return {\n                variables: {\n                    id: props.match.params.id,\n                },\n            };\n        },\n    }),\n    graphql(updateMovieMutation, { name: \"updateMovieMutation\" })\n)(UIEditForm);\n","import React, { Component } from \"react\";\nimport UINavbar from \"./UINavbar\";\nimport { graphql } from \"react-apollo\";\nimport { getMovieQuery } from \"../queries/queries\";\nimport { flowRight as compose } from \"lodash\";\nimport \"../style/App.css\";\n\nclass UIShow extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        const movie = this.props.data.movie;\n\n        if (movie !== undefined) {\n            return (\n                <div>\n                    <UINavbar />\n                    <div class=\"movie-show\">\n                        <br />\n                        <img\n                            className=\"poster-url\"\n                            alt=\"Poster URL\"\n                            src={movie.poster_url}\n                        ></img>\n                        <br />\n                        <br />\n                        <br />\n                        Title: {movie.title}\n                        <br />\n                        Directors: {movie.directors}\n                        <br />\n                        Year: {movie.year}\n                        <br />\n                        Rating: {movie.rating}\n                        <br />\n                        <br />\n                        <br />\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <UINavbar />\n                </div>\n            );\n        }\n    }\n}\n\nexport default compose(\n    graphql(getMovieQuery, {\n        options: (props) => {\n            return {\n                variables: {\n                    id: props.match.params.id,\n                },\n            };\n        },\n    })\n)(UIShow);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport logo from \"../assets/movieCrud.png\";\nimport \"../style/App.css\";\n\nclass UIHomepage extends Component {\n    render() {\n        return (\n            <div className=\"login\">\n                <img className=\"logo\" alt=\"Logo\" src={logo} />\n                <h1 className=\"title\">MovieCrud</h1>\n                <br />\n                <Link\n                    to=\"/main\"\n                    className=\"btn btn-primary login-button option-button\"\n                >\n                    Enter\n                </Link>\n            </div>\n        );\n    }\n}\n\nexport default UIHomepage;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport \"./style/index.css\";\n\nimport UIMain from \"./components/UIMain\";\nimport UIAddForm from \"./components/UIAddForm\";\nimport UIEditForm from \"./components/UIEditForm\";\nimport UIShow from \"./components/UIShow\";\nimport UIHomepage from \"./components/UIHomepage\";\n\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\n\nconst client = new ApolloClient({\n    uri: \"https://moviecrud.onrender.com/graphql\",\n});\n\nReactDOM.render(\n    <ApolloProvider client={client}>\n        <div>\n            <BrowserRouter>\n                <Switch>\n                    <Route path=\"/movies/show/:id\" component={UIShow} />\n                    <Route path=\"/movies/edit/:id\" component={UIEditForm} />\n                    <Route path=\"/movies/new\" component={UIAddForm} />\n                    <Route path=\"/main\" component={UIMain} />\n                    <Route exact path=\"/\" component={UIHomepage} />\n                </Switch>\n            </BrowserRouter>\n        </div>\n    </ApolloProvider>,\n    document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}