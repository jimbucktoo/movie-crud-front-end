{"version":3,"sources":["assets/movieCrud.png","AuthContext.js","components/LoginButton.js","components/Home.js","components/LogoutButton.js","queries/queries.js","components/Profile.js","components/Navbar.js","components/Movie.js","components/MovieTable.js","components/Movies.js","components/UserMovies.js","components/AddMovie.js","components/EditMovie.js","components/ShowMovie.js","components/Settings.js","index.js"],"names":["module","exports","__webpack_require__","p","AuthContext","React","createContext","LoginButton","loginWithRedirect","useAuth0","react_default","a","createElement","className","onClick","Home","alt","src","Logo","components_LoginButton","LogoutButton","logout","id","logoutParams","returnTo","window","location","origin","getUsersQuery","gql","_templateObject","getUserByAuthIdQuery","_templateObject2","_templateObject3","authenticateUserMutation","_templateObject4","addUserMutation","_templateObject5","getMoviesQuery","_templateObject6","_templateObject7","_templateObject8","_templateObject9","getMoviesByUserIdQuery","_templateObject10","getMovieByIdQuery","_templateObject11","addMovieMutation","_templateObject12","updateMovieMutation","_templateObject13","deleteMovieMutation","_templateObject14","Profile","_templateObject15","props","_useAuth","user","isAuthenticated","isLoading","usersData","useQuery","data","_useMutation","useMutation","authenticateUser","Object","slicedToArray","_useMutation3","addUser","setToken","useContext","useEffect","handleCreateUser","users","find","existingUser","email","variables","authId","sub","username","nickname","picture","refetchQueries","query","then","response","token","catch","error","console","role","data-bs-toggle","aria-expanded","name","Navbar","logo","type","data-bs-target","aria-controls","aria-label","Link","to","components_Profile","aria-labelledby","components_LogoutButton","Movie","movieList","movies","refetchMovies","deleteMovie","map","movie","editLink","showLink","key","poster_url","title","directors","year","rating","MovieTable","components_Movie","Movies","_useQuery","moviesData","moviesRefetch","refetch","_useState","useState","_useState2","setMovies","components_Navbar","components_MovieTable","UserMovies","userMovies","setUserMovies","userData","skip","_useQuery2","userByAuthId","userMoviesData","userMoviesRefetch","moviesByUserId","AddMovie","redirectToReferrer","setRedirectToReferrer","addMovie","Redirect","onSubmit","event","preventDefault","target","value","parseInt","posterURL","user_id","required","placeholder","pattern","history","goBack","EditMovie","updateMovie","match","params","movieData","movieById","ShowMovie","Settings","App","client","ApolloClient","uri","cache","InMemoryCache","headers","Authorization","concat","auth0_react_esm","domain","process","clientId","authorizationParams","redirect_uri","ApolloProvider","src_AuthContext","Provider","BrowserRouter","Switch","Route","path","component","exact","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f91c46f4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/movieCrud.a3a7187a.png\";","import React from 'react'\n\nconst AuthContext = React.createContext()\n\nexport default AuthContext\n","import React from \"react\"\nimport { useAuth0 } from \"@auth0/auth0-react\"\n\nconst LoginButton = () => {\n    const { loginWithRedirect } = useAuth0()\n    return (\n        <button className=\"btn btn-primary button\" onClick={() => loginWithRedirect()}>\n            Log In\n        </button>\n    )\n}\n\nexport default LoginButton\n","import React from \"react\"\nimport Logo from \"../assets/movieCrud.png\"\nimport LoginButton from \"./LoginButton\"\nimport \"../style/style.css\"\n\nconst Home = () => {\n    return (\n        <div className=\"container\">\n            <img className=\"logo\" alt=\"MovieCrud Logo\" src={Logo} />\n            <h1 className=\"app-title\">MovieCrud</h1>\n            <LoginButton />\n        </div>\n    )\n}\n\nexport default Home\n","import React from \"react\"\nimport { useAuth0 } from \"@auth0/auth0-react\"\n\nconst LogoutButton = () => {\n    const { logout } = useAuth0()\n    return (\n        <button className=\"dropdown-item\" id=\"logout\" onClick={() => logout({ logoutParams: { returnTo: window.location.origin } })}>\n            Log Out\n        </button>\n    )\n}\n\nexport default LogoutButton\n","import { gql } from '@apollo/client'\n\nconst getUsersQuery = gql`\n    {\n        users {\n            id\n            authId\n            username\n            email\n            picture\n        }\n    }\n`\n\nconst getUserByIdQuery = gql`\n    query GetUserById($id: ID!) {\n        userById(id: $id) {\n            id\n            authId\n            username\n            email\n            picture\n        }\n    }\n`\n\nconst getUserByAuthIdQuery = gql`\n    query GetUserByAuthId($authId: String!) {\n        userByAuthId(authId: $authId) {\n            id\n            authId\n            username\n            email\n            picture\n        }\n    }\n`\n\nconst authenticateUserMutation = gql`\n    mutation (\n        $authId: String!\n        $username: String!\n        $email: String!\n        $picture: String!\n    ) {\n        authenticateUser(\n            authId: $authId\n            username: $username\n            email: $email\n            picture: $picture\n        ) {\n            token\n        }\n    }\n`\n\nconst addUserMutation = gql`\n    mutation (\n        $authId: String!\n        $username: String!\n        $email: String!\n        $picture: String!\n    ) {\n        addUser(\n            authId: $authId\n            username: $username\n            email: $email\n            picture: $picture\n        ) {\n            token\n        }\n    }\n`\n\nconst updateUserMutation = gql`\n    mutation (\n        $id: ID!\n        $authId: String!\n        $username: String!\n        $email: String!\n        $picture: String!\n    ) {\n        updateUser(\n            id: $id\n            authId: $authId\n            username: $username\n            email: $email\n            picture: $picture\n        ) {\n            id\n            authId\n            username\n            email\n            picture\n        }\n    }\n`\n\nconst deleteUserMutation = gql`\n    mutation ($id: ID!) {\n        deleteUser(id: $id) {\n            id\n            authId\n            username\n            email\n            picture\n        }\n    }\n`\n\nconst deleteAllUsersMutation = gql`\n    mutation {\n        deleteAllUsers {\n            id\n            authId\n            username\n            email\n            picture\n        }\n    }\n`\n\nconst getMoviesQuery = gql`\n    {\n        movies {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n        }\n    }\n`\n\nconst getMoviesByUserIdQuery = gql`\n    query GetMoviesByUserId($id: ID!) {\n        moviesByUserId(id: $id) {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n        }\n    }\n`\n\nconst getMovieByIdQuery = gql`\n    query GetMovieById($id: ID!) {\n        movieById(id: $id) {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n        }\n    }\n`\n\nconst addMovieMutation = gql`\n    mutation (\n        $title: String!\n        $directors: String!\n        $year: Int!\n        $rating: Int!\n        $poster_url: String!\n        $user_id: Int!\n    ) {\n        addMovie(\n            title: $title\n            directors: $directors\n            year: $year\n            rating: $rating\n            poster_url: $poster_url\n            user_id: $user_id\n        ) {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n            user_id\n        }\n    }\n`\n\nconst updateMovieMutation = gql`\n    mutation (\n        $id: ID!\n        $title: String!\n        $directors: String!\n        $year: Int!\n        $rating: Int!\n        $poster_url: String!\n    ) {\n        updateMovie(\n            id: $id\n            title: $title\n            directors: $directors\n            year: $year\n            rating: $rating\n            poster_url: $poster_url\n        ) {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n        }\n    }\n`\n\nconst deleteMovieMutation = gql`\n    mutation ($id: ID!) {\n        deleteMovie(id: $id) {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n        }\n    }\n`\n\nconst deleteAllMoviesMutation = gql`\n    mutation {\n        deleteAll {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n        }\n    }\n`\n\nexport {\n    getUsersQuery,\n    getUserByIdQuery,\n    getUserByAuthIdQuery,\n    authenticateUserMutation,\n    addUserMutation,\n    updateUserMutation,\n    deleteUserMutation,\n    deleteAllUsersMutation,\n    getMoviesQuery,\n    getMoviesByUserIdQuery,\n    getMovieByIdQuery,\n    addMovieMutation,\n    updateMovieMutation,\n    deleteMovieMutation,\n    deleteAllMoviesMutation,\n}\n","import React, { useEffect, useContext } from \"react\"\nimport { useAuth0 } from \"@auth0/auth0-react\"\nimport { useQuery, useMutation } from '@apollo/client'\nimport { getUsersQuery, authenticateUserMutation, addUserMutation } from '../queries/queries'\nimport AuthContext from '../AuthContext'\n\nconst Profile = (props) => {\n    const { user, isAuthenticated, isLoading } = useAuth0()\n    const { data: usersData } = useQuery(getUsersQuery)\n    const [ authenticateUser ] = useMutation(authenticateUserMutation)\n    const [ addUser ] = useMutation(addUserMutation)\n    const { setToken } = useContext(AuthContext)\n\n    useEffect(() => {\n        if (isAuthenticated) {\n            handleCreateUser(user)\n        }\n    }, [isAuthenticated, user])\n\n    const handleCreateUser = (user) => {\n        if (usersData) {\n            const existingUser = usersData.users.find(\n                (existingUser) => existingUser.email === user.email\n            )\n\n            if (existingUser) {\n                authenticateUser({\n                    variables: {\n                        authId: user.sub,\n                        username: user.nickname,\n                        email: user.email,\n                        picture: user.picture\n                    },\n                    refetchQueries: [{ query: getUsersQuery }]\n                }).then(response => {\n                    const token = response.data.authenticateUser.token\n                    setToken(token)\n                }).catch((error) => {\n                    console.error(\"Error Authenticating User: \", error)\n                })\n            } else {\n                addUser({\n                    variables: {\n                        authId: user.sub,\n                        username: user.nickname,\n                        email: user.email,\n                        picture: user.picture\n                    },\n                    refetchQueries: [{ query: getUsersQuery }]\n                }).then(response => {\n                    const token = response.data.addUser.token\n                    setToken(token)\n                }).catch((error) => {\n                    console.error(\"Error Adding User: \", error)\n                })\n            }\n        }\n    }\n\n    if (isLoading) {\n        return (\n            <div>\n                <div className=\"spinner-grow text-primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n                <div className=\"spinner-grow text-primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n                <div className=\"spinner-grow text-primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n                <div className=\"spinner-grow text-primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n                <div className=\"spinner-grow text-primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n            </div>\n        )\n    }\n\n    if (isAuthenticated) {\n        return (\n            <div className=\"nav-link nav-links Profile dropdown-toggle\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                <img id=\"userPicture\" src={user.picture} alt={user.name} />\n                {user.name}\n            </div>\n        )\n    }\n\n    return null\n}\n\nexport default Profile\n","import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport LogoutButton from \"./LogoutButton\"\nimport Profile from \"./Profile\"\nimport logo from \"../assets/movieCrud.png\"\nimport \"../style/style.css\"\n\nconst Navbar = () => {\n    return (\n        <div className=\"Navbar\">\n            <nav className=\"navbar navbar-expand-lg navBar navbar-dark bg-dark\">\n                <div className=\"container-fluid\">\n                    <div className=\"navbar-brand navBarBrand\">\n                        <img className=\"navLogo\" alt=\"Logo\" src={logo} />\n                    </div>\n                    <button\n                    className=\"navbar-toggler\"\n                    type=\"button\"\n                    data-bs-toggle=\"collapse\"\n                    data-bs-target=\"#navbarNav\"\n                    aria-controls=\"navbarNav\"\n                    aria-expanded=\"false\"\n                    aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link nav-links\" to=\"/movies\">\n                                Movies\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link nav-links\" to=\"/movies/add\">\n                                Add To List\n                            </Link>\n                        </li>\n                    </ul>\n                    <ul className=\"navbar-nav\">\n                        <li className=\"nav-item dropdown\">\n                            <Profile />\n                            <ul className=\"dropdown-menu dropdown-menu-dark\" aria-labelledby=\"navbarDropdown\">\n                                <li>\n                                    <Link className=\"dropdown-item\" to=\"/movies/userMovies\">\n                                        My Movies\n                                    </Link>\n                                </li>\n                                <li>\n                                    <Link className=\"dropdown-item\" to=\"/settings\">\n                                        Settings\n                                    </Link>\n                                </li>\n                                <li>\n                                    <LogoutButton />\n                                </li>\n                            </ul>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </nav>\n    </div>\n    )\n}\n\nexport default Navbar\n","import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { useMutation } from '@apollo/client'\nimport { getMoviesQuery, getMoviesByUserIdQuery, deleteMovieMutation } from '../queries/queries'\nimport \"../style/style.css\"\n\nconst Movie = (props) => {\n    const { movieList, movies, refetchMovies } = props\n    const [deleteMovie ] = useMutation(deleteMovieMutation)\n\n    const handleDelete = (id) => {\n        deleteMovie({\n            variables: {\n                id: id\n            },\n            refetchQueries: [\n                { query: getMoviesQuery },\n                { query: getMoviesByUserIdQuery }\n            ],\n        }).then(() => refetchMovies())\n    }\n\n    if (movies) {\n        return movies.map((movie) => {\n            const editLink = \"/movies/edit/\" + movie.id\n            const showLink = \"/movies/show/\" + movie.id\n            return (\n                <li key={movie.id} className=\"list-group-item d-flex justify-content-between align-items-start movie-item\">\n                    <div className=\"image-container\">\n                        <img className=\"movie-poster\" alt=\"poster\" src={movie.poster_url} />\n                    </div>\n                    <div className=\"ms-2 me-auto\">\n                        <div className=\"movie-info\">\n                            <div className=\"fw-bold\">\n                                <Link className=\"movie-title\" to={showLink}>{movie.title}</Link>\n                            </div>\n                            <div>Directors: {movie.directors}</div>\n                            <div>Year: {movie.year}</div>\n                            <div>Rating: {movie.rating}</div>\n                        </div>\n                        <div className=\"movie-buttons\">\n                            <Link to={editLink} className=\"btn btn-primary movie-button\">Edit</Link>\n                            <Link to={movieList} className=\"ml-5px btn btn-danger movie-button\" onClick={() => handleDelete(movie.id)}>Delete</Link>\n                        </div>\n                    </div>\n                </li>\n            )\n        })\n    } else {\n        return null\n    }\n}\n\nexport default Movie\n","import React from \"react\"\nimport Movie from \"./Movie\"\nimport \"../style/style.css\"\n\nconst MovieTable = (props) => {\n    return (\n        <div className=\"movie-table\">\n            <ul className=\"list-group movie-list\">\n                <Movie movieList={props.movieList} movies={props.movies} refetchMovies={props.refetchMovies}/>\n            </ul>\n        </div>\n    )\n}\n\nexport default MovieTable\n","import React, { useState, useEffect } from \"react\"\nimport Navbar from \"./Navbar\"\nimport MovieTable from \"./MovieTable\"\nimport { useQuery } from '@apollo/client'\nimport { getMoviesQuery } from '../queries/queries'\nimport \"../style/style.css\"\n\nconst Movies = (props) => {\n    const { data: moviesData, refetch: moviesRefetch } = useQuery(getMoviesQuery)\n    const [movies, setMovies] = useState(null)\n\n    useEffect(() => {\n        if (moviesData) {\n            setMovies(moviesData.movies)\n        }\n    }, [moviesData])\n\n    if (moviesData != null) {\n        const movieList = \"/movies\"\n        return (\n            <div>\n                <Navbar />\n                <MovieTable movieList={movieList} movies={movies} refetchMovies={moviesRefetch}/>\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            <Navbar />\n            <div className=\"loader\">\n                <div className=\"spinner-grow text-primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n                <div className=\"spinner-grow text-primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n                <div className=\"spinner-grow text-primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n                <div className=\"spinner-grow text-primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n                <div className=\"spinner-grow text-primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Movies\n","import React, { useState, useEffect } from \"react\"\nimport Navbar from \"./Navbar\"\nimport MovieTable from \"./MovieTable\"\nimport { useAuth0 } from \"@auth0/auth0-react\"\nimport { useQuery } from '@apollo/client'\nimport { getMoviesByUserIdQuery, getUserByAuthIdQuery } from '../queries/queries'\nimport \"../style/style.css\"\n\nconst UserMovies = (props) => {\n    const { user, isAuthenticated } = useAuth0()\n    const [userMovies, setUserMovies] = useState(null)\n    const { data: userData } = useQuery(getUserByAuthIdQuery, {\n        variables: {\n            authId: isAuthenticated ? user.sub : null\n        },\n        skip: !user\n    })\n    const { data: userMoviesData, refetch: userMoviesRefetch } = useQuery(getMoviesByUserIdQuery, {\n        variables: {\n            id: userData ? userData.userByAuthId.id : null\n        },\n        skip: !userData\n    })\n\n    useEffect(() => {\n        if (userMoviesData) {\n            setUserMovies(userMoviesData.moviesByUserId)\n        }\n    }, [userMoviesData])\n\n    if (userMoviesData != null) {\n        const movieList = \"/movies/userMovies\"\n        return (\n            <div>\n                <Navbar />\n                <MovieTable movieList={movieList} movies={userMovies} refetchMovies={userMoviesRefetch}/>\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            <Navbar />\n            <div className=\"loader\">\n                <div className=\"spinner-grow text-primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n                <div className=\"spinner-grow text-primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n                <div className=\"spinner-grow text-primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n                <div className=\"spinner-grow text-primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n                <div className=\"spinner-grow text-primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default UserMovies\n","import React, { useState } from \"react\"\nimport { Link, Redirect } from \"react-router-dom\"\nimport Navbar from \"./Navbar\"\nimport { useAuth0 } from \"@auth0/auth0-react\"\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { getMoviesQuery, getUserByAuthIdQuery, addMovieMutation } from \"../queries/queries\"\nimport \"../style/style.css\"\n\nconst AddMovie = (props) => {\n    const goBack = () => {\n        props.history.goBack()\n    }\n    const { user, isAuthenticated } = useAuth0()\n    const [redirectToReferrer, setRedirectToReferrer] = useState(false)\n    const [ addMovie ] = useMutation(addMovieMutation)\n    const { data: userData } = useQuery(getUserByAuthIdQuery, {\n        variables: {\n            authId: isAuthenticated ? user.sub : null\n        }\n    })\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const title = event.target.title.value\n        const directors = event.target.directors.value\n        const year = parseInt(event.target.year.value)\n        const rating = parseInt(event.target.rating.value)\n        const poster_url = event.target.posterURL.value\n        const user_id = userData.userByAuthId.id\n\n        addMovie({\n            variables: {\n                title: title,\n                directors: directors,\n                year: year,\n                rating: rating,\n                poster_url: poster_url,\n                user_id: user_id\n            },\n            refetchQueries: [{ query: getMoviesQuery }]\n        }).then(() => {}).catch((error) => {\n            console.error(\"Error Adding Movie: \", error)\n        }).then(() => setRedirectToReferrer(true))\n    }\n\n    if (redirectToReferrer) {\n        return <Redirect to=\"/movies\" />\n    }\n\n    if(isAuthenticated) {\n        return (\n            <div>\n                <Navbar />\n                <div className=\"AddMovie\">\n                    <h3 className=\"heading\">Add Movie:</h3>\n                    <form onSubmit={handleSubmit}>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"title\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"inputTitle\"\n                            placeholder=\"Title\"/>\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"directors\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"inputDirectors\"\n                            placeholder=\"Directors\"/>\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"year\"\n                            type=\"text\"\n                            pattern=\"[0-9]*\"\n                            title=\"A number value is required.\"\n                            className=\"form-control\"\n                            id=\"inputYear\"\n                            placeholder=\"Year\"/>\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"rating\"\n                            type=\"text\"\n                            pattern=\"[0-9]*\"\n                            title=\"A number value is required.\"\n                            className=\"form-control\"\n                            id=\"inputRating\"\n                            placeholder=\"Rating\"/>\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"posterURL\"\n                            type=\"text\"\n                            pattern=\"https?://.+\"\n                            title=\"A valid URL value is required.\"\n                            className=\"form-control\"\n                            id=\"inputPosterURL\"\n                            placeholder=\"Poster URL\"/>\n                        </div>\n                        <div className=\"movie-buttons\">\n                            <button className=\"btn btn-primary movie-button\" type=\"submit\">\n                                Submit\n                            </button>\n                            <Link to=\"#\" className=\"btn btn-danger movie-button\" onClick={goBack}>\n                                Cancel\n                            </Link>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    } else {\n        return(\n            <div>\n                <Navbar />\n            </div>\n        )\n    }\n}\n\nexport default AddMovie\n","import React, { useState } from \"react\"\nimport { Link, Redirect } from \"react-router-dom\"\nimport Navbar from \"./Navbar\"\nimport { useQuery, useMutation } from '@apollo/client'\nimport { getMoviesQuery, getMovieByIdQuery, updateMovieMutation } from \"../queries/queries\"\nimport \"../style/style.css\"\n\nconst EditMovie = (props) => {\n    const goBack = () => {\n        props.history.goBack()\n    }\n    const [redirectToReferrer, setRedirectToReferrer] = useState(false)\n    const [ updateMovie ] = useMutation(updateMovieMutation)\n    const { id } = props.match.params\n    const { data: movieData } = useQuery(getMovieByIdQuery, {\n        variables: {\n            id: id ? id : null\n        }\n    })\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const title = event.target.title.value\n        const directors = event.target.directors.value\n        const year = parseInt(event.target.year.value)\n        const rating = parseInt(event.target.rating.value)\n        const poster_url = event.target.posterURL.value\n\n        updateMovie({\n            variables: {\n                id: id,\n                title: title,\n                directors: directors,\n                year: year,\n                rating: rating,\n                poster_url: poster_url\n            },\n            refetchQueries: [{ query: getMoviesQuery }]\n        }).then(() => {}).catch((error) => {\n            console.error(\"Error Updating Movie: \", error)\n        }).then(() => setRedirectToReferrer(true))\n    }\n\n    if (redirectToReferrer) {\n        return <Redirect to=\"/movies\" />\n    }\n\n    if(movieData != null) {\n        const movie = movieData.movieById\n        return (\n            <div>\n                <Navbar />\n                <div className=\"EditMovie\">\n                    <h3 className=\"heading\">Edit Movie: {movie.title}</h3>\n                    <img alt=\"Poster\" src={movie.poster_url} className=\"poster\" />\n                    <form onSubmit={handleSubmit}>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"title\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"inputTitle\"\n                            placeholder={\"Title: \" + movie.title}/>\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"directors\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"inputDirectors\"\n                            placeholder={\"Director(s): \" + movie.directors}/>\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"year\"\n                            type=\"text\"\n                            pattern=\"[0-9]*\"\n                            title=\"A number value is required.\"\n                            className=\"form-control\"\n                            id=\"inputYear\"\n                            placeholder={\"Year: \" + movie.year}/>\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"rating\"\n                            type=\"text\"\n                            pattern=\"[0-9]*\"\n                            title=\"A number value is required.\"\n                            className=\"form-control\"\n                            id=\"inputRating\"\n                            placeholder={\"Rating: \" + movie.rating}/>\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"posterURL\"\n                            type=\"text\"\n                            pattern=\"https://.+\"\n                            title=\"A valid URL value is required.\"\n                            className=\"form-control\"\n                            id=\"inputPosterURL\"\n                            placeholder={\"Poster URL: \" + movie.poster_url}/>\n                        </div>\n                        <div className=\"movie-buttons\">\n                            <button className=\"btn btn-primary movie-button\" type=\"submit\">\n                                Edit\n                            </button>\n                            <Link to=\"#\" className=\"btn btn-danger movie-button\" onClick={goBack}>\n                                Cancel\n                            </Link>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                <Navbar />\n            </div>\n        )\n    }\n\n}\n\nexport default EditMovie\n","import React from \"react\"\nimport Navbar from \"./Navbar\"\nimport { useQuery } from '@apollo/client'\nimport { getMovieByIdQuery } from \"../queries/queries\"\nimport \"../style/style.css\"\n\nconst ShowMovie = (props) => {\n    const { id } = props.match.params\n    const { data: movieData } = useQuery(getMovieByIdQuery, {\n        variables: {\n            id: id ? id : null\n        }\n    })\n\n    if (movieData != null) {\n        const movie = movieData.movieById\n        return (\n            <div>\n                <Navbar />\n                <div className=\"ShowMovie\">\n                    <h3 className=\"heading\">{movie.title}</h3>\n                    <img className=\"poster\" alt=\"Poster\" src={movie.poster_url} />\n                    <h6>Title: {movie.title}</h6>\n                    <h6>Directors: {movie.directors}</h6>\n                    <h6>Year: {movie.year}</h6>\n                    <h6>Rating: {movie.rating}</h6>\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                <Navbar />\n            </div>\n        )\n    }\n}\n\nexport default ShowMovie\n","import React from \"react\"\nimport Navbar from \"./Navbar\"\nimport \"../style/style.css\"\n\nconst Settings = () => {\n    return (\n        <div>\n            <Navbar />\n        </div>\n    )\n}\n\nexport default Settings\n","import React, { useState } from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\"\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client'\nimport { Auth0Provider } from \"@auth0/auth0-react\"\nimport AuthContext from './AuthContext'\nimport \"./style/style.css\"\n\nimport Home from \"./components/Home\"\nimport Movies from \"./components/Movies\"\nimport UserMovies from \"./components/UserMovies\"\nimport AddMovie from \"./components/AddMovie\"\nimport EditMovie from \"./components/EditMovie\"\nimport ShowMovie from \"./components/ShowMovie\"\nimport Settings from \"./components/Settings\"\n\nconst App = () => {\n    const [token, setToken] = useState(\"\")\n    const client = new ApolloClient({\n        uri: \"http://localhost:3001/graphql\",\n        cache: new InMemoryCache(),\n        headers: {\n            Authorization: token ? `${token}` : \"\",\n        }\n    })\n\n    const domain = process.env.REACT_APP_AUTH0_DOMAIN\n    const clientId = process.env.REACT_APP_AUTH0_CLIENT_ID\n\n    return (\n        <Auth0Provider domain={domain} clientId={clientId} authorizationParams={{ redirect_uri: window.location.origin + \"/movies\" }}>\n            <ApolloProvider client={client}>\n                <AuthContext.Provider value={{ token, setToken }}>\n                    <div>\n                        <BrowserRouter>\n                            <Switch>\n                                <Route path=\"/settings\" component={Settings} />\n                                <Route path=\"/movies/show/:id\" component={ShowMovie} />\n                                <Route path=\"/movies/edit/:id\" component={EditMovie} />\n                                <Route path=\"/movies/add\" component={AddMovie} />\n                                <Route path=\"/movies/userMovies\" component={UserMovies} />\n                                <Route path=\"/movies\" component={Movies} />\n                                <Route exact path=\"/\" component={Home} />\n                            </Switch>\n                        </BrowserRouter>\n                    </div>\n                </AuthContext.Provider>\n            </ApolloProvider>\n        </Auth0Provider>\n    )\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}