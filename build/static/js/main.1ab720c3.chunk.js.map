{"version":3,"sources":["assets/movieCrud.png","components/Login.js","components/Home.js","components/Logout.js","components/Profile.js","components/Navbar.js","queries/queries.js","components/Movie.js","components/MovieTable.js","components/Movies.js","components/UserMovies.js","components/AddMovie.js","components/EditMovie.js","components/ShowMovie.js","components/Auth.js","index.js"],"names":["module","exports","__webpack_require__","p","Login","loginWithRedirect","useAuth0","react_default","a","createElement","className","onClick","Home","alt","src","Logo","components_Login","Logout","logout","id","event","localStorage","removeItem","logoutParams","returnTo","window","location","origin","Profile","_useAuth","user","isAuthenticated","isLoading","role","data-bs-toggle","aria-expanded","picture","name","Navbar","logo","type","data-bs-target","aria-controls","aria-label","Link","to","components_Profile","aria-labelledby","components_Logout","getUsersQuery","gql","_templateObject","getUserByAuthIdQuery","_templateObject2","_templateObject3","authenticateUserMutation","_templateObject4","addUserMutation","_templateObject5","getMoviesQuery","_templateObject6","_templateObject7","_templateObject8","_templateObject9","getMoviesByUserIdQuery","_templateObject10","getMovieByIdQuery","_templateObject11","addMovieMutation","_templateObject12","updateMovieMutation","_templateObject13","deleteMovieMutation","_templateObject14","Movie","_templateObject15","props","movieList","movies","refetchMovies","_useMutation","useMutation","deleteMovie","Object","slicedToArray","userData","useQuery","variables","authId","sub","skip","data","sortedMovies","slice","sort","b","map","movie","editLink","showLink","key","poster_url","title","directors","year","rating","user_id","userByAuthId","refetchQueries","query","then","catch","error","console","handleDelete","MovieTable","components_Movie","Movies","_useQuery","moviesData","moviesRefetch","refetch","_useState","useState","_useState2","setMovies","useEffect","components_Navbar","components_MovieTable","UserMovies","userMovies","setUserMovies","_useQuery2","userMoviesData","userMoviesRefetch","moviesByUserId","AddMovie","redirectToMovies","setRedirectToMovies","_useState3","_useState4","selectedRating","setSelectedRating","addMovie","Redirect","onSubmit","preventDefault","_event$target","target","posterURL","value","parseInt","required","pattern","placeholder","defaultValue","min","max","onChange","history","goBack","EditMovie","updateMovie","match","params","movieData","movieById","ShowMovie","loading","Auth","_ref","updateToken","usersData","authenticateUser","_useMutation3","addUser","interval","users","find","existingUser","email","username","nickname","response","token","getItem","setItem","jwtToken","handleUserAuth","setInterval","decodedToken","jwt_decode","currentTime","Date","now","exp","clearInterval","App","setToken","client","ApolloClient","uri","cache","InMemoryCache","headers","Authorization","concat","auth0_react_esm","domain","process","clientId","authorizationParams","redirect_uri","ApolloProvider","BrowserRouter","Switch","Route","path","component","withAuthenticationRequired","exact","components_Auth","localToken","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.1ab720c3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/movieCrud.a3a7187a.png\";","import React from \"react\"\nimport { useAuth0 } from \"@auth0/auth0-react\"\n\nconst Login = () => {\n    const { loginWithRedirect } = useAuth0()\n    return (\n        <button className=\"btn btn-primary button\" onClick={() => loginWithRedirect()}>\n            Log In\n        </button>\n    )\n}\n\nexport default Login\n","import React from \"react\"\nimport Logo from \"../assets/movieCrud.png\"\nimport Login from \"./Login\"\nimport \"../style/style.css\"\n\nconst Home = () => {\n    return (\n        <div className=\"Home\">\n            <img className=\"logo\" alt=\"MovieCrud Logo\" src={Logo} />\n            <h1 className=\"app-title\">MovieCrud</h1>\n            <Login />\n        </div>\n    )\n}\n\nexport default Home\n","import React from \"react\"\nimport { useAuth0 } from \"@auth0/auth0-react\"\n\nconst Logout = () => {\n    const { logout } = useAuth0()\n\n    const handleLogout = (event) => {\n        localStorage.removeItem(\"jwtToken\")\n        logout({ logoutParams: { returnTo: window.location.origin } })\n    }\n\n    return (\n        <button className=\"dropdown-item profile-links\" id=\"logout\" onClick={handleLogout}>\n            Log Out\n        </button>\n    )\n}\n\nexport default Logout\n","import React from \"react\"\nimport { useAuth0 } from \"@auth0/auth0-react\"\n\nconst Profile = () => {\n    const { user, isAuthenticated, isLoading } = useAuth0()\n\n    if (isLoading) {\n        return (\n            <div>\n                <div className=\"spinner-border text-primary\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                </div>\n            </div>\n        )\n    }\n\n    if (isAuthenticated) {\n        return (\n            <div className=\"nav-link nav-links Profile dropdown-toggle\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                <img id=\"userPicture\" src={user.picture} alt={user.name} />\n                {user.name}\n            </div>\n        )\n    }\n\n    return null\n}\n\nexport default Profile\n","import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport Logout from \"./Logout\"\nimport Profile from \"./Profile\"\nimport logo from \"../assets/movieCrud.png\"\nimport \"../style/style.css\"\n\nconst Navbar = () => {\n    return (\n        <div className=\"Navbar\">\n            <nav className=\"navbar navbar-expand-lg navBar navbar-dark bg-dark\">\n                <div className=\"container-fluid\">\n                    <div className=\"navbar-brand navBarBrand\">\n                        <img className=\"navLogo\" alt=\"Logo\" src={logo} />\n                    </div>\n                    <button\n                    className=\"navbar-toggler\"\n                    type=\"button\"\n                    data-bs-toggle=\"collapse\"\n                    data-bs-target=\"#navbarNav\"\n                    aria-controls=\"navbarNav\"\n                    aria-expanded=\"false\"\n                    aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link nav-links\" to=\"/movies\">\n                                Movies\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link nav-links\" to=\"/movies/add\">\n                                Add To List\n                            </Link>\n                        </li>\n                    </ul>\n                    <ul className=\"navbar-nav\">\n                        <li className=\"nav-item dropdown\">\n                            <Profile />\n                            <ul className=\"dropdown-menu dropdown-menu-dark\" aria-labelledby=\"navbarDropdown\">\n                                <li>\n                                    <Link className=\"dropdown-item profile-links\" to=\"/movies/userMovies\">\n                                        My Movies\n                                    </Link>\n                                </li>\n                                <li>\n                                    <Logout className=\"profile-links\" />\n                                </li>\n                            </ul>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </nav>\n    </div>\n    )\n}\n\nexport default Navbar\n","import { gql } from \"@apollo/client\"\n\nconst getUsersQuery = gql`\n    {\n        users {\n            id\n            authId\n            username\n            email\n            picture\n        }\n    }\n`\n\nconst getUserByIdQuery = gql`\n    query GetUserById($id: ID!) {\n        userById(id: $id) {\n            id\n            authId\n            username\n            email\n            picture\n        }\n    }\n`\n\nconst getUserByAuthIdQuery = gql`\n    query GetUserByAuthId($authId: String!) {\n        userByAuthId(authId: $authId) {\n            id\n            authId\n            username\n            email\n            picture\n        }\n    }\n`\n\nconst authenticateUserMutation = gql`\n    mutation (\n        $authId: String!\n        $username: String!\n        $email: String!\n        $picture: String!\n    ) {\n        authenticateUser(\n            authId: $authId\n            username: $username\n            email: $email\n            picture: $picture\n        ) {\n            token\n        }\n    }\n`\n\nconst addUserMutation = gql`\n    mutation (\n        $authId: String!\n        $username: String!\n        $email: String!\n        $picture: String!\n    ) {\n        addUser(\n            authId: $authId\n            username: $username\n            email: $email\n            picture: $picture\n        ) {\n            token\n        }\n    }\n`\n\nconst updateUserMutation = gql`\n    mutation (\n        $id: ID!\n        $authId: String!\n        $username: String!\n        $email: String!\n        $picture: String!\n    ) {\n        updateUser(\n            id: $id\n            authId: $authId\n            username: $username\n            email: $email\n            picture: $picture\n        ) {\n            id\n            authId\n            username\n            email\n            picture\n        }\n    }\n`\n\nconst deleteUserMutation = gql`\n    mutation ($id: ID!) {\n        deleteUser(id: $id) {\n            id\n            authId\n            username\n            email\n            picture\n        }\n    }\n`\n\nconst deleteAllUsersMutation = gql`\n    mutation {\n        deleteAllUsers {\n            id\n            authId\n            username\n            email\n            picture\n        }\n    }\n`\n\nconst getMoviesQuery = gql`\n    {\n        movies {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n        }\n    }\n`\n\nconst getMoviesByUserIdQuery = gql`\n    query GetMoviesByUserId($id: ID!) {\n        moviesByUserId(id: $id) {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n        }\n    }\n`\n\nconst getMovieByIdQuery = gql`\n    query GetMovieById($id: ID!) {\n        movieById(id: $id) {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n        }\n    }\n`\n\nconst addMovieMutation = gql`\n    mutation (\n        $title: String!\n        $directors: String!\n        $year: Int!\n        $rating: Int!\n        $poster_url: String!\n        $user_id: Int!\n    ) {\n        addMovie(\n            title: $title\n            directors: $directors\n            year: $year\n            rating: $rating\n            poster_url: $poster_url\n            user_id: $user_id\n        ) {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n            user_id\n        }\n    }\n`\n\nconst updateMovieMutation = gql`\n    mutation (\n        $id: ID!\n        $title: String!\n        $directors: String!\n        $year: Int!\n        $rating: Int!\n        $poster_url: String!\n    ) {\n        updateMovie(\n            id: $id\n            title: $title\n            directors: $directors\n            year: $year\n            rating: $rating\n            poster_url: $poster_url\n        ) {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n        }\n    }\n`\n\nconst deleteMovieMutation = gql`\n    mutation ($id: ID!) {\n        deleteMovie(id: $id) {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n        }\n    }\n`\n\nconst deleteAllMoviesMutation = gql`\n    mutation {\n        deleteAll {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n        }\n    }\n`\n\nexport {\n    getUsersQuery,\n    getUserByIdQuery,\n    getUserByAuthIdQuery,\n    authenticateUserMutation,\n    addUserMutation,\n    updateUserMutation,\n    deleteUserMutation,\n    deleteAllUsersMutation,\n    getMoviesQuery,\n    getMoviesByUserIdQuery,\n    getMovieByIdQuery,\n    addMovieMutation,\n    updateMovieMutation,\n    deleteMovieMutation,\n    deleteAllMoviesMutation,\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport {\n    getMoviesQuery,\n    getMoviesByUserIdQuery,\n    getUserByAuthIdQuery,\n    deleteMovieMutation,\n} from \"../queries/queries\";\nimport \"../style/style.css\";\n\nconst Movie = (props) => {\n    const { user, isAuthenticated } = useAuth0();\n    const { movieList, movies, refetchMovies } = props;\n    const [deleteMovie] = useMutation(deleteMovieMutation);\n\n    const { data: userData } = useQuery(getUserByAuthIdQuery, {\n        variables: {\n            authId: isAuthenticated ? user.sub : null,\n        },\n        skip: !user,\n    });\n\n    const handleDelete = (id) => {\n        const user_id = userData.userByAuthId.id;\n        deleteMovie({\n            variables: {\n                id: id,\n            },\n            refetchQueries: [\n                { query: getMoviesQuery },\n                { query: getMoviesByUserIdQuery, variables: { id: user_id } },\n            ],\n        })\n            .then(() => refetchMovies())\n            .catch((error) => {\n                console.error(\"Error deleting movie: \", error);\n            });\n    };\n\n    if (movies) {\n        const sortedMovies = movies.slice().sort((a, b) => a.id - b.id);\n        return (\n            <div className=\"row justify-content-md-center\">\n                {sortedMovies.map((movie) => {\n                    const editLink = \"/movies/edit/\" + movie.id;\n                    const showLink = \"/movies/show/\" + movie.id;\n                    return (\n                        <div key={movie.id} className=\"col-md-auto\">\n                            <div className=\"list-group-item Movie\">\n                                <Link className=\"image-container\" to={showLink}>\n                                    <img className=\"movie-poster\" alt=\"poster\" src={movie.poster_url} />\n                                </Link>\n                                <div className=\"me-auto movie-details\">\n                                    <div className=\"movie-info\">\n                                        <div className=\"fw-bold movie-title\">\n                                            <Link className=\"movie-title-link\" to={showLink}>\n                                                {movie.title}\n                                            </Link>\n                                        </div>\n                                        <div className=\"movie-directors\">Directors: {movie.directors}</div>\n                                        <div>Year: {movie.year}</div>\n                                        <div>Rating: {movie.rating}</div>\n                                    </div>\n                                    {movieList === \"/movies/userMovies\" ? (\n                                        <div className=\"movie-buttons\">\n                                            <Link to={editLink} className=\"btn btn-primary movie-button\">\n                                                Edit\n                                            </Link>\n                                            <Link\n                                            to={movieList}\n                                            className=\"ml-5px btn btn-danger movie-button\"\n                                            onClick={() => handleDelete(movie.id)}>\n                                            Delete\n                                        </Link>\n                                    </div>\n                                    ) : null}\n                                </div>\n                            </div>\n                        </div>\n                    );\n                })}\n                    </div>\n        );\n    } else {\n        return null;\n    }\n};\n\nexport default Movie;\n","import React from \"react\"\nimport Movie from \"./Movie\"\nimport \"../style/style.css\"\n\nconst MovieTable = (props) => {\n    return (\n        <div className=\"MovieTable\">\n            <ul className=\"list-group movie-list\">\n                <Movie className=\"Movie\" movieList={props.movieList} movies={props.movies} refetchMovies={props.refetchMovies}/>\n            </ul>\n        </div>\n    )\n}\n\nexport default MovieTable\n","import React, { useState, useEffect } from \"react\"\nimport Navbar from \"./Navbar\"\nimport MovieTable from \"./MovieTable\"\nimport { useQuery } from \"@apollo/client\"\nimport { getMoviesQuery } from \"../queries/queries\"\nimport \"../style/style.css\"\n\nconst Movies = () => {\n    const { data: moviesData, refetch: moviesRefetch } = useQuery(getMoviesQuery)\n    const [movies, setMovies] = useState(null)\n    const movieList = \"/movies\"\n\n    useEffect(() => {\n        if (moviesData) {\n            setMovies(moviesData.movies)\n        }\n    }, [moviesData])\n\n    if (moviesData) {\n        return (\n            <div className=\"Movies\">\n                <Navbar />\n                <MovieTable movieList={movieList} movies={movies} refetchMovies={moviesRefetch}/>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"Movies\">\n            <Navbar />\n            <div className=\"loader\">\n                <div className=\"spinner-border text-primary loader-spinner\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Movies\n","import React, { useState, useEffect } from \"react\"\nimport Navbar from \"./Navbar\"\nimport MovieTable from \"./MovieTable\"\nimport { useAuth0 } from \"@auth0/auth0-react\"\nimport { useQuery } from \"@apollo/client\"\nimport { getMoviesByUserIdQuery, getUserByAuthIdQuery } from \"../queries/queries\"\nimport \"../style/style.css\"\n\nconst UserMovies = () => {\n    const { user, isAuthenticated } = useAuth0()\n    const [userMovies, setUserMovies] = useState(null)\n    const { data: userData } = useQuery(getUserByAuthIdQuery, {\n        variables: {\n            authId: isAuthenticated ? user.sub : null\n        },\n        skip: !user\n    })\n    const { data: userMoviesData, refetch: userMoviesRefetch } = useQuery(getMoviesByUserIdQuery, {\n        variables: {\n            id: userData ? userData.userByAuthId.id : null\n        },\n        skip: !userData\n    })\n\n    useEffect(() => {\n        if (userMoviesData) {\n            setUserMovies(userMoviesData.moviesByUserId)\n        }\n    }, [userMoviesData])\n\n    if (userMoviesData) {\n        const movieList = \"/movies/userMovies\"\n        return (\n            <div className=\"UserMovies\">\n                <Navbar />\n                <MovieTable movieList={movieList} movies={userMovies} refetchMovies={userMoviesRefetch}/>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"UserMovies\">\n            <Navbar />\n            <div className=\"loader\">\n                <div className=\"spinner-border text-primary loader-spinner\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default UserMovies\n","import React, { useState } from \"react\"\nimport { Redirect } from \"react-router-dom\"\nimport Logo from \"../assets/movieCrud.png\"\nimport Navbar from \"./Navbar\"\nimport { useAuth0 } from \"@auth0/auth0-react\"\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { getMoviesQuery, getMoviesByUserIdQuery, getUserByAuthIdQuery, addMovieMutation } from \"../queries/queries\"\nimport \"../style/style.css\"\n\nconst AddMovie = (props) => {\n    const { user, isAuthenticated } = useAuth0()\n    const [redirectToMovies, setRedirectToMovies] = useState(false)\n    const [selectedRating, setSelectedRating] = useState(5)\n    const [addMovie] = useMutation(addMovieMutation)\n    const { data: userData } = useQuery(getUserByAuthIdQuery, {\n        variables: {\n            authId: isAuthenticated ? user.sub : null,\n        },\n        skip: !user,\n    })\n\n    const goBack = () => {\n        props.history.goBack()\n    }\n\n    const handleRangeChange = (event) => {\n        setSelectedRating(parseInt(event.target.value))\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const { title, directors, year, rating, posterURL } = event.target\n        const user_id = userData.userByAuthId.id\n\n        addMovie({\n            variables: {\n                title: title.value,\n                directors: directors.value,\n                year: parseInt(year.value),\n                rating: parseInt(rating.value),\n                poster_url: posterURL.value,\n                user_id: user_id,\n            },\n            refetchQueries: [\n                { query: getMoviesQuery },\n                { query: getMoviesByUserIdQuery, variables: { id: user_id } },\n            ],\n        }).catch((error) => {\n            console.error(\"Error Adding Movie: \", error)\n        }).then(() => setRedirectToMovies(true))\n    }\n\n    if (redirectToMovies) {\n        return <Redirect to=\"/movies\" />\n    }\n\n    if (isAuthenticated) {\n        return (\n            <div>\n                <Navbar />\n                <div className=\"AddMovie\">\n                    <img className=\"logo\" alt=\"MovieCrud Logo\" src={Logo} />\n                    <h3 className=\"heading\">Add Movie:</h3>\n                    <form onSubmit={handleSubmit}>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"title\"\n                            type=\"text\"\n                            pattern=\".*\"\n                            title=\"Please enter a valid movie title.\"\n                            className=\"form-control\"\n                            id=\"inputTitle\"\n                            placeholder=\"Title\"/>\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"directors\"\n                            type=\"text\"\n                            pattern=\".*\"\n                            title=\"Please enter a valid name for the movie director.\"\n                            className=\"form-control\"\n                            id=\"inputDirectors\"\n                            placeholder=\"Directors\"/>\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"year\"\n                            type=\"text\"\n                            pattern=\"^(19|20)\\d{2}$\"\n                            title=\"Please enter a valid year (1900-2099).\"\n                            className=\"form-control\"\n                            id=\"inputYear\"\n                            placeholder=\"Year\"/>\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"posterURL\"\n                            type=\"text\"\n                            pattern=\"https?://.+\"\n                            title=\"Please enter a valid URL starting with http:// or https://\"\n                            className=\"form-control\"\n                            id=\"inputPosterURL\"\n                            placeholder=\"Poster URL\"/>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Rating: {selectedRating}</label>\n                            <input\n                            required\n                            name=\"rating\"\n                            type=\"range\"\n                            className=\"custom-range\"\n                            defaultValue={selectedRating}\n                            min=\"1\"\n                            max=\"5\"\n                            onChange={handleRangeChange}/>\n                        </div>\n                        <div className=\"movie-buttons\">\n                            <button className=\"btn btn-primary movie-button\" type=\"submit\">\n                                Submit\n                            </button>\n                            <button className=\"btn btn-danger movie-button\" type=\"button\" onClick={goBack}>\n                                Cancel\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                <Navbar />\n            </div>\n        )\n    }\n}\n\nexport default AddMovie\n","import React, { useEffect, useState } from \"react\"\nimport Navbar from \"./Navbar\"\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { getMoviesQuery, getMovieByIdQuery, updateMovieMutation } from \"../queries/queries\"\nimport \"../style/style.css\"\n\nconst EditMovie = (props) => {\n    const [selectedRating, setSelectedRating] = useState(5)\n    const [ updateMovie ] = useMutation(updateMovieMutation)\n    const { id } = props.match.params\n    const { data: movieData } = useQuery(getMovieByIdQuery, {\n        variables: {\n            id: id ? id : null\n        },\n        skip: !id\n    })\n\n    const goBack = () => {\n        props.history.goBack()\n    }\n\n    const handleRangeChange = (event) => {\n        setSelectedRating(event.target.value)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const { title, directors, year, rating, posterURL } = event.target\n\n        updateMovie({\n            variables: {\n                id: id,\n                title: title.value,\n                directors: directors.value,\n                year: parseInt(year.value),\n                rating: parseInt(rating.value),\n                poster_url: posterURL.value\n            },\n            refetchQueries: [{ query: getMoviesQuery }]\n        }).catch((error) => {\n            console.error(\"Error Updating Movie: \", error)\n        }).then(() => goBack())\n    }\n\n    useEffect(() => {\n        if (movieData && movieData.movieById && movieData.movieById.rating) {\n            setSelectedRating(movieData.movieById.rating)\n        }\n    }, [movieData])\n\n    if(movieData) {\n        const movie = movieData.movieById\n        return (\n            <div>\n                <Navbar />\n                <div className=\"EditMovie\">\n                    <h3 className=\"heading\">Edit Movie: {movie.title}</h3>\n                    <img alt=\"Poster\" src={movie.poster_url} className=\"poster\" />\n                    <form onSubmit={handleSubmit}>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"title\"\n                            type=\"text\"\n                            pattern=\".*\"\n                            title=\"Please enter a valid movie title.\"\n                            className=\"form-control\"\n                            id=\"inputTitle\"\n                            defaultValue={movie.title} />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"directors\"\n                            type=\"text\"\n                            pattern=\".*\"\n                            title=\"Please enter a valid name for the movie director.\"\n                            className=\"form-control\"\n                            id=\"inputDirectors\"\n                            defaultValue={movie.directors} />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"year\"\n                            type=\"text\"\n                            pattern=\"^(19|20)\\d{2}$\"\n                            title=\"Please enter a valid year (1900-2099).\"\n                            className=\"form-control\"\n                            id=\"inputYear\"\n                            defaultValue={movie.year} />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"posterURL\"\n                            type=\"text\"\n                            pattern=\"https?://.+\"\n                            title=\"Please enter a valid URL starting with http:// or https://\"\n                            className=\"form-control\"\n                            id=\"inputPosterURL\"\n                            defaultValue={movie.poster_url} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Rating: {selectedRating}</label>\n                            <input\n                            required\n                            name=\"rating\"\n                            type=\"range\"\n                            className=\"custom-range\"\n                            min=\"1\"\n                            max=\"5\"\n                            value={selectedRating}\n                            onChange={handleRangeChange} />\n                        </div>\n                        <div className=\"movie-buttons\">\n                            <button className=\"btn btn-primary movie-button\" type=\"submit\">\n                                Submit\n                            </button>\n                            <button className=\"btn btn-danger movie-button\" type=\"button\" onClick={goBack}>\n                                Cancel\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                <Navbar />\n            </div>\n        )\n    }\n\n}\n\nexport default EditMovie\n","import React from \"react\"\nimport Navbar from \"./Navbar\"\nimport { useQuery } from \"@apollo/client\"\nimport { getMovieByIdQuery } from \"../queries/queries\"\nimport \"../style/style.css\"\n\nconst ShowMovie = (props) => {\n    const { id } = props.match.params\n    const { data: movieData, loading } = useQuery(getMovieByIdQuery, {\n        variables: {\n            id: id ? id : null\n        }\n    })\n\n    if (loading) {\n        return (\n            <div>\n                <Navbar />\n                <div className=\"loader\">\n                    <div className=\"spinner-grow text-primary\" role=\"status\">\n                        <span className=\"visually-hidden\">Loading...</span>\n                    </div>\n                    <div className=\"spinner-grow text-primary\" role=\"status\">\n                        <span className=\"visually-hidden\">Loading...</span>\n                    </div>\n                    <div className=\"spinner-grow text-primary\" role=\"status\">\n                        <span className=\"visually-hidden\">Loading...</span>\n                    </div>\n                    <div className=\"spinner-grow text-primary\" role=\"status\">\n                        <span className=\"visually-hidden\">Loading...</span>\n                    </div>\n                    <div className=\"spinner-grow text-primary\" role=\"status\">\n                        <span className=\"visually-hidden\">Loading...</span>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    if (movieData != null) {\n        const movie = movieData.movieById\n        return (\n            <div>\n                <Navbar />\n                <div className=\"ShowMovie\">\n                    <h3 className=\"heading\">{movie.title}</h3>\n                    <img className=\"poster\" alt=\"Poster\" src={movie.poster_url} />\n                    <h6>Title: {movie.title}</h6>\n                    <h6>Directors: {movie.directors}</h6>\n                    <h6>Year: {movie.year}</h6>\n                    <h6>Rating: {movie.rating}</h6>\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                <Navbar />\n            </div>\n        )\n    }\n}\n\nexport default ShowMovie\n","import { useEffect } from \"react\"\nimport { useAuth0 } from \"@auth0/auth0-react\"\nimport { useQuery, useMutation } from \"@apollo/client\"\nimport { getUsersQuery, authenticateUserMutation, addUserMutation } from \"../queries/queries\"\nimport jwt_decode from \"jwt-decode\"\n\nconst Auth = ({ updateToken }) => {\n    const { user, isAuthenticated } = useAuth0()\n    const { data: usersData } = useQuery(getUsersQuery)\n    const [authenticateUser] = useMutation(authenticateUserMutation)\n    const [addUser] = useMutation(addUserMutation)\n\n    useEffect(() => {\n        let interval = null\n\n        const handleUserAuth = (user) => {\n            if (usersData) {\n                const existingUser = usersData.users.find(\n                    (existingUser) => existingUser.email === user.email\n                )\n\n                if (existingUser) {\n                    authenticateUser({\n                        variables: {\n                            authId: user.sub,\n                            username: user.nickname,\n                            email: user.email,\n                            picture: user.picture\n                        },\n                        refetchQueries: [{ query: getUsersQuery }]\n                    }).then((response) => {\n                        const token = response.data.authenticateUser.token\n                        const jwt = localStorage.getItem(\"jwtToken\")\n\n                        if (!jwt) {\n                            localStorage.setItem(\"jwtToken\", token)\n                        }\n\n                        if (updateToken) {\n                            updateToken()\n                        }\n                    }).catch((error) => {\n                        console.error(\"Error Authenticating User: \", error)\n                    })\n                } else {\n                    addUser({\n                        variables: {\n                            authId: user.sub,\n                            username: user.nickname,\n                            email: user.email,\n                            picture: user.picture\n                        },\n                        refetchQueries: [{ query: getUsersQuery }]\n                    }).then((response) => {\n                        const jwtToken = response.data.addUser.token\n                        localStorage.setItem(\"jwtToken\", jwtToken)\n                        if (updateToken) {\n                            updateToken()\n                        }\n                    }).catch((error) => {\n                        console.error(\"Error Adding User: \", error)\n                    })\n                }\n            }\n        }\n\n        const checkTimeLeft = () => {\n            const jwtToken = localStorage.getItem(\"jwtToken\")\n            const decodedToken = jwt_decode(jwtToken)\n            const currentTime = Date.now() / 1000\n            const timeLeft = decodedToken.exp - currentTime\n\n            if (timeLeft < 60) {\n                authenticateUser({\n                    variables: {\n                        authId: user.sub,\n                        username: user.nickname,\n                        email: user.email,\n                        picture: user.picture\n                    },\n                    refetchQueries: [{ query: getUsersQuery }]\n                }).then((response) => {\n                    const token = response.data.authenticateUser.token\n                    localStorage.setItem(\"jwtToken\", token)\n                    if (updateToken) {\n                        updateToken()\n                    }\n                }).catch((error) => {\n                    console.error(\"Error Renewing Token: \", error)\n                })\n            }\n        }\n\n        if (isAuthenticated) {\n            handleUserAuth(user)\n            interval = setInterval(checkTimeLeft, 1000)\n        }\n\n        return () => {\n            clearInterval(interval)\n        }\n    }, [user, usersData, isAuthenticated, authenticateUser, addUser, updateToken])\n\n    return null\n}\n\nexport default Auth\n","import React, { useState } from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\"\nimport { ApolloClient, InMemoryCache, ApolloProvider } from \"@apollo/client\"\nimport { Auth0Provider, withAuthenticationRequired } from \"@auth0/auth0-react\"\nimport \"./style/style.css\"\n\nimport Home from \"./components/Home\"\nimport Movies from \"./components/Movies\"\nimport UserMovies from \"./components/UserMovies\"\nimport AddMovie from \"./components/AddMovie\"\nimport EditMovie from \"./components/EditMovie\"\nimport ShowMovie from \"./components/ShowMovie\"\nimport Auth from \"./components/Auth\"\n\nconst App = () => {\n    const [token, setToken] = useState(localStorage.getItem(\"jwtToken\"))\n    const domain = process.env.REACT_APP_AUTH0_DOMAIN\n    const clientId = process.env.REACT_APP_AUTH0_CLIENT_ID\n\n    const updateToken = () => {\n        const localToken = localStorage.getItem(\"jwtToken\")\n        setToken(localToken)\n    }\n\n    const client = new ApolloClient({\n        uri: \"https://moviecrud.onrender.com/graphql\",\n        cache: new InMemoryCache(),\n        headers: {\n            Authorization: token ? `${token}` : \"\",\n        }\n    })\n\n    return (\n        <Auth0Provider domain={domain} clientId={clientId} authorizationParams={{ redirect_uri: window.location.origin + \"/movies\" }}>\n            <ApolloProvider client={client}>\n                <div>\n                    <BrowserRouter>\n                        <Switch>\n                            <Route path=\"/movies/show/:id\" component={withAuthenticationRequired(ShowMovie)} />\n                            <Route path=\"/movies/edit/:id\" component={withAuthenticationRequired(EditMovie)} />\n                            <Route path=\"/movies/add\" component={withAuthenticationRequired(AddMovie)} />\n                            <Route path=\"/movies/userMovies\" component={withAuthenticationRequired(UserMovies)} />\n                            <Route path=\"/movies\" component={withAuthenticationRequired(Movies)} />\n                            <Route exact path=\"/\" component={Home} />\n                        </Switch>\n                    </BrowserRouter>\n                    <Auth updateToken={updateToken}/>\n                </div>\n            </ApolloProvider>\n        </Auth0Provider>\n    )\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}