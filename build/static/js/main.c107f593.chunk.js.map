{"version":3,"sources":["assets/movieCrud.png","serviceWorker.js","components/LogoutButton.js","queries/queries.js","components/Profile.js","components/Navbar.js","components/Movie.js","components/Table.js","components/Main.js","components/AddForm.js","components/EditForm.js","components/Show.js","components/LoginButton.js","components/Homepage.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","LogoutButton","logout","useAuth0","react_default","a","createElement","class","id","onClick","logoutParams","returnTo","origin","getUsersQuery","gql","_templateObject","getUserAuthQuery","_templateObject2","_templateObject3","addUserMutation","_templateObject4","getMoviesQuery","_templateObject5","_templateObject6","_templateObject7","_templateObject8","getMovieQuery","_templateObject9","addMovieMutation","_templateObject10","updateMovieMutation","_templateObject11","deleteMovieMutation","_templateObject12","graphql","_templateObject13","name","props","_useAuth","user","isAuthenticated","isLoading","useEffect","handleCreateUser","console","log","existingUser","users","find","email","variables","authId","sub","username","nickname","picture","refetchQueries","query","then","catch","error","className","role","data-bs-toggle","aria-expanded","src","alt","Navbar","logo","type","data-bs-target","aria-controls","aria-label","Link","to","components_Profile","aria-labelledby","href","components_LogoutButton","compose","movies","undefined","map","movie","editLink","showLink","key","poster_url","title","directors","year","rating","Table","components_Movie","data","filterDelete","components_Navbar","components_Table","options","_useState","useState","_useState2","Object","slicedToArray","redirectToReferrer","setRedirectToReferrer","refetch","userAuth","Redirect","onSubmit","event","preventDefault","target","value","parseInt","posterURL","user_id","required","placeholder","pattern","params","LoginButton","loginWithRedirect","Homepage","components_LoginButton","client","ApolloClient","uri","ReactDOM","render","auth0_react_esm","domain","process","clientId","authorizationParams","redirect_uri","react_common_esm","BrowserRouter","Switch","Route","path","component","Show","EditForm","AddForm","Main","exact","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c107f593.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/movieCrud.a3a7187a.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst LogoutButton = () => {\n    const { logout } = useAuth0();\n    return (\n        <button class=\"dropdown-item\" id=\"logout\" onClick={() => logout({ logoutParams: { returnTo: window.location.origin } })}>\n            Log Out\n        </button>\n    )\n}\n\nexport default LogoutButton;\n","import { gql } from \"apollo-boost\";\n\n//User Queries & Mutations\n\nconst getUsersQuery = gql`\n    {\n        users {\n            id\n            authId\n            username\n            email\n            picture\n        }\n    }\n`;\n\nconst getUserQuery = gql`\n    query GetUser($id: ID!) {\n        user(id: $id) {\n            id\n            authId\n            username\n            email\n            picture\n        }\n    }\n`;\n\nconst getUserAuthQuery = gql`\n    query GetUserAuth($authId: String!) {\n        userAuth(authId: $authId) {\n            id\n            authId\n            username\n            email\n            picture\n        }\n    }\n`;\n\nconst addUserMutation = gql`\n    mutation (\n        $authId: String!\n        $username: String!\n        $email: String!\n        $picture: String!\n    ) {\n        addUser(\n            authId: $authId\n            username: $username\n            email: $email\n            picture: $picture\n        ) {\n            id\n            authId\n            username\n            email\n            picture\n        }\n    }\n`;\n\nconst updateUserMutation = gql`\n    mutation (\n        $id: ID!\n        $authId: String!\n        $username: String!\n        $email: String!\n        $picture: String!\n    ) {\n        updateUser(\n            id: $id\n            authId: $authId\n            username: $username\n            email: $email\n            picture: $picture\n        ) {\n            id\n            authId\n            username\n            email\n            picture\n        }\n    }\n`;\n\nconst deleteUserMutation = gql`\n    mutation ($id: ID!) {\n        deleteUser(id: $id) {\n            id\n            authId\n            username\n            email\n            picture\n        }\n    }\n`;\n\nconst deleteAllUsersMutation = gql`\n    mutation {\n        deleteAllUsers {\n            id\n            authId\n            username\n            email\n            picture\n        }\n    }\n`;\n\n//Movie Queries & Mutations\n\nconst getMoviesQuery = gql`\n    {\n        movies {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n        }\n    }\n`;\n\nconst getMovieQuery = gql`\n    query GetMovie($id: ID!) {\n        movie(id: $id) {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n        }\n    }\n`;\n\nconst addMovieMutation = gql`\n    mutation (\n        $title: String!\n        $directors: String!\n        $year: Int!\n        $rating: Int!\n        $poster_url: String!\n        $user_id: Int!\n    ) {\n        addMovie(\n            title: $title\n            directors: $directors\n            year: $year\n            rating: $rating\n            poster_url: $poster_url\n            user_id: $user_id\n        ) {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n            user_id\n        }\n    }\n`;\n\nconst updateMovieMutation = gql`\n    mutation (\n        $id: ID!\n        $title: String!\n        $directors: String!\n        $year: Int!\n        $rating: Int!\n        $poster_url: String!\n    ) {\n        updateMovie(\n            id: $id\n            title: $title\n            directors: $directors\n            year: $year\n            rating: $rating\n            poster_url: $poster_url\n        ) {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n        }\n    }\n`;\n\nconst deleteMovieMutation = gql`\n    mutation ($id: ID!) {\n        deleteMovie(id: $id) {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n        }\n    }\n`;\n\nconst deleteAllMoviesMutation = gql`\n    mutation {\n        deleteAll {\n            id\n            title\n            directors\n            year\n            rating\n            poster_url\n        }\n    }\n`;\n\nexport {\n    getUsersQuery,\n    getUserQuery,\n    getUserAuthQuery,\n    addUserMutation,\n    updateUserMutation,\n    deleteUserMutation,\n    deleteAllUsersMutation,\n    getMoviesQuery,\n    getMovieQuery,\n    addMovieMutation,\n    updateMovieMutation,\n    deleteMovieMutation,\n    deleteAllMoviesMutation,\n};\n","import React, { useEffect } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { graphql } from \"react-apollo\";\nimport { getUsersQuery, addUserMutation } from \"../queries/queries\";\n\nconst Profile = (props) => {\n    const { user, isAuthenticated, isLoading } = useAuth0();\n\n    useEffect(() => {\n        if (isAuthenticated) {\n            handleCreateUser(user);\n        }\n    }, [isAuthenticated, user]);\n\n    const handleCreateUser = (user) => {\n        console.log(\"Current User: \", user);\n\n        const existingUser = props.getUsersQuery.users.find(\n            (existingUser) => existingUser.email === user.email\n        );\n\n        if (existingUser) {\n            console.log(\"Existing User: \", existingUser);\n            return;\n        } else {\n            props.addUserMutation({\n                variables: {\n                    authId: user.sub,\n                    username: user.nickname,\n                    email: user.email,\n                    picture: user.picture,\n                },\n                refetchQueries: [{ query: getUsersQuery }],\n            }).then(() => {}).catch((error) => {\n                console.error(\"Error Adding User: \", error);\n            });\n        }\n    };\n\n    if (isLoading) {\n        return (\n            <div>\n                <div className=\"spinner-grow text-primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n                <div className=\"spinner-grow text-primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n                <div className=\"spinner-grow text-primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n                <div className=\"spinner-grow text-primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n                <div className=\"spinner-grow text-primary\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n            </div>\n        );\n    }\n\n    if (isAuthenticated) {\n        return (\n            <a\n            className=\"nav-link nav-links profile dropdown-toggle\"\n            role=\"button\"\n            data-bs-toggle=\"dropdown\"\n            aria-expanded=\"false\">\n            <img id=\"userPicture\" src={user.picture} alt={user.name} />\n            {user.name}\n        </a>\n        );\n    }\n\n    return null;\n};\n\nexport default graphql(getUsersQuery, { name: \"getUsersQuery\" })(graphql(addUserMutation, { name: \"addUserMutation\" })(Profile));\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport LogoutButton from \"./LogoutButton\";\nimport Profile from \"./Profile\";\nimport logo from \"../assets/movieCrud.png\";\nimport \"../style/App.css\";\n\nconst Navbar = () => {\n    return (\n        <div className=\"Navbar\">\n            <nav className=\"navbar navbar-expand-lg navBar navbar-dark bg-dark\">\n                <div className=\"container-fluid\">\n                    <div className=\"navbar-brand navBarBrand\">\n                        <img className=\"navLogo\" alt=\"Logo\" src={logo} />\n                    </div>\n                    <button\n                    className=\"navbar-toggler\"\n                    type=\"button\"\n                    data-bs-toggle=\"collapse\"\n                    data-bs-target=\"#navbarNav\"\n                    aria-controls=\"navbarNav\"\n                    aria-expanded=\"false\"\n                    aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link nav-links\" to=\"/main\">\n                                Movies\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link nav-links\" to=\"/movies/new\">\n                                Add To List\n                            </Link>\n                        </li>\n                    </ul>\n                    <ul className=\"navbar-nav\">\n                        <li className=\"nav-item dropdown\">\n                            <Profile />\n                            <ul className=\"dropdown-menu dropdown-menu-dark\" aria-labelledby=\"navbarDropdown\">\n                                <li>\n                                    <a className=\"dropdown-item\" href=\"#\">\n                                        My Movies\n                                    </a>\n                                </li>\n                                <li>\n                                    <a className=\"dropdown-item\" href=\"#\">\n                                        Settings\n                                    </a>\n                                </li>\n                                <li>\n                                    <LogoutButton />\n                                </li>\n                            </ul>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </nav>\n    </div>\n    );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { graphql } from \"react-apollo\";\nimport { getMoviesQuery, deleteMovieMutation } from \"../queries/queries\";\nimport { flowRight as compose } from \"lodash\";\nimport \"../style/App.css\";\n\nconst Movie = (props) => {\n\n    const handleDelete = (id) => {\n        props.deleteMovieMutation({\n            variables: {\n                id: id,\n            },refetchQueries: [{ query: getMoviesQuery }],\n        });\n    };\n\n    const movies = props.getMoviesQuery.movies;\n\n    if (movies !== undefined) {\n        return movies.map((movie) => {\n            const editLink = \"/movies/edit/\" + movie.id;\n            const showLink = \"/movies/show/\" + movie.id;\n            return (\n                <li key={movie.id} className=\"list-group-item d-flex justify-content-between align-items-start movie-item\">\n                    <div className=\"image-box\">\n                        <img className=\"poster-image\" alt=\"poster\" src={movie.poster_url} />\n                    </div>\n                    <div className=\"ms-2 me-auto\">\n                        <div className=\"movie-info\">\n                            <div className=\"fw-bold\">\n                                <Link className=\"title\" to={showLink}>{movie.title}</Link>\n                            </div>\n                            <div>Directors: {movie.directors}</div>\n                            <div>Year: {movie.year}</div>\n                            <div>Rating: {movie.rating}</div>\n                        </div>\n                        <div className=\"movie-buttons\">\n                            <Link to={editLink} className=\"btn btn-primary button\">Edit</Link>\n                            <Link to=\"/main\" className=\"ml-5px btn btn-danger button\" onClick={() => handleDelete(movie.id)}>Delete</Link>\n                        </div>\n                    </div>\n                </li>\n            );\n        });\n    } else {\n        return null;\n    }\n};\n\nexport default compose(\n    graphql(getMoviesQuery, { name: \"getMoviesQuery\" }),\n    graphql(deleteMovieMutation, { name: \"deleteMovieMutation\" })\n)(Movie);\n","import React from \"react\";\nimport Movie from \"./Movie\";\nimport \"../style/App.css\";\n\nconst Table = (props) => {\n    return (\n        <div className=\"table\">\n            <ul className=\"list-group movie-list\">\n                <Movie data={props.data} filterDelete={props.filterDelete} />\n            </ul>\n        </div>\n    );\n};\n\nexport default Table;\n","import React from \"react\";\nimport Navbar from \"./Navbar\";\nimport Table from \"./Table\";\nimport { graphql } from \"react-apollo\";\nimport { getMoviesQuery } from \"../queries/queries\";\nimport { flowRight as compose } from \"lodash\";\nimport \"../style/App.css\";\n\nconst Main = (props) => {\n    const movies = props.getMoviesQuery.movies;\n\n    if (movies !== undefined) {\n        return (\n            <div className=\"App\">\n                <Navbar />\n                <Table />\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"App loader\">\n            <div class=\"spinner-grow text-primary\" role=\"status\">\n                <span class=\"visually-hidden\">Loading...</span>\n            </div>\n            <div class=\"spinner-grow text-primary\" role=\"status\">\n                <span class=\"visually-hidden\">Loading...</span>\n            </div>\n            <div class=\"spinner-grow text-primary\" role=\"status\">\n                <span class=\"visually-hidden\">Loading...</span>\n            </div>\n            <div class=\"spinner-grow text-primary\" role=\"status\">\n                <span class=\"visually-hidden\">Loading...</span>\n            </div>\n            <div class=\"spinner-grow text-primary\" role=\"status\">\n                <span class=\"visually-hidden\">Loading...</span>\n            </div>\n        </div>\n    );\n};\n\nexport default compose(graphql(getMoviesQuery, { name: \"getMoviesQuery\" }))(Main);\n","import React, { useEffect, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport Navbar from \"./Navbar\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { graphql } from \"react-apollo\";\nimport { getMoviesQuery, getUserAuthQuery, addMovieMutation } from \"../queries/queries\";\nimport { flowRight as compose } from \"lodash\";\nimport \"../style/App.css\";\n\nconst AddForm = (props) => {\n    const { user, isAuthenticated } = useAuth0();\n    const [redirectToReferrer, setRedirectToReferrer] = useState(false);\n    const authId = isAuthenticated ? user.sub : \"\";\n\n    useEffect(() => {\n        if (authId) {\n            props.getUserAuthQuery.refetch({ authId });\n        }\n    }, [authId, props.getUserAuthQuery]);\n\n    const userAuth = props.getUserAuthQuery.userAuth;\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const title = event.target.title.value;\n        const directors = event.target.directors.value;\n        const year = parseInt(event.target.year.value);\n        const rating = parseInt(event.target.rating.value);\n        const poster_url = event.target.posterURL.value;\n\n        if (userAuth !== null) {\n            const user_id = parseInt(userAuth.id);\n            props.addMovieMutation({\n                variables: {\n                    title: title,\n                    directors: directors,\n                    year: year,\n                    rating: rating,\n                    poster_url: poster_url,\n                    user_id: user_id\n                },\n                refetchQueries: [{ query: getMoviesQuery }],\n            }).then(() => setRedirectToReferrer(true));\n        }\n    };\n\n    if (redirectToReferrer) {\n        return <Redirect to=\"/main\" />;\n    }\n\n    if(isAuthenticated) {\n        return (\n            <div>\n                <Navbar />\n                <div className=\"AddForm movie-add\">\n                    <form onSubmit={handleSubmit}>\n                        <br />\n                        <label>Add A Movie</label>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"title\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"inputTitle\"\n                            placeholder=\"Title\"/>\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"directors\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"inputDirectors\"\n                            placeholder=\"Directors\"/>\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"year\"\n                            type=\"text\"\n                            pattern=\"[0-9]*\"\n                            title=\"A number value is required.\"\n                            className=\"form-control\"\n                            id=\"inputYear\"\n                            placeholder=\"Year\"/>\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"rating\"\n                            type=\"text\"\n                            pattern=\"[0-9]*\"\n                            title=\"A number value is required.\"\n                            className=\"form-control\"\n                            id=\"inputRating\"\n                            placeholder=\"Rating\"/>\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"posterURL\"\n                            type=\"text\"\n                            pattern=\"https?://.+\"\n                            title=\"A valid URL value is required.\"\n                            className=\"form-control\"\n                            id=\"inputPosterURL\"\n                            placeholder=\"Poster URL\"/>\n                        </div>\n                        <div className=\"movie-buttons\">\n                            <button className=\"btn btn-primary button\" type=\"submit\">\n                                Submit\n                            </button>\n                            <Link to=\"/main\" className=\"btn btn-danger button\">\n                                Cancel\n                            </Link>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    } else {\n        return(\n            <Navbar />\n        );\n    }\n};\n\nexport default compose(\n    graphql(getMoviesQuery, { name: \"getMoviesQuery\" }),\n    graphql(getUserAuthQuery, {\n        options: (props) => {\n            return {\n                variables: {\n                    authId: props.authId\n                }\n            };\n        },\n        name: 'getUserAuthQuery'\n    }),\n    graphql(addMovieMutation, { name: \"addMovieMutation\" })\n)(AddForm);\n","import React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport Navbar from \"./Navbar\";\nimport { graphql } from \"react-apollo\";\nimport { getMoviesQuery, getMovieQuery, updateMovieMutation } from \"../queries/queries\";\nimport { flowRight as compose } from \"lodash\";\nimport \"../style/App.css\";\n\nconst EditForm = (props) => {\n    const [redirectToReferrer, setRedirectToReferrer] = useState(false);\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        const { id } = props.match.params;\n        const title = event.target.title.value;\n        const directors = event.target.directors.value;\n        const year = parseInt(event.target.year.value);\n        const rating = parseInt(event.target.rating.value);\n        const poster_url = event.target.posterURL.value;\n\n        props.updateMovieMutation({\n            variables: {\n                id: id,\n                title: title,\n                directors: directors,\n                year: year,\n                rating: rating,\n                poster_url: poster_url,\n            },\n            refetchQueries: [{ query: getMoviesQuery }],\n        }).then(() => setRedirectToReferrer(true));\n    };\n\n    if (redirectToReferrer) {\n        return <Redirect to=\"/main\" />;\n    }\n\n    const movie = props.data.movie\n\n    if(movie !== undefined) {\n        return (\n            <div>\n                <Navbar />\n                <br />\n                <div className=\"EditForm movie-edit\">\n                    <form onSubmit={handleSubmit}>\n                        <h6>Edit Movie: {movie.title}</h6>\n                        <br />\n                        <img alt=\"Poster URL\" src={movie.poster_url} className=\"poster-url\" />\n                        <br />\n                        <br />\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"title\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"inputTitle\"\n                            placeholder={\"Title: \" + movie.title}/>\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"directors\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"inputDirectors\"\n                            placeholder={\"Director(s): \" + movie.directors}/>\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"year\"\n                            type=\"text\"\n                            pattern=\"[0-9]*\"\n                            title=\"A number value is required.\"\n                            className=\"form-control\"\n                            id=\"inputYear\"\n                            placeholder={\"Year: \" + movie.year}/>\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"rating\"\n                            type=\"text\"\n                            pattern=\"[0-9]*\"\n                            title=\"A number value is required.\"\n                            className=\"form-control\"\n                            id=\"inputRating\"\n                            placeholder={\"Rating: \" + movie.rating}/>\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                            required\n                            name=\"posterURL\"\n                            type=\"text\"\n                            pattern=\"https://.+\"\n                            title=\"A valid URL value is required.\"\n                            className=\"form-control\"\n                            id=\"inputPosterURL\"\n                            placeholder={\"Poster URL: \" + movie.poster_url}/>\n                        </div>\n                        <div class=\"movie-buttons\">\n                            <button className=\"btn btn-primary button\" type=\"submit\">\n                                Edit\n                            </button>\n                            <Link to=\"/main\" className=\"btn btn-danger button\">\n                                Cancel\n                            </Link>\n                        </div>\n                    </form>\n                </div>\n                <br />\n                <br />\n            </div>\n        );\n    } else {\n        return (\n            <div>\n                <Navbar />\n            </div>\n        );\n    }\n\n};\n\nexport default compose(\n    graphql(getMoviesQuery, { name: \"getMoviesQuery\" }),\n    graphql(getMovieQuery, {\n        options: (props) => {\n            return {\n                variables: {\n                    id: props.match.params.id,\n                },\n            };\n        },\n    }),\n    graphql(updateMovieMutation, { name: \"updateMovieMutation\" })\n)(EditForm);\n","import React from \"react\";\nimport Navbar from \"./Navbar\";\nimport { graphql } from \"react-apollo\";\nimport { getMovieQuery } from \"../queries/queries\";\nimport { flowRight as compose } from \"lodash\";\nimport \"../style/App.css\";\n\nconst Show = (props) => {\n    const movie = props.data.movie;\n\n    if (movie !== undefined) {\n        return (\n            <div>\n                <Navbar />\n                <div className=\"movie-show\">\n                    <br />\n                    <img className=\"poster-url\" alt=\"Poster URL\" src={movie.poster_url} />\n                    <br />\n                    <br />\n                    <br />\n                    Title: {movie.title}\n                    <br />\n                    Directors: {movie.directors}\n                    <br />\n                    Year: {movie.year}\n                    <br />\n                    Rating: {movie.rating}\n                    <br />\n                    <br />\n                    <br />\n                </div>\n            </div>\n        );\n    } else {\n        return (\n            <div>\n                <Navbar />\n            </div>\n        );\n    }\n};\n\nexport default compose(\n    graphql(getMovieQuery, {\n        options: (props) => {\n            return {\n                variables: {\n                    id: props.match.params.id\n                }\n            };\n        }\n    })\n)(Show);\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst LoginButton = () => {\n    const { loginWithRedirect } = useAuth0();\n    return (\n        <button className=\"btn btn-primary button\" onClick={() => loginWithRedirect()}>\n            Log In\n        </button>\n    )\n}\n\nexport default LoginButton;\n","import React from \"react\";\nimport logo from \"../assets/movieCrud.png\";\nimport \"../style/App.css\";\nimport LoginButton from \"./LoginButton\";\n\nconst Homepage = () => {\n    return (\n        <div className=\"container\">\n            <img className=\"logo\" alt=\"Logo\" src={logo} />\n            <h1 className=\"app-title\">MovieCrud</h1>\n            <br />\n            <LoginButton />\n        </div>\n    );\n};\n\nexport default Homepage;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport \"./style/index.css\";\n\nimport Main from \"./components/Main\";\nimport AddForm from \"./components/AddForm\";\nimport EditForm from \"./components/EditForm\";\nimport Show from \"./components/Show\";\nimport Homepage from \"./components/Homepage\";\n\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\n\nimport { Auth0Provider } from \"@auth0/auth0-react\";\n\nconst client = new ApolloClient({\n    uri: \"http://localhost:3001/graphql\",\n});\n\nconst domain = process.env.REACT_APP_AUTH0_DOMAIN;\nconst clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\n\nReactDOM.render(\n    <Auth0Provider\n    domain={domain}\n    clientId={clientId}\n    authorizationParams={{\n        redirect_uri: window.location.origin + \"/main\"\n    }}>\n    <ApolloProvider client={client}>\n        <div>\n            <BrowserRouter>\n                <Switch>\n                    <Route path=\"/movies/show/:id\" component={Show} />\n                    <Route path=\"/movies/edit/:id\" component={EditForm} />\n                    <Route path=\"/movies/new\" component={AddForm} />\n                    <Route path=\"/main\" component={Main} />\n                    <Route exact path=\"/\" component={Homepage} />\n                </Switch>\n            </BrowserRouter>\n        </div>\n    </ApolloProvider>\n    </Auth0Provider>,\n    document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}